cscope 15 $HOME/OS_SRT/lab7/proj11_ans               0000518430
	@asm.h

5 
	#SEG_NULLASM
 \

6 .
w‹d
 0, 0; \

7 .
byã
 0, 0, 0, 0

	)

9 
	#SEG_ASM
(
ty≥
,
ba£
,
lim
) \

10 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

11 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

12 (0xC0 | (((
lim
Ë>> 28Ë& 0xf)), (((
ba£
Ë>> 24Ë& 0xff)

	)

14 
	#STA_X
 0x8

15 
	#STA_E
 0x4

16 
	#STA_C
 0x4

17 
	#STA_W
 0x2

18 
	#STA_R
 0x2

19 
	#STA_A
 0x1

	@assert.h

1 #i‚de‡
_ASSERT_H_


2 
	#_ASSERT_H_


	)

4 
	#as£π
(
x
, 
msg
) \

5 dÿ{ i‡(!(
x
)Ë
	`∑nic
(
msg
); } 0)

	)

8 
	#°©ic_as£π
(
x
ËxË0: (x):

	)

	@atomic.h

1 #i‚de‡
_ATOMIC_H_


2 
	#_ATOMIC_H_


	)

4 
	mcou¡
;

5 } 
	t©omic_t
;

	@bio.c

24 
	~"ty≥s.h
"

25 
	~"defs.h
"

26 
	~"∑øm.h
"

27 
	~"•ölock.h
"

28 
	~"buf.h
"

30 
buf
 
	gbuf
[
NBUF
];

31 
•ölock
 
	gbuf_èbÀ_lock
;

36 
buf
 
	gbufhód
;

39 
	$böô
()

41 
buf
 *
b
;

43 
	`öôlock
(&
buf_èbÀ_lock
, "buf_table");

46 
bufhód
.
¥ev
 = &bufhead;

47 
bufhód
.
√xt
 = &bufhead;

48 
b
 = 
buf
; b < buf+
NBUF
; b++){

49 
b
->
√xt
 = 
bufhód
.next;

50 
b
->
¥ev
 = &
bufhód
;

51 
bufhód
.
√xt
->
¥ev
 = 
b
;

52 
bufhód
.
√xt
 = 
b
;

54 
	}
}

59 
buf
*

60 
	$bgë
(
uöt
 
dev
, uöà
£˘‹
)

62 
buf
 *
b
;

64 
	`acquúe
(&
buf_èbÀ_lock
);

66 
lo›
:

68 
b
 = 
bufhód
.
√xt
; b != &bufhead; b = b->next){

69 if((
b
->
Êags
 & (
B_BUSY
|
B_VALID
)) &&

70 
b
->
dev
 =dev && b->
£˘‹
 == sector){

71 if(
b
->
Êags
 & 
B_BUSY
){

72 
	`¶ìp
(
buf
, &
buf_èbÀ_lock
);

73 
lo›
;

75 
b
->
Êags
 |
B_BUSY
;

76 
	`ªÀa£
(&
buf_èbÀ_lock
);

77  
b
;

82 
b
 = 
bufhód
.
¥ev
; b != &bufhead; b = b->prev){

83 if((
b
->
Êags
 & 
B_BUSY
) == 0){

84 
b
->
Êags
 = 
B_BUSY
;

85 
b
->
dev
 = dev;

86 
b
->
£˘‹
 = sector;

87 
	`ªÀa£
(&
buf_èbÀ_lock
);

88  
b
;

91 
	`∑nic
("bget:Ço buffers");

92 
	}
}

95 
buf
*

96 
	$bªad
(
uöt
 
dev
, uöà
£˘‹
)

98 
buf
 *
b
;

100 
b
 = 
	`bgë
(
dev
, 
£˘‹
);

101 if(!(
b
->
Êags
 & 
B_VALID
))

102 
	`ide_rw
(
b
);

103  
b
;

104 
	}
}

108 
	$bwrôe
(
buf
 *
b
)

110 if((
b
->
Êags
 & 
B_BUSY
) == 0)

111 
	`∑nic
("bwrite");

112 
b
->
Êags
 |
B_DIRTY
;

113 
	`ide_rw
(
b
);

114 
	}
}

118 
	$bªl£
(
buf
 *
b
)

120 if((
b
->
Êags
 & 
B_BUSY
) == 0)

121 
	`∑nic
("brelse");

123 
	`acquúe
(&
buf_èbÀ_lock
);

125 
b
->
√xt
->
¥ev
 = b->prev;

126 
b
->
¥ev
->
√xt
 = b->next;

127 
b
->
√xt
 = 
bufhód
.next;

128 
b
->
¥ev
 = &
bufhód
;

129 
bufhód
.
√xt
->
¥ev
 = 
b
;

130 
bufhód
.
√xt
 = 
b
;

132 
b
->
Êags
 &~
B_BUSY
;

133 
	`wakeup
(
buf
);

135 
	`ªÀa£
(&
buf_èbÀ_lock
);

136 
	}
}

	@bootasm.S

1 
	~"asm.h
"

3 #Sèπ 
the
 
fú°
 
CPU
: 
to
 32-
bô
 
¥Ÿe˘ed
 
mode
, 
jump
 
öto
 
C
.

4 #Thê
BIOS
 
lﬂds
 
this
 
code
 
‰om
 
the
 
fú°
 
£˘‹
 
of
Åhê
h¨d
 
disk
 
öto


5 #mem‹y 
©
 
physiˇl
 
addªss
 0x7c00 
™d
 
°¨ts
 
executög
 
ö
 
ªÆ
 
mode


6 #wôh %
cs
=0 %
ù
=7c00.

8 .
£t
 
	gPROT_MODE_CSEG
, 0x8 #kî√»
code
 
£gmít
 
	g£À˘‹


9 .
£t
 
	gPROT_MODE_DSEG
, 0x10 #kî√»
d©a
 
£gmít
 
	g£À˘‹


10 .
£t
 
	gCR0_PE_ON
, 0x1 #¥Ÿe˘ed 
mode
 
íabÀ
 
	gÊag


11 .
£t
 
	gSMAP
, 0x534d4150

13 .
globl
 
°¨t


14 
	g°¨t
:

15 .
code16
 #As£mbÀ 16-
bô
 
mode


16 
˛i
 #DißbÀ 
öãºu±s


17 
˛d
 #Såög 
›î©i⁄s
 
ö¸emít


19 #Së 
up
 
the
 
imp‹è¡
 
d©a
 
£gmít
 
ªgi°îs
 (
DS
, 
ES
, 
SS
).

20 
	gx‹w
 %
	gax
,%ax #Segmíà
numbî
 
zîo


21 
	gmovw
 %
	gax
,%
	gds
 #-> 
D©a
 
Segmít


22 
	gmovw
 %
	gax
,%
	ges
 #-> 
Exåa
 
Segmít


23 
	gmovw
 %
	gax
,%
	gss
 #-> 
Sèck
 
	gSegmít


25 #E«bÀ 
A20
:

26 #F‹ 
backw¨ds
 
com∑tibûôy
 
wôh
 
the
 
óæõ°
 
PCs
, 
physiˇl


27 #addªs†
löe
 20 
is
 
tõd
 
low
, 
so
 
th©
 
addªs£s
 
highî
 
th™


28 #1
MB
 
wøp
 
¨ound
 
to
 
zîo
 
by
 . 
This
 
code
 
und€s
 
this
.

29 
	g£è20
.1:

30 
öb
 
$0x64
,%
	gÆ
 #Waô 
nŸ
 
busy


31 
ã°b
 
	g$0x2
,%
Æ


32 
jnz
 
	g£è20
.1

34 
movb
 
	g$0xd1
,%
	gÆ
 #0
	gxd1
 -> 
	gp‹t
 0x64

35 
	goutb
 %
	gÆ
,
$0x64


37 
	g£è20
.2:

38 
öb
 
$0x64
,%
	gÆ
 #Waô 
nŸ
 
busy


39 
ã°b
 
	g$0x2
,%
Æ


40 
jnz
 
	g£è20
.2

42 
movb
 
	g$0xdf
,%
	gÆ
 #0
	gxdf
 -> 
	gp‹t
 0x60

43 
	goutb
 %
	gÆ
,
$0x60


45 
	g¥obe_mem‹y
:

46 
movl
 
$0
,0x8000

47 
	gx‹l
 %
	gebx
,%
ebx


48 
movw
 
	g$0x8004
,%
di


49 
	g°¨t_¥obe
:

50 
movl
 
$0xE820
,%
óx


51 
movl
 
	g$20
,%
ecx


52 
movl
 
	g$SMAP
,%
edx


53 
$0x15


54 
jnc
 
c⁄t


55 
movw
 
	g$12345
,0x8000

56 
jmp
 
föish_¥obe


57 
	gc⁄t
:

58 
addw
 
$20
,%
di


59 
	gö˛
 0x8000

60 
cm∂
 
	g$0
,%
ebx


61 
jnz
 
°¨t_¥obe


62 
	gföish_¥obe
:

64 #Swôch 
‰om
 
ªÆ
 
to
 
¥Ÿe˘ed
 
mode
, 
usög
 
a
 
boŸ°øp
 
GDT


65 #™d 
£gmít
 
å™¶©i⁄
 
th©
 
makes
 
vútuÆ
 
addªs£s


66 #idítiˇ»
to
 
physiˇl
 
addªs£s
, 
so
 
th©
 
the


67 #ef„˘ivê
mem‹y
 
m≠
 
d€s
 
nŸ
 
ch™ge
 
durög
 
the
 .

68 
lgdt
 
gdtdesc


69 
	gmovl
 %
	g¸0
, %
óx


70 
‹l
 
	g$CR0_PE_ON
, %
óx


71 
	gmovl
 %
	góx
, %
	g¸0


73 #Jum∞
to
 
√xt
 
ö°ru˘i⁄
, 
but
 
ö
 32-
bô
 
code
 
£gmít
.

74 #Swôche†
¥o˚ss‹
 
öto
 32-
bô
 
mode
.

75 
ljmp
 
	g$PROT_MODE_CSEG
, 
	g$¥Ÿc£g


77 .
	gcode32
 #As£mbÀ 32-
bô
 
mode


78 
	g¥Ÿc£g
:

79 #Së 
up
 
the
 
¥Ÿe˘ed
-
mode
 
d©a
 
£gmít
 
ªgi°îs


80 
movw
 
$PROT_MODE_DSEG
, %
	gax
 #Ou∏
d©a
 
£gmít
 
£À˘‹


81 
	gmovw
 %
	gax
, %
	gds
 #-> 
	gDS
: 
D©a
 
Segmít


82 
movw
 %
ax
, %
	ges
 #-> 
	gES
: 
Exåa
 
Segmít


83 
movw
 %
ax
, %
	gfs
 #-> 
FS


84 
	gmovw
 %
	gax
, %
	ggs
 #-> 
GS


85 
	gmovw
 %
	gax
, %
	gss
 #-> 
	gSS
: 
Sèck
 
Segmít


87 #Së 
up
 
the
 
°ack
 
poöãr
 
™d
 
ˇŒ
 
öto
 
C
.

88 
movl
 
$°¨t
, %
e•


89 
ˇŒ
 
	gboŸmaö


91 #I‡
boŸmaö
 
ªtu∫s
 (
ô
 
shouldn
't),Üoop.

92 
•ö
:

93 
jmp
 
•ö


95 #BoŸ°ø∞
GDT


96 .
p2Æign
 2 #f‹˚ 4 
byã
 
Æignmít


97 
gdt
:

98 
SEG_NULLASM
 #nuŒ 
£g


99 
SEG_ASM
(
STA_X
|
STA_R
, 0x0, 0xffffffffË#codê
£g


100 
	$SEG_ASM
(
STA_W
, 0x0, 0xffffffffË#d©®
£g


102 
gdtdesc
:

103 .
w‹d
 0x17 #sizeof(
gdt
) - 1

104 .
gdt
 #address gdt

	@bootmain.c

8 
	~"ty≥s.h
"

9 
	~"ñf.h
"

10 
	~"x86.h
"

12 
	#SECTSIZE
 512

	)

14 
ªad£g
(
uöt
, uint, uint);

17 
	$boŸmaö
()

19 
ñfhdr
 *
ñf
;

20 
¥oghdr
 *
ph
, *
ïh
;

21 (*
íåy
)();

23 
ñf
 = (
ñfhdr
*)0x10000;

26 
	`ªad£g
((
uöt
)
ñf
, 
SECTSIZE
*8, 0);

29 if(
ñf
->
magic
 !
ELF_MAGIC
)

30 
bad
;

33 
ph
 = (
¥oghdr
*)((
uch¨
*)
ñf
 +Élf->
phoff
);

34 
ïh
 = 
ph
 + 
ñf
->
phnum
;

35 ; 
ph
 < 
ïh
;Öh++)

36 
	`ªad£g
(
ph
->
va
 & 0xFFFFFF,Öh->
memsz
,Öh->
off£t
);

40 
íåy
 = ((*)())(
ñf
->entry & 0xFFFFFF);

41 
	`íåy
();

43 
bad
:

44 
	`outw
(0x8A00, 0x8A00);

45 
	`outw
(0x8A00, 0x8E00);

48 
	}
}

51 
	$waôdisk
()

54 (
	`öb
(0x1F7) & 0xC0) != 0x40)

56 
	}
}

60 
	$ªad£˘
(*
d°
, 
uöt
 
off£t
)

63 
	`waôdisk
();

64 
	`outb
(0x1F2, 1);

65 
	`outb
(0x1F3, 
off£t
);

66 
	`outb
(0x1F4, 
off£t
 >> 8);

67 
	`outb
(0x1F5, 
off£t
 >> 16);

68 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

69 
	`outb
(0x1F7, 0x20);

72 
	`waôdisk
();

73 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

74 
	}
}

79 
	$ªad£g
(
uöt
 
va
, uöà
cou¡
, uöà
off£t
)

81 
uöt
 
eva
;

83 
eva
 = 
va
 + 
cou¡
;

86 
va
 &~(
SECTSIZE
 - 1);

89 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

94 ; 
va
 < 
eva
; v®+
SECTSIZE
, 
off£t
++)

95 
	`ªad£˘
((
uch¨
*)
va
, 
off£t
);

96 
	}
}

	@bootother.S

1 
	~"asm.h
"

3 #Each 
n⁄
-
boŸ
 
CPU
 ("AP"Ë
is
 
°¨ãd
 
up
 
ö
 
ª•⁄£
 
to
 
a
 
STARTUP


4 #IPI 
‰om
 
the
 
boŸ
 
CPU
. 
Se˘i⁄
 
B
.4.2 
of
Åhê
Mu…i
-
Pro˚ss‹


5 #S≥cifiˇti⁄ 
ßys
 
th©
 
the
 
AP
 
wûl
 
°¨t
 
ö
 
ªÆ
 
mode
 
wôh
 
CS
:
IP


6 #£à
to
 
XY00
:0000, 
whîe
 
XY
 
is
 
™
 8-
bô
 
vÆue
 
£¡
 
wôh
 
the


7 #STARTUP. 
Thus
 
this
 
code
 
mu°
 
°¨t
 
©
 
a
 4096-
byã
 
bound¨y
.

8 #
#Beˇu£ 
this
 
code
 
£ts
 
DS
 
to
 
zîo
, 
ô
 
mu°
 
sô


9 #© 
™
 
addªss
 
ö
 
the
 
low
 2^16 
byãs
.

10 #
#BoŸŸhî†(
ö
 
maö
.
c
Ë
£nds
 
the
 
STARTUPs
, 
⁄e
 
©
 
a
 
time
.

11 #Ià
puts
 
this
 
code
 (
°¨t
Ë
©
 0x7000.

12 #Ià
puts
 
the
 
c‹ª˘
 %
e•
 
ö
 
°¨t
-4,

13 #™d 
the
 
∂a˚
 
to
 
jump
Åÿ
ö
 
°¨t
-8.

14 #
#Thi†
code
 
is
 
idítiˇl
 
to
 
boŸasm
.
S
 
ex˚±
:

15 #- 
ô
 
d€s
 
nŸ
 
√ed
 
to
 
íabÀ
 
A20


16 #- 
ô
 
u£s
 
the
 
addªss
 
©
 
°¨t
-4 thê%
e•


17 #- 
ô
 
jumps
 
to
 
the
 
addªss
 
©
 
°¨t
-8 
ö°ód
 
of
 
ˇŒög
 
boŸmaö


19 .
£t
 
	gPROT_MODE_CSEG
, 0x8 #kî√»
code
 
£gmít
 
	g£À˘‹


20 .
£t
 
	gPROT_MODE_DSEG
, 0x10 #kî√»
d©a
 
£gmít
 
	g£À˘‹


21 .
£t
 
	gCR0_PE_ON
, 0x1 #¥Ÿe˘ed 
mode
 
íabÀ
 
	gÊag


23 .
globl
 
°¨t


24 
	g°¨t
:

25 .
code16
 #As£mbÀ 16-
bô
 
mode


26 
˛i
 #DißbÀ 
öãºu±s


27 
˛d
 #Såög 
›î©i⁄s
 
ö¸emít


29 #Së 
up
 
the
 
imp‹è¡
 
d©a
 
£gmít
 
ªgi°îs
 (
DS
, 
ES
, 
SS
).

30 
	gx‹w
 %
	gax
,%ax #Segmíà
numbî
 
zîo


31 
	gmovw
 %
	gax
,%
	gds
 #-> 
D©a
 
Segmít


32 
	gmovw
 %
	gax
,%
	ges
 #-> 
Exåa
 
Segmít


33 
	gmovw
 %
	gax
,%
	gss
 #-> 
Sèck
 
	gSegmít


35 #Swôch 
‰om
 
ªÆ
 
to
 
¥Ÿe˘ed
 
mode
, 
usög
 
a
 
boŸ°øp
 
GDT


36 #™d 
£gmít
 
å™¶©i⁄
 
th©
 
makes
 
vútuÆ
 
addªs£s


37 #idítiˇ»
to
 
theú
 
physiˇl
 
addªs£s
, 
so
 
th©
 
the


38 #ef„˘ivê
mem‹y
 
m≠
 
d€s
 
nŸ
 
ch™ge
 
durög
 
the
 .

39 
lgdt
 
gdtdesc


40 
	gmovl
 %
	g¸0
, %
óx


41 
‹l
 
	g$CR0_PE_ON
, %
óx


42 
	gmovl
 %
	góx
, %
	g¸0


44 #Jum∞
to
 
√xt
 
ö°ru˘i⁄
, 
but
 
ö
 32-
bô
 
code
 
£gmít
.

45 #Swôche†
¥o˚ss‹
 
öto
 32-
bô
 
mode
.

46 
ljmp
 
	g$PROT_MODE_CSEG
, 
	g$¥Ÿc£g


48 .
	gcode32
 #As£mbÀ 32-
bô
 
mode


49 
	g¥Ÿc£g
:

50 #Së 
up
 
the
 
¥Ÿe˘ed
-
mode
 
d©a
 
£gmít
 
ªgi°îs


51 
movw
 
$PROT_MODE_DSEG
, %
	gax
 #Ou∏
d©a
 
£gmít
 
£À˘‹


52 
	gmovw
 %
	gax
, %
	gds
 #-> 
	gDS
: 
D©a
 
Segmít


53 
movw
 %
ax
, %
	ges
 #-> 
	gES
: 
Exåa
 
Segmít


54 
movw
 %
ax
, %
	gfs
 #-> 
FS


55 
	gmovw
 %
	gax
, %
	ggs
 #-> 
GS


56 
	gmovw
 %
	gax
, %
	gss
 #-> 
	gSS
: 
Sèck
 
Segmít


58 
movl
 
°¨t
-4, %
e•


59 
movl
 
	g°¨t
-8, %
óx


60 
	gjmp
 *%
	góx


62 #BoŸ°ø∞
GDT


63 .
	gp2Æign
 2 #f‹˚ 4 
byã
 
Æignmít


64 
	ggdt
:

65 
SEG_NULLASM
 #nuŒ 
£g


66 
SEG_ASM
(
STA_X
|
STA_R
, 0x0, 0xffffffffË#codê
£g


67 
	$SEG_ASM
(
STA_W
, 0x0, 0xffffffffË#d©®
£g


69 
gdtdesc
:

70 .
w‹d
 0x17 #sizeof(
gdt
) - 1

71 .
gdt
 #address gdt

	@buddy.c

1 
	~"buddy.h
"

2 
	~"defs.h
"

4 
‰ì_¨ó_t
 
	g‰ì_¨ó
[
MAX_ORDER
];

5 
Page
 * 
	gmem_m≠
;

6 c⁄° 
	gFªeAªaSize
[
MAX_ORDER
] = {1,2,4,8,16,32,64,128,256,512,1024};

7 
ã°_buddy
();

12 
	$∑ge_is_buddy
(
Page
 * 
∑ge
, 
‹dî
)

14 i‡(
	`PagePr›îty
(
∑ge
Ë&&Öage->
¥›îty
 =
‹dî
 && !
	`PageRe£rved
(page))

17 
	}
}

20 
	$öô_memm≠
(
Page
 * 
ba£
, 
ƒ
)

22 
i
,
‹dî
;

23 
Page
 * 
∑ge
 = 
ba£
;

24 
mem_m≠
 = 
ba£
;

25 
i
 = 0; i < 
MAX_ORDER
; i++) {

26 i‡(!
	`LIST_EMPTY
(&(
‰ì_¨ó
[
i
].
‰ì_li°
)))

27 
	`∑nic
("error");

29 
ƒ
) {

30 
‹dî
 = 10; order >=0; order --) {

31 i‡(
ƒ
 >
FªeAªaSize
[
‹dî
]) {

32 
	`LIST_INSERT_HEAD
(&(
‰ì_¨ó
[
‹dî
].
‰ì_li°
), 
∑ge
, 
Ãu
);

33 
‰ì_¨ó
[
‹dî
].
ƒ_‰ì
 ++;

34 
∑ge
->
¥›îty
 = 
‹dî
;

35 
ƒ
 -
FªeAªaSize
[
‹dî
];

36 
∑ge
 +
FªeAªaSize
[
‹dî
];

42 
	}
}

44 
Page
 *

45 
	$__Æloc_∑ges
(
ƒ
)

47 
i
;

48 
Page
 * 
p
;

49 
i
 = 0; i < 
MAX_ORDER
; i++) {

50 i‡(
ƒ
 <
FªeAªaSize
[
i
]) {

51 
p
 = 
	`Æloc_∑ges_bulk
(
i
);

52 
	`dbmsg
("˝u %x kÆlo¯%x : ordî %d;\n",
	`˝u
(), 
p
 - 
∑ges
, 
i
);

53  
p
;

56  
NULL
;

57 
	}
}

60 
Page
 *

61 
	$Æloc_∑ges_bulk
(
‹dî
)

63 
ißŒoc
 = 0;

64 
cuºít_‹dî
, 
size
 = 0;

66 
Page
 * 
∑ge
 = 
NULL
, * 
buddy
 = NULL;

69 
cuºít_‹dî
 = 
‹dî
; cuºít_‹dî < 
MAX_ORDER
; current_order ++) {

70 i‡(!
	`LIST_EMPTY
(&(
‰ì_¨ó
[
cuºít_‹dî
].
‰ì_li°
))) {

71 
ißŒoc
 = 1;

76 i‡(!
ißŒoc
)

77  
NULL
;

79 
∑ge
 = 
	`LIST_FIRST
(&(
‰ì_¨ó
[
cuºít_‹dî
].
‰ì_li°
));

81 
	`LIST_REMOVE
(
∑ge
, 
Ãu
);

82 
∑ge
->
¥›îty
 = 0;

83 
	`CÀ¨PagePr›îty
(
∑ge
);

84 
‰ì_¨ó
[
cuºít_‹dî
].
ƒ_‰ì
 --;

87 
size
 = 1 << 
cuºít_‹dî
;

88 
cuºít_‹dî
 > 
‹dî
) {

89 
cuºít_‹dî
 --;

90 
size
 >>= 1;

91 
buddy
 = 
∑ge
 + 
size
;

93 
	`LIST_INSERT_HEAD
(&(
‰ì_¨ó
[
cuºít_‹dî
].
‰ì_li°
), 
buddy
, 
Ãu
);

94 
buddy
->
¥›îty
 = 
cuºít_‹dî
;

95 
	`SëPagePr›îty
(
buddy
);

96 
‰ì_¨ó
[
cuºít_‹dî
].
ƒ_‰ì
 ++;

99  
∑ge
;

100 
	}
}

103 
	$__‰ì_∑ges
(
Page
 * 
∑ge
, 
ƒ
)

105 
i
;

106 
i
 = 0; i < 
MAX_ORDER
; i++) {

107 i‡(
ƒ
 <
FªeAªaSize
[
i
]) {

108 
	`dbmsg
("k‰ì %x : ordî %d\n",
∑ge
 - 
∑ges
, 
i
);

109 
	`‰ì_∑ges_bulk
(
∑ge
, 
i
);

113 
	}
}

117 
	$‰ì_∑ges_bulk
(
Page
 * 
∑ge
, 
‹dî
)

119 
size
 = 1 << 
‹dî
;

120 
∑ge_idx
 = 
∑ge
 - 
mem_m≠
, 
buddy_idx
;

121 
Page
 * 
buddy
, * 
cﬂÀs˚d
;

122 
‹dî
 < 10) {

128 
buddy_idx
 = 
∑ge_idx
 ^ 
size
;

129 
buddy
 = &
mem_m≠
[
buddy_idx
];

130 i‡(!
	`∑ge_is_buddy
(
buddy
, 
‹dî
))

132 
	`LIST_REMOVE
(
buddy
, 
Ãu
);

133 
‰ì_¨ó
[
‹dî
].
ƒ_‰ì
 --;

134 
buddy
->
¥›îty
 = 0;

135 
	`CÀ¨PagePr›îty
(
buddy
);

136 
∑ge_idx
 &
buddy_idx
;

137 
‹dî
 ++;

139 
cﬂÀs˚d
 = &
mem_m≠
[
∑ge_idx
];

140 
	`dbmsg
("‰ì ordî %x,Öagê%x\n", 
‹dî
, 
cﬂÀs˚d
 - 
∑ges
);

141 
cﬂÀs˚d
->
¥›îty
 = 
‹dî
;

142 
	`SëPagePr›îty
(
cﬂÀs˚d
);

143 
	`LIST_INSERT_HEAD
(&(
‰ì_¨ó
[
‹dî
].
‰ì_li°
), 
cﬂÀs˚d
, 
Ãu
);

144 
‰ì_¨ó
[
‹dî
].
ƒ_‰ì
 ++;

145 
	}
}

148 
	$¥öt_buddy
()

150 
i
;

151 
i
 = 0; i < 
MAX_ORDER
; i++)

152 
	`˝rötf
("buddy %d : %x blocks; ",
i
,
‰ì_¨ó
[i].
ƒ_‰ì
);

153 
	`˝rötf
("\n");

154 
	}
}

157 
	$ã°_buddy
()

159 
Page
 * 
a1
, * 
a2
;

160 
	`¥öt_buddy
();

161 
a1
 = 
	`Æloc_∑ges_bulk
(8);

162 
a2
 = 
	`Æloc_∑ges_bulk
(8);

163 
	`¥öt_buddy
();

164 
	`‰ì_∑ges_bulk
(
a1
, 8);

165 
	`¥öt_buddy
();

166 
	`‰ì_∑ges_bulk
(
a2
, 8);

167 
	`¥öt_buddy
();

168 
	}
}

	@buddy.h

1 #i‚de‡
_BUDDY_H_


2 
	#_BUDDY_H_


	)

3 
	~"pm≠.h
"

5 
	#MAX_ORDER
 11

	)

7 
	s‰ì_¨ó
 {

8 
∑ge_li°_hód_t
 
	m‰ì_li°
;

9 
	mƒ_‰ì
;

10 } 
	t‰ì_¨ó_t
;

12 
öô_memm≠
(
Page
 * 
ba£
, 
ƒ
);

14 
Page
 * 
mem_m≠
;

15 
Page
 * 
__Æloc_∑ges
(
ƒ
);

16 
__‰ì_∑ges
(
Page
 * 
∑ge
, 
ƒ
);

17 
Page
 * 
Æloc_∑ges_bulk
(
‹dî
);

18 
‰ì_∑ges_bulk
(
Page
 * 
∑ge
, 
‹dî
);

	@buf.h

1 
	sbuf
 {

2 
	mÊags
;

3 
uöt
 
	mdev
;

4 
uöt
 
	m£˘‹
;

5 
buf
 *
	m¥ev
;

6 
buf
 *
	m√xt
;

7 
buf
 *
	mq√xt
;

8 
uch¨
 
	md©a
[512];

10 
	#B_BUSY
 0x1

11 
	#B_VALID
 0x2

12 
	#B_DIRTY
 0x4

13 

	)

	@cat.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

5 
	gbuf
[512];

8 
	$ˇt
(
fd
)

10 
n
;

12 (
n
 = 
	`ªad
(
fd
, 
buf
, (buf))) > 0)

13 
	`wrôe
(1, 
buf
, 
n
);

14 if(
n
 < 0){

15 
	`¥ötf
(1, "cat:ÑeadÉrror\n");

16 
	`exô
();

18 
	}
}

21 
	$maö
(
¨gc
, *
¨gv
[])

23 
fd
, 
i
;

25 if(
¨gc
 <= 1){

26 
	`ˇt
(0);

27 
	`exô
();

30 
i
 = 1; i < 
¨gc
; i++){

31 if((
fd
 = 
	`›í
(
¨gv
[
i
], 0)) < 0){

32 
	`¥ötf
(1, "ˇt: c™nŸ o≥¿%s\n", 
¨gv
[
i
]);

33 
	`exô
();

35 
	`ˇt
(
fd
);

36 
	`˛o£
(
fd
);

38 
	`exô
();

39 
	}
}

	@console.c

5 
	~"ty≥s.h
"

6 
	~"defs.h
"

7 
	~"∑øm.h
"

8 
	~"å≠s.h
"

9 
	~"•ölock.h
"

10 
	~"dev.h
"

11 
	~"mmu.h
"

12 
	~"¥oc.h
"

13 
	~"x86.h
"

15 
	#CRTPORT
 0x3d4

	)

16 
	#LPTPORT
 0x378

	)

17 
	#BACKSPACE
 0x100

	)

19 
ush‹t
 *
	g¸t
 = (ushort*)0xb8000;

21 
•ölock
 
	gc⁄sﬁe_lock
;

22 
	g∑nicked
 = 0;

23 
	gu£_c⁄sﬁe_lock
 = 0;

29 
	$Õt_putc
(
c
)

31 
i
;

33 
i
 = 0; !(
	`öb
(
LPTPORT
+1) & 0x80) && i < 12800; i++)

35 if(
c
 =
BACKSPACE
)

36 
c
 = '\b';

37 
	`outb
(
LPTPORT
+0, 
c
);

38 
	`outb
(
LPTPORT
+2, 0x08|0x04|0x01);

39 
	`outb
(
LPTPORT
+2, 0x08);

40 
	}
}

43 
	$cga_putc
(
c
)

45 
pos
;

48 
	`outb
(
CRTPORT
, 14);

49 
pos
 = 
	`öb
(
CRTPORT
+1) << 8;

50 
	`outb
(
CRTPORT
, 15);

51 
pos
 |
	`öb
(
CRTPORT
+1);

53 if(
c
 == '\n')

54 
pos
 += 80 -Öos%80;

55 if(
c
 =
BACKSPACE
){

56 if(
pos
 > 0)

57 
¸t
[--
pos
] = ' ' | 0x0700;

59 
¸t
[
pos
++] = (
c
&0xff) | 0x0700;

61 if((
pos
/80) >= 24){

62 
	`memmove
(
¸t
, crt+80, (crt[0])*23*80);

63 
pos
 -= 80;

64 
	`mem£t
(
¸t
+
pos
, 0, (crt[0])*(24*80 -Öos));

67 
	`outb
(
CRTPORT
, 14);

68 
	`outb
(
CRTPORT
+1, 
pos
>>8);

69 
	`outb
(
CRTPORT
, 15);

70 
	`outb
(
CRTPORT
+1, 
pos
);

71 
¸t
[
pos
] = ' ' | 0x0700;

72 
	}
}

75 
	$c⁄s_putc
(
c
)

77 if(
∑nicked
){

78 
	`˛i
();

83 
	`Õt_putc
(
c
);

84 
	`cga_putc
(
c
);

85 
	}
}

88 
	$¥ötöt
(
xx
, 
ba£
, 
sgn
)

90 
digôs
[] = "0123456789ABCDEF";

91 
buf
[16];

92 
i
 = 0, 
√g
 = 0;

93 
uöt
 
x
;

95 if(
sgn
 && 
xx
 < 0){

96 
√g
 = 1;

97 
x
 = 0 - 
xx
;

99 
x
 = 
xx
;

103 
buf
[
i
++] = 
digôs
[
x
 % 
ba£
];

104 }(
x
 /
ba£
) != 0);

105 if(
√g
)

106 
buf
[
i
++] = '-';

108 --
i
 >= 0)

109 
	`c⁄s_putc
(
buf
[
i
]);

110 
	}
}

114 
	$˝rötf
(*
fmt
, ...)

116 
i
, 
c
, 
°©e
, 
lockög
;

117 
uöt
 *
¨gp
;

118 *
s
;

120 
lockög
 = 
u£_c⁄sﬁe_lock
;

121 if(
lockög
)

122 
	`acquúe
(&
c⁄sﬁe_lock
);

124 
¨gp
 = (
uöt
*)(*)&
fmt
 + 1;

125 
°©e
 = 0;

126 
i
 = 0; 
fmt
[i]; i++){

127 
c
 = 
fmt
[
i
] & 0xff;

128 
°©e
){

130 if(
c
 == '%')

131 
°©e
 = '%';

133 
	`c⁄s_putc
(
c
);

137 
c
){

139 
	`¥ötöt
(*
¨gp
++, 10, 1);

143 
	`¥ötöt
(*
¨gp
++, 16, 0);

146 
s
 = (*)*
¨gp
++;

147 if(
s
 == 0)

148 
s
 = "(null)";

149 ; *
s
; s++)

150 
	`c⁄s_putc
(*
s
);

153 
	`c⁄s_putc
('%');

157 
	`c⁄s_putc
('%');

158 
	`c⁄s_putc
(
c
);

161 
°©e
 = 0;

166 if(
lockög
)

167 
	`ªÀa£
(&
c⁄sﬁe_lock
);

168 
	}
}

171 
	$c⁄sﬁe_wrôe
(
öode
 *
ù
, *
buf
, 
n
)

173 
i
;

175 
	`iu∆ock
(
ù
);

176 
	`acquúe
(&
c⁄sﬁe_lock
);

177 
i
 = 0; i < 
n
; i++)

178 
	`c⁄s_putc
(
buf
[
i
] & 0xff);

179 
	`ªÀa£
(&
c⁄sﬁe_lock
);

180 
	`ûock
(
ù
);

182  
n
;

183 
	}
}

185 
	#INPUT_BUF
 128

	)

187 
•ölock
 
	mlock
;

188 
	mbuf
[
INPUT_BUF
];

189 
uöt
 
	mr
;

190 
uöt
 
	mw
;

191 
uöt
 
	me
;

192 } 
	göput
;

194 
	#C
(
x
) ((x)-'@')

195 

	)

197 
c⁄sﬁe_öå
((*
gëc
)())

199 
c
;

201 
	`acquúe
(&
öput
.
lock
);

202 (
c
 = 
	`gëc
()) >= 0){

203 
c
){

204 
	`C
('P'):

205 
	`¥ocdump
();

207 
	`C
('U'):

208 
öput
.
e
 !öput.
w
 &&

209 
öput
.
buf
[(öput.
e
-1Ë% 
INPUT_BUF
] != '\n'){

210 
öput
.
e
--;

211 
	`c⁄s_putc
(
BACKSPACE
);

214 
	`C
('H'):

215 if(
öput
.
e
 !öput.
w
){

216 
öput
.
e
--;

217 
	`c⁄s_putc
(
BACKSPACE
);

221 if(
c
 !0 && 
öput
.
e
-öput.
r
 < 
INPUT_BUF
){

222 
öput
.
buf
[öput.
e
++ % 
INPUT_BUF
] = 
c
;

223 
	`c⁄s_putc
(
c
);

224 if(
c
 ='\n' || c =
	`C
('D'Ë|| 
öput
.
e
 =öput.
r
+
INPUT_BUF
){

225 
öput
.
w
 = i≈ut.
e
;

226 
	`wakeup
(&
öput
.
r
);

232 
	`ªÀa£
(&
öput
.
lock
);

233 
	}
}

236 
	$c⁄sﬁe_ªad
(
öode
 *
ù
, *
d°
, 
n
)

238 
uöt
 
èrgë
;

239 
c
;

241 
	`iu∆ock
(
ù
);

242 
èrgë
 = 
n
;

243 
	`acquúe
(&
öput
.
lock
);

244 
n
 > 0){

245 
öput
.
r
 =öput.
w
){

246 if(
˝
->
kûÀd
){

247 
	`ªÀa£
(&
öput
.
lock
);

248 
	`ûock
(
ù
);

251 
	`¶ìp
(&
öput
.
r
, &öput.
lock
);

253 
c
 = 
öput
.
buf
[öput.
r
++ % 
INPUT_BUF
];

254 if(
c
 =
	`C
('D')){

255 if(
n
 < 
èrgë
){

258 
öput
.
r
--;

262 *
d°
++ = 
c
;

263 --
n
;

264 if(
c
 == '\n')

267 
	`ªÀa£
(&
öput
.
lock
);

268 
	`ûock
(
ù
);

270  
èrgë
 - 
n
;

271 
	}
}

274 
	$c⁄sﬁe_öô
()

276 
	`öôlock
(&
c⁄sﬁe_lock
, "console");

277 
	`öôlock
(&
öput
.
lock
, "console input");

279 
devsw
[
CONSOLE
].
wrôe
 = 
c⁄sﬁe_wrôe
;

280 
devsw
[
CONSOLE
].
ªad
 = 
c⁄sﬁe_ªad
;

281 
u£_c⁄sﬁe_lock
 = 1;

283 
	`pic_íabÀ
(
IRQ_KBD
);

284 
	`iﬂpic_íabÀ
(
IRQ_KBD
, 0);

285 
	}
}

288 
	$∑nic
(*
s
)

290 
i
;

291 
uöt
 
pcs
[10];

293 
__asm
 
	`__vﬁ©ûe
("cli");

294 
u£_c⁄sﬁe_lock
 = 0;

295 
	`˝rötf
("˝u%d:Ö™ic: ", 
	`˝u
());

296 
	`˝rötf
(
s
);

297 
	`˝rötf
("\n");

298 
	`gëˇŒîpcs
(&
s
, 
pcs
);

299 
i
=0; i<10; i++)

300 
	`˝rötf
(" %p", 
pcs
[
i
]);

301 
∑nicked
 = 1;

304 
	}
}

	@defs.h

1 #i‚de‡
_DEFS_H_


2 
	#_DEFS_H_


	)

3 
	gbuf
;

4 
	gc⁄ãxt
;

5 
	gfûe
;

6 
	göode
;

7 
	gpùe
;

8 
	g¥oc
;

9 
	g•ölock
;

10 
	g°©
;

13 
böô
();

14 
buf
* 
bªad
(
uöt
, uint);

15 
bªl£
(
buf
*);

16 
bwrôe
(
buf
*);

19 
c⁄sﬁe_öô
();

20 
˝rötf
(*, ...);

21 
c⁄sﬁe_öå
((*)());

22 
	$∑nic
(*Ë
	`__©åibuã__
((
n‹ëu∫
));

25 
	`exec
(*, **);

28 
fûe
* 
	`fûóŒoc
();

29 
	`fûe˛o£
(
fûe
*);

30 
fûe
* 
	`fûedup
(file*);

31 
	`fûeöô
();

32 
	`fûîód
(
fûe
*, *, 
n
);

33 
	`fûe°©
(
fûe
*, 
°©
*);

34 
	`fûewrôe
(
fûe
*, *, 
n
);

37 
	`dúlök
(
öode
*, *, 
uöt
);

38 
öode
* 
	`dúlookup
(öode*, *, 
uöt
*);

39 
öode
* 
	`üŒoc
(
uöt
, );

40 
öode
* 
	`idup
(inode*);

41 
	`iöô
();

42 
	`ûock
(
öode
*);

43 
	`ùut
(
öode
*);

44 
	`iu∆ock
(
öode
*);

45 
	`iu∆ockput
(
öode
*);

46 
	`iupd©e
(
öode
*);

47 
	`«mecmp
(const *, const *);

48 
öode
* 
	`«mei
(*);

49 
öode
* 
	`«meù¨ít
(*, *);

50 
	`ªadi
(
öode
*, *, 
uöt
, uint);

51 
	`°©i
(
öode
*, 
°©
*);

52 
	`wrôei
(
öode
*, *, 
uöt
, uint);

55 
	`ide_öô
();

56 
	`ide_öå
();

57 
	`ide_rw
(
buf
 *);

60 
	`iﬂpic_íabÀ
(
úq
, 
˝u
);

61 
uch¨
 
iﬂpic_id
;

62 
	`iﬂpic_öô
();

65 * 
	`kÆloc
();

66 
	`k‰ì
(*, );

67 
	`köô
();

70 
	`kbd_öå
();

73 
	`˝u
();

74 vﬁ©ûê
uöt
* 
œpic
;

75 
	`œpic_eoi
();

76 
	`œpic_öô
();

77 
	`œpic_°¨èp
(
uch¨
, 
uöt
);

80 
ismp
;

81 
	`mp_b˝u
();

82 
	`mp_öô
();

83 
	`mp_°¨âhem
();

86 
	`pic_íabÀ
();

87 
	`pic_öô
();

90 
	`pùóŒoc
(
fûe
**, file**);

91 
	`pùe˛o£
(
pùe
*, );

92 
	`pùîód
(
pùe
*, *, );

93 
	`pùewrôe
(
pùe
*, *, );

96 
¥oc
* 
	`c›y¥oc
(proc*);

97 
¥oc
* 
	`cuΩroc
();

98 
	`exô
();

99 
	`grow¥oc
();

100 
	`kûl
();

101 
	`pöô
();

102 
	`¥ocdump
();

103 
	$runIdÀ
(Ë
	`__©åibuã__
((
n‹ëu∫
));

104 
	`£tup£gs
(
¥oc
*);

105 
	`¶ìp
(*, 
•ölock
*);

106 
	`u£röô
();

107 
	`waô
();

108 
	`wakeup
(*);

109 
	`yõld
();

112 
	`swtch
(
c⁄ãxt
*, context*);

115 
	`acquúe
(
•ölock
*);

116 
	`gëˇŒîpcs
(*, 
uöt
*);

117 
	`hﬁdög
(
•ölock
*);

118 
	`öôlock
(
•ölock
*, *);

119 
	`ªÀa£
(
•ölock
*);

120 
	`push˛i
();

121 
	`p›˛i
();

124 
	`memcmp
(c⁄° *, c⁄° *, 
uöt
);

125 * 
	`memmove
(*, c⁄° *, 
uöt
);

126 * 
	`mem£t
(*, , 
uöt
);

127 * 
	`ß„°r˝y
(*, const *, );

128 
	`°æí
(const *);

129 
	`°∫cmp
(c⁄° *, c⁄° *, 
uöt
);

130 * 
	`°∫˝y
(*, const *, );

133 
	`¨göt
(, *);

134 
	`¨g±r
(, **, );

135 
	`¨g°r
(, **);

136 
	`„tchöt
(
¥oc
*, 
uöt
, *);

137 
	`„tch°r
(
¥oc
*, 
uöt
, **);

138 
	`sysˇŒ
();

141 
	`timî_öô
();

144 
	`idtöô
();

145 
ticks
;

146 
	`tvöô
();

147 
•ölock
 
tick¶ock
;

150 
	#NELEM
(
x
Ë((x)/((x)[0]))

	)

152 #ifde‡
DEBUG


153 
	#dbmsg
(...Ë
	`˝rötf
(
__VA_ARGS__
);

	)

155 
	#dbmsg
(...Ë{
	}

	)
}

	@dev.h

1 
	sdevsw
 {

2 (*
	mªad
)(
	möode
*, *, );

3 (*
	mwrôe
)(
	möode
*, *, );

6 
devsw
 devsw[];

8 
	#CONSOLE
 1

	)

	@echo.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
i
;

10 
i
 = 1; i < 
¨gc
; i++)

11 
	`¥ötf
(1, "%s%s", 
¨gv
[
i
], i+1 < 
¨gc
 ? " " : "\n");

12 
	`exô
();

13 
	}
}

	@elf.h

3 
	#ELF_MAGIC
 0x464C457FU

4 

	)

6 
	sñfhdr
 {

7 
uöt
 
	mmagic
;

8 
uch¨
 
	mñf
[12];

9 
ush‹t
 
	mty≥
;

10 
ush‹t
 
	mmachöe
;

11 
uöt
 
	mvîsi⁄
;

12 
uöt
 
	míåy
;

13 
uöt
 
	mphoff
;

14 
uöt
 
	mshoff
;

15 
uöt
 
	mÊags
;

16 
ush‹t
 
	mehsize
;

17 
ush‹t
 
	mphítsize
;

18 
ush‹t
 
	mphnum
;

19 
ush‹t
 
	mshítsize
;

20 
ush‹t
 
	mshnum
;

21 
ush‹t
 
	msh°∫dx
;

25 
	s¥oghdr
 {

26 
uöt
 
	mty≥
;

27 
uöt
 
	moff£t
;

28 
uöt
 
	mva
;

29 
uöt
 
	m∑
;

30 
uöt
 
	mfûesz
;

31 
uöt
 
	mmemsz
;

32 
uöt
 
	mÊags
;

33 
uöt
 
	mÆign
;

37 
	#ELF_PROG_LOAD
 1

	)

40 
	#ELF_PROG_FLAG_EXEC
 1

	)

41 
	#ELF_PROG_FLAG_WRITE
 2

	)

42 
	#ELF_PROG_FLAG_READ
 4

	)

	@errorno.h

1 #i‚de‡
_ERRORNO_H_


2 
	#_ERRORNO_H_


	)

5 
	#E_NOT_AT_PGBOUND
 2

	)

6 
	#E_MAP_EXIST
 3

	)

7 
	#E_NO_MEM
 4

	)

8 
	#E_ALREADY_FREE
 5

	)

	@exec.c

1 
	~"ty≥s.h
"

2 
	~"∑øm.h
"

3 
	~"mmu.h
"

4 
	~"¥oc.h
"

5 
	~"defs.h
"

6 
	~"x86.h
"

7 
	~"ñf.h
"

10 
	$exec
(*
∑th
, **
¨gv
)

12 *
mem
, *
s
, *
œ°
;

13 
i
, 
¨gc
, 
¨gÀn
, 
Àn
, 
off
, 
ªt
;

14 
uöt
 
sz
, 
•
, 
¨gp
;

15 
ñfhdr
 
ñf
;

16 
öode
 *
ù
;

17 
¥oghdr
 
ph
;

19 if((
ù
 = 
	`«mei
(
∑th
)) == 0)

21 
	`ûock
(
ù
);

24 
mem
 = 0;

25 
sz
 = 0;

28 if(
	`ªadi
(
ù
, (*)&
ñf
, 0, (elf)) < (elf))

29 
bad
;

30 if(
ñf
.
magic
 !
ELF_MAGIC
)

31 
bad
;

32 
i
=0, 
off
=
ñf
.
phoff
; i<ñf.
phnum
; i++, off+=(
ph
)){

33 if(
	`ªadi
(
ù
, (*)&
ph
, 
off
, (ph)) != (ph))

34 
bad
;

35 if(
ph
.
ty≥
 !
ELF_PROG_LOAD
)

37 if(
ph
.
memsz
 <Öh.
fûesz
)

38 
bad
;

39 
sz
 +
ph
.
memsz
;

43 
¨gÀn
 = 0;

44 
¨gc
=0; 
¨gv
[argc];árgc++) {

45 
¨gÀn
 +
	`°æí
(
¨gv
[
¨gc
]) + 1;

47 
¨gÀn
 = (arglen+3) & ~3;

48 
sz
 +
¨gÀn
 + 4*(
¨gc
+1);

51 
sz
 +
PAGE
;

54 
sz
 = (sz+
PAGE
-1) & ~(PAGE-1);

55 
ªt
 = 0;

56 i‡(
˝
->
sz
 < sz)

57 
ªt
 = 
	`grow¥oc
(
sz
 - 
˝
->sz);

58 i‡(
ªt
 < 0)

59 
bad
;

60 
mem
 = 
˝
->mem;

67 
i
=0, 
off
=
ñf
.
phoff
; i<ñf.
phnum
; i++, off+=(
ph
)){

68 if(
	`ªadi
(
ù
, (*)&
ph
, 
off
, (ph)) != (ph))

69 
bad
;

70 if(
ph
.
ty≥
 !
ELF_PROG_LOAD
)

72 if(
ph
.
va
 +Öh.
memsz
 > 
sz
)

73 
bad
;

74 if(
	`ªadi
(
ù
, 
mem
 + 
ph
.
va
,Öh.
off£t
,Öh.
fûesz
) !=Öh.filesz)

75 
bad
;

76 
	`mem£t
(
mem
 + 
ph
.
va
 +Öh.
fûesz
, 0,Öh.
memsz
 -Öh.filesz);

78 
	`iu∆ockput
(
ù
);

81 
•
 = 
sz
;

82 
¨gp
 = 
sz
 - 
¨gÀn
 - 4*(
¨gc
+1);

85 *(
uöt
*)(
mem
+
¨gp
 + 4*
¨gc
) = 0;

86 
i
=
¨gc
-1; i>=0; i--){

87 
Àn
 = 
	`°æí
(
¨gv
[
i
]) + 1;

88 
•
 -
Àn
;

89 
	`memmove
(
mem
+
•
, 
¨gv
[
i
], 
Àn
);

90 *(
uöt
*)(
mem
+
¨gp
 + 4*
i
Ë
•
;

94 
•
 = 
¨gp
;

95 
•
 -= 4;

96 *(
uöt
*)(
mem
+
•
Ë
¨gp
;

97 
•
 -= 4;

98 *(
uöt
*)(
mem
+
•
Ë
¨gc
;

99 
•
 -= 4;

100 *(
uöt
*)(
mem
+
•
) = 0xffffffff;

103 
œ°
=
s
=
∑th
; *s; s++)

104 if(*
s
 == '/')

105 
œ°
 = 
s
+1;

106 
	`ß„°r˝y
(
˝
->
«me
, 
œ°
, (cp->name));

111 
˝
->
sz
 = sz;

112 
˝
->
tf
->
eù
 = 
ñf
.
íåy
;

113 
˝
->
tf
->
e•
 = 
•
;

114 
	`£tup£gs
(
˝
);

117 
bad
:

118 if(
mem
)

119 
	`k‰ì
(
mem
, 
sz
);

120 
	`iu∆ockput
(
ù
);

122 
	}
}

	@fcntl.h

1 
	#O_RDONLY
 0x000

	)

2 
	#O_WRONLY
 0x001

	)

3 
	#O_RDWR
 0x002

	)

4 
	#O_CREATE
 0x200

	)

	@file.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"fûe.h
"

5 
	~"•ölock.h
"

6 
	~"dev.h
"

8 
devsw
 
	gdevsw
[
NDEV
];

9 
•ölock
 
	gfûe_èbÀ_lock
;

10 
fûe
 
	gfûe
[
NFILE
];

13 
	$fûeöô
()

15 
	`öôlock
(&
fûe_èbÀ_lock
, "file_table");

16 
	}
}

19 
fûe
*

20 
	$fûóŒoc
()

22 
i
;

24 
	`acquúe
(&
fûe_èbÀ_lock
);

25 
i
 = 0; i < 
NFILE
; i++){

26 if(
fûe
[
i
].
ty≥
 =
FD_CLOSED
){

27 
fûe
[
i
].
ty≥
 = 
FD_NONE
;

28 
fûe
[
i
].
ªf
 = 1;

29 
	`ªÀa£
(&
fûe_èbÀ_lock
);

30  
fûe
 + 
i
;

33 
	`ªÀa£
(&
fûe_èbÀ_lock
);

35 
	}
}

38 
fûe
*

39 
	$fûedup
(
fûe
 *
f
)

41 
	`acquúe
(&
fûe_èbÀ_lock
);

42 if(
f
->
ªf
 < 1 || f->
ty≥
 =
FD_CLOSED
)

43 
	`∑nic
("filedup");

44 
f
->
ªf
++;

45 
	`ªÀa£
(&
fûe_èbÀ_lock
);

46  
f
;

47 
	}
}

51 
	$fûe˛o£
(
fûe
 *
f
)

53 
fûe
 
ff
;

55 
	`acquúe
(&
fûe_èbÀ_lock
);

56 if(
f
->
ªf
 < 1 || f->
ty≥
 =
FD_CLOSED
)

57 
	`∑nic
("fileclose");

58 if(--
f
->
ªf
 > 0){

59 
	`ªÀa£
(&
fûe_èbÀ_lock
);

62 
ff
 = *
f
;

63 
f
->
ªf
 = 0;

64 
f
->
ty≥
 = 
FD_CLOSED
;

65 
	`ªÀa£
(&
fûe_èbÀ_lock
);

67 if(
ff
.
ty≥
 =
FD_PIPE
)

68 
	`pùe˛o£
(
ff
.
pùe
, ff.
wrôabÀ
);

69 if(
ff
.
ty≥
 =
FD_INODE
)

70 
	`ùut
(
ff
.
ù
);

72 
	`∑nic
("fileclose");

73 
	}
}

77 
	$fûe°©
(
fûe
 *
f
, 
°©
 *
°
)

79 if(
f
->
ty≥
 =
FD_INODE
){

80 
	`ûock
(
f
->
ù
);

81 
	`°©i
(
f
->
ù
, 
°
);

82 
	`iu∆ock
(
f
->
ù
);

86 
	}
}

90 
	$fûîód
(
fûe
 *
f
, *
addr
, 
n
)

92 
r
;

94 if(
f
->
ªadabÀ
 == 0)

96 if(
f
->
ty≥
 =
FD_PIPE
)

97  
	`pùîód
(
f
->
pùe
, 
addr
, 
n
);

98 if(
f
->
ty≥
 =
FD_INODE
){

99 
	`ûock
(
f
->
ù
);

100 if((
r
 = 
	`ªadi
(
f
->
ù
, 
addr
, f->
off
, 
n
)) > 0)

101 
f
->
off
 +
r
;

102 
	`iu∆ock
(
f
->
ù
);

103  
r
;

105 
	`∑nic
("fileread");

106 
	}
}

110 
	$fûewrôe
(
fûe
 *
f
, *
addr
, 
n
)

112 
r
;

114 if(
f
->
wrôabÀ
 == 0)

116 if(
f
->
ty≥
 =
FD_PIPE
)

117  
	`pùewrôe
(
f
->
pùe
, 
addr
, 
n
);

118 if(
f
->
ty≥
 =
FD_INODE
){

119 
	`ûock
(
f
->
ù
);

120 if((
r
 = 
	`wrôei
(
f
->
ù
, 
addr
, f->
off
, 
n
)) > 0)

121 
f
->
off
 +
r
;

122 
	`iu∆ock
(
f
->
ù
);

123  
r
;

125 
	`∑nic
("filewrite");

126 
	}
}

	@file.h

1 
	sfûe
 {

2 íum { 
	mFD_CLOSED
, 
	mFD_NONE
, 
	mFD_PIPE
, 
	mFD_INODE
 } 
	mty≥
;

3 
	mªf
;

4 
	mªadabÀ
;

5 
	mwrôabÀ
;

6 
pùe
 *
	mpùe
;

7 
öode
 *
	mù
;

8 
uöt
 
	moff
;

	@forktest.c

4 
	~"ty≥s.h
"

5 
	~"°©.h
"

6 
	~"u£r.h
"

9 
	$¥ötf
(
fd
, *
s
, ...)

11 
	`wrôe
(
fd
, 
s
, 
	`°æí
(s));

12 
	}
}

15 
	$f‹kã°
()

17 
n
, 
pid
;

19 
	`¥ötf
(1, "forkÅest\n");

21 
n
=0;Ç<1000;Ç++){

22 
pid
 = 
	`f‹k
();

23 if(
pid
 < 0)

25 if(
pid
 == 0)

26 
	`exô
();

29 if(
n
 == 1000){

30 
	`¥ötf
(1, "fork claimedÅo work 1000Åimes!\n");

31 
	`exô
();

34 ; 
n
 > 0;Ç--){

35 if(
	`waô
() < 0){

36 
	`¥ötf
(1, "wait stoppedÉarly\n");

37 
	`exô
();

41 if(
	`waô
() != -1){

42 
	`¥ötf
(1, "wait gotÅoo many\n");

43 
	`exô
();

46 
	`¥ötf
(1, "forkÅest OK\n");

47 
	}
}

50 
	$maö
()

52 
	`f‹kã°
();

53 
	`exô
();

54 
	}
}

	@fs.c

13 
	~"ty≥s.h
"

14 
	~"defs.h
"

15 
	~"∑øm.h
"

16 
	~"°©.h
"

17 
	~"mmu.h
"

18 
	~"¥oc.h
"

19 
	~"•ölock.h
"

20 
	~"buf.h
"

21 
	~"fs.h
"

22 
	~"fsv¨.h
"

23 
	~"dev.h
"

25 
	#mö
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

26 
ôrunc
(
öode
*);

30 
	$ªadsb
(
dev
, 
su≥rblock
 *
sb
)

32 
buf
 *
bp
;

34 
bp
 = 
	`bªad
(
dev
, 1);

35 
	`memmove
(
sb
, 
bp
->
d©a
, (*sb));

36 
	`bªl£
(
bp
);

37 
	}
}

41 
	$bzîo
(
dev
, 
bno
)

43 
buf
 *
bp
;

45 
bp
 = 
	`bªad
(
dev
, 
bno
);

46 
	`mem£t
(
bp
->
d©a
, 0, 
BSIZE
);

47 
	`bwrôe
(
bp
);

48 
	`bªl£
(
bp
);

49 
	}
}

54 
uöt


55 
	$bÆloc
(
uöt
 
dev
)

57 
b
, 
bi
, 
m
;

58 
buf
 *
bp
;

59 
su≥rblock
 
sb
;

61 
bp
 = 0;

62 
	`ªadsb
(
dev
, &
sb
);

63 
b
 = 0; b < 
sb
.
size
; b +
BPB
){

64 
bp
 = 
	`bªad
(
dev
, 
	`BBLOCK
(
b
, 
sb
.
nöodes
));

65 
bi
 = 0; bò< 
BPB
; bi++){

66 
m
 = 1 << (
bi
 % 8);

67 if((
bp
->
d©a
[
bi
/8] & 
m
) == 0){

68 
bp
->
d©a
[
bi
/8] |
m
;

69 
	`bwrôe
(
bp
);

70 
	`bªl£
(
bp
);

71  
b
 + 
bi
;

74 
	`bªl£
(
bp
);

76 
	`∑nic
("balloc: out of blocks");

77 
	}
}

81 
	$b‰ì
(
dev
, 
uöt
 
b
)

83 
buf
 *
bp
;

84 
su≥rblock
 
sb
;

85 
bi
, 
m
;

87 
	`bzîo
(
dev
, 
b
);

89 
	`ªadsb
(
dev
, &
sb
);

90 
bp
 = 
	`bªad
(
dev
, 
	`BBLOCK
(
b
, 
sb
.
nöodes
));

91 
bi
 = 
b
 % 
BPB
;

92 
m
 = 1 << (
bi
 % 8);

93 if((
bp
->
d©a
[
bi
/8] & 
m
) == 0)

94 
	`∑nic
("freeing free block");

95 
bp
->
d©a
[
bi
/8] &~
m
;

96 
	`bwrôe
(
bp
);

97 
	`bªl£
(
bp
);

98 
	}
}

134 
•ölock
 
	mlock
;

135 
öode
 
	möode
[
NINODE
];

136 } 
	giˇche
;

139 
	$iöô
()

141 
	`öôlock
(&
iˇche
.
lock
, "icache.lock");

142 
	}
}

146 
öode
*

147 
	$igë
(
uöt
 
dev
, uöà
öum
)

149 
öode
 *
ù
, *
em±y
;

151 
	`acquúe
(&
iˇche
.
lock
);

154 
em±y
 = 0;

155 
ù
 = &
iˇche
.
öode
[0]; i∞< &iˇche.öode[
NINODE
]; ip++){

156 if(
ù
->
ªf
 > 0 && ip->
dev
 =dev && ip->
öum
 == inum){

157 
ù
->
ªf
++;

158 
	`ªÀa£
(&
iˇche
.
lock
);

159  
ù
;

161 if(
em±y
 =0 && 
ù
->
ªf
 == 0)

162 
em±y
 = 
ù
;

166 if(
em±y
 == 0)

167 
	`∑nic
("iget:Ço inodes");

169 
ù
 = 
em±y
;

170 
ù
->
dev
 = dev;

171 
ù
->
öum
 = inum;

172 
ù
->
ªf
 = 1;

173 
ù
->
Êags
 = 0;

174 
	`ªÀa£
(&
iˇche
.
lock
);

176  
ù
;

177 
	}
}

181 
öode
*

182 
	$idup
(
öode
 *
ù
)

184 
	`acquúe
(&
iˇche
.
lock
);

185 
ù
->
ªf
++;

186 
	`ªÀa£
(&
iˇche
.
lock
);

187  
ù
;

188 
	}
}

192 
	$ûock
(
öode
 *
ù
)

194 
buf
 *
bp
;

195 
döode
 *
dù
;

197 if(
ù
 =0 || ip->
ªf
 < 1)

198 
	`∑nic
("ilock");

200 
	`acquúe
(&
iˇche
.
lock
);

201 
ù
->
Êags
 & 
I_BUSY
)

202 
	`¶ìp
(
ù
, &
iˇche
.
lock
);

203 
ù
->
Êags
 |
I_BUSY
;

204 
	`ªÀa£
(&
iˇche
.
lock
);

206 if(!(
ù
->
Êags
 & 
I_VALID
)){

207 
bp
 = 
	`bªad
(
ù
->
dev
, 
	`IBLOCK
(ù->
öum
));

208 
dù
 = (
döode
*)
bp
->
d©a
 + 
ù
->
öum
%
IPB
;

209 
ù
->
ty≥
 = 
dù
->type;

210 
ù
->
maj‹
 = 
dù
->major;

211 
ù
->
mö‹
 = 
dù
->minor;

212 
ù
->
∆ök
 = 
dù
->nlink;

213 
ù
->
size
 = 
dù
->size;

214 
	`memmove
(
ù
->
addrs
, 
dù
->addrs, (ip->addrs));

215 
	`bªl£
(
bp
);

216 
ù
->
Êags
 |
I_VALID
;

217 if(
ù
->
ty≥
 == 0)

218 
	`∑nic
("ilock:ÇoÅype");

220 
	}
}

224 
	$iu∆ock
(
öode
 *
ù
)

226 if(
ù
 =0 || !(ù->
Êags
 & 
I_BUSY
Ë|| ip->
ªf
 < 1)

227 
	`∑nic
("iunlock");

229 
	`acquúe
(&
iˇche
.
lock
);

230 
ù
->
Êags
 &~
I_BUSY
;

231 
	`wakeup
(
ù
);

232 
	`ªÀa£
(&
iˇche
.
lock
);

233 
	}
}

237 
	$ùut
(
öode
 *
ù
)

239 
	`acquúe
(&
iˇche
.
lock
);

240 if(
ù
->
ªf
 =1 && (ù->
Êags
 & 
I_VALID
Ë&& ip->
∆ök
 == 0){

242 if(
ù
->
Êags
 & 
I_BUSY
)

243 
	`∑nic
("iput busy");

244 
ù
->
Êags
 |
I_BUSY
;

245 
	`ªÀa£
(&
iˇche
.
lock
);

246 
	`ôrunc
(
ù
);

247 
ù
->
ty≥
 = 0;

248 
	`iupd©e
(
ù
);

249 
	`acquúe
(&
iˇche
.
lock
);

250 
ù
->
Êags
 &~
I_BUSY
;

251 
	`wakeup
(
ù
);

253 
ù
->
ªf
--;

254 
	`ªÀa£
(&
iˇche
.
lock
);

255 
	}
}

259 
	$iu∆ockput
(
öode
 *
ù
)

261 
	`iu∆ock
(
ù
);

262 
	`ùut
(
ù
);

263 
	}
}

266 
öode
*

267 
	$üŒoc
(
uöt
 
dev
, 
ty≥
)

269 
öum
;

270 
buf
 *
bp
;

271 
döode
 *
dù
;

272 
su≥rblock
 
sb
;

274 
	`ªadsb
(
dev
, &
sb
);

275 
öum
 = 1; inum < 
sb
.
nöodes
; inum++){

276 
bp
 = 
	`bªad
(
dev
, 
	`IBLOCK
(
öum
));

277 
dù
 = (
döode
*)
bp
->
d©a
 + 
öum
%
IPB
;

278 if(
dù
->
ty≥
 == 0){

279 
	`mem£t
(
dù
, 0, (*dip));

280 
dù
->
ty≥
 =Åype;

281 
	`bwrôe
(
bp
);

282 
	`bªl£
(
bp
);

283  
	`igë
(
dev
, 
öum
);

285 
	`bªl£
(
bp
);

287 
	`∑nic
("ialloc:Ço inodes");

288 
	}
}

292 
	$iupd©e
(
öode
 *
ù
)

294 
buf
 *
bp
;

295 
döode
 *
dù
;

297 
bp
 = 
	`bªad
(
ù
->
dev
, 
	`IBLOCK
(ù->
öum
));

298 
dù
 = (
döode
*)
bp
->
d©a
 + 
ù
->
öum
%
IPB
;

299 
dù
->
ty≥
 = 
ù
->type;

300 
dù
->
maj‹
 = 
ù
->major;

301 
dù
->
mö‹
 = 
ù
->minor;

302 
dù
->
∆ök
 = 
ù
->nlink;

303 
dù
->
size
 = 
ù
->size;

304 
	`memmove
(
dù
->
addrs
, 
ù
->addrs, (ip->addrs));

305 
	`bwrôe
(
bp
);

306 
	`bªl£
(
bp
);

307 
	}
}

318 
uöt


319 
	$bm≠
(
öode
 *
ù
, 
uöt
 
bn
, 
Æloc
)

321 
uöt
 
addr
, *
a
;

322 
buf
 *
bp
;

324 if(
bn
 < 
NDIRECT
){

325 if((
addr
 = 
ù
->
addrs
[
bn
]) == 0){

326 if(!
Æloc
)

328 
ù
->
addrs
[
bn
] = 
addr
 = 
	`bÆloc
(ù->
dev
);

330  
addr
;

332 
bn
 -
NDIRECT
;

334 if(
bn
 < 
NINDIRECT
){

336 if((
addr
 = 
ù
->
addrs
[
INDIRECT
]) == 0){

337 if(!
Æloc
)

339 
ù
->
addrs
[
INDIRECT
] = 
addr
 = 
	`bÆloc
(ù->
dev
);

341 
bp
 = 
	`bªad
(
ù
->
dev
, 
addr
);

342 
a
 = (
uöt
*)
bp
->
d©a
;

344 if((
addr
 = 
a
[
bn
]) == 0){

345 if(!
Æloc
){

346 
	`bªl£
(
bp
);

349 
a
[
bn
] = 
addr
 = 
	`bÆloc
(
ù
->
dev
);

350 
	`bwrôe
(
bp
);

352 
	`bªl£
(
bp
);

353  
addr
;

356 
	`∑nic
("bmap: out ofÑange");

357 
	}
}

361 
	$ôrunc
(
öode
 *
ù
)

363 
i
, 
j
;

364 
buf
 *
bp
;

365 
uöt
 *
a
;

367 
i
 = 0; i < 
NDIRECT
; i++){

368 if(
ù
->
addrs
[
i
]){

369 
	`b‰ì
(
ù
->
dev
, ip->
addrs
[
i
]);

370 
ù
->
addrs
[
i
] = 0;

374 if(
ù
->
addrs
[
INDIRECT
]){

375 
bp
 = 
	`bªad
(
ù
->
dev
, ip->
addrs
[
INDIRECT
]);

376 
a
 = (
uöt
*)
bp
->
d©a
;

377 
j
 = 0; j < 
NINDIRECT
; j++){

378 if(
a
[
j
])

379 
	`b‰ì
(
ù
->
dev
, 
a
[
j
]);

381 
	`bªl£
(
bp
);

382 
ù
->
addrs
[
INDIRECT
] = 0;

385 
ù
->
size
 = 0;

386 
	`iupd©e
(
ù
);

387 
	}
}

391 
	$°©i
(
öode
 *
ù
, 
°©
 *
°
)

393 
°
->
dev
 = 
ù
->dev;

394 
°
->
öo
 = 
ù
->
öum
;

395 
°
->
ty≥
 = 
ù
->type;

396 
°
->
∆ök
 = 
ù
->nlink;

397 
°
->
size
 = 
ù
->size;

398 
	}
}

402 
	$ªadi
(
öode
 *
ù
, *
d°
, 
uöt
 
off
, uöà
n
)

404 
uöt
 
tŸ
, 
m
;

405 
buf
 *
bp
;

407 if(
ù
->
ty≥
 =
T_DEV
){

408 if(
ù
->
maj‹
 < 0 || ip->maj‹ >
NDEV
 || !
devsw
[ù->maj‹].
ªad
)

410  
devsw
[
ù
->
maj‹
].
	`ªad
(ù, 
d°
, 
n
);

413 if(
off
 > 
ù
->
size
 || of‡+ 
n
 < off)

415 if(
off
 + 
n
 > 
ù
->
size
)

416 
n
 = 
ù
->
size
 - 
off
;

418 
tŸ
=0;ÅŸ<
n
;ÅŸ+=
m
, 
off
+=m, 
d°
+=m){

419 
bp
 = 
	`bªad
(
ù
->
dev
, 
	`bm≠
(ù, 
off
/
BSIZE
, 0));

420 
m
 = 
	`mö
(
n
 - 
tŸ
, 
BSIZE
 - 
off
%BSIZE);

421 
	`memmove
(
d°
, 
bp
->
d©a
 + 
off
%
BSIZE
, 
m
);

422 
	`bªl£
(
bp
);

424  
n
;

425 
	}
}

429 
	$wrôei
(
öode
 *
ù
, *
§c
, 
uöt
 
off
, uöà
n
)

431 
uöt
 
tŸ
, 
m
;

432 
buf
 *
bp
;

434 if(
ù
->
ty≥
 =
T_DEV
){

435 if(
ù
->
maj‹
 < 0 || ip->maj‹ >
NDEV
 || !
devsw
[ù->maj‹].
wrôe
)

437  
devsw
[
ù
->
maj‹
].
	`wrôe
(ù, 
§c
, 
n
);

440 if(
off
 + 
n
 < off)

442 if(
off
 + 
n
 > 
MAXFILE
*
BSIZE
)

443 
n
 = 
MAXFILE
*
BSIZE
 - 
off
;

445 
tŸ
=0;ÅŸ<
n
;ÅŸ+=
m
, 
off
+=m, 
§c
+=m){

446 
bp
 = 
	`bªad
(
ù
->
dev
, 
	`bm≠
(ù, 
off
/
BSIZE
, 1));

447 
m
 = 
	`mö
(
n
 - 
tŸ
, 
BSIZE
 - 
off
%BSIZE);

448 
	`memmove
(
bp
->
d©a
 + 
off
%
BSIZE
, 
§c
, 
m
);

449 
	`bwrôe
(
bp
);

450 
	`bªl£
(
bp
);

453 if(
n
 > 0 && 
off
 > 
ù
->
size
){

454 
ù
->
size
 = 
off
;

455 
	`iupd©e
(
ù
);

457  
n
;

458 
	}
}

463 
	$«mecmp
(c⁄° *
s
, c⁄° *
t
)

465  
	`°∫cmp
(
s
, 
t
, 
DIRSIZ
);

466 
	}
}

471 
öode
*

472 
	$dúlookup
(
öode
 *
dp
, *
«me
, 
uöt
 *
poff
)

474 
uöt
 
off
, 
öum
;

475 
buf
 *
bp
;

476 
dúít
 *
de
;

478 if(
dp
->
ty≥
 !
T_DIR
)

479 
	`∑nic
("dirlookupÇot DIR");

481 
off
 = 0; of‡< 
dp
->
size
; of‡+
BSIZE
){

482 
bp
 = 
	`bªad
(
dp
->
dev
, 
	`bm≠
(dp, 
off
 / 
BSIZE
, 0));

483 
de
 = (
dúít
*)
bp
->
d©a
;

484 
de
 < (
dúít
*)(
bp
->
d©a
 + 
BSIZE
);

485 
de
++){

486 if(
de
->
öum
 == 0)

488 if(
	`«mecmp
(
«me
, 
de
->name) == 0){

490 if(
poff
)

491 *
poff
 = 
off
 + (
uch¨
*)
de
 - 
bp
->
d©a
;

492 
öum
 = 
de
->inum;

493 
	`bªl£
(
bp
);

494  
	`igë
(
dp
->
dev
, 
öum
);

497 
	`bªl£
(
bp
);

500 
	}
}

504 
	$dúlök
(
öode
 *
dp
, *
«me
, 
uöt
 
öo
)

506 
off
;

507 
dúít
 
de
;

508 
öode
 *
ù
;

511 if((
ù
 = 
	`dúlookup
(
dp
, 
«me
, 0)) != 0){

512 
	`ùut
(
ù
);

517 
off
 = 0; of‡< 
dp
->
size
; of‡+(
de
)){

518 if(
	`ªadi
(
dp
, (*)&
de
, 
off
, (de)) != (de))

519 
	`∑nic
("dirlinkÑead");

520 if(
de
.
öum
 == 0)

524 
	`°∫˝y
(
de
.
«me
,Çame, 
DIRSIZ
);

525 
de
.
öum
 = 
öo
;

526 if(
	`wrôei
(
dp
, (*)&
de
, 
off
, (de)) != (de))

527 
	`∑nic
("dirlink");

530 
	}
}

546 
	$skùñem
(*
∑th
, *
«me
)

548 *
s
;

549 
Àn
;

551 *
∑th
 == '/')

552 
∑th
++;

553 if(*
∑th
 == 0)

555 
s
 = 
∑th
;

556 *
∑th
 != '/' && *path != 0)

557 
∑th
++;

558 
Àn
 = 
∑th
 - 
s
;

559 if(
Àn
 >
DIRSIZ
)

560 
	`memmove
(
«me
, 
s
, 
DIRSIZ
);

562 
	`memmove
(
«me
, 
s
, 
Àn
);

563 
«me
[
Àn
] = 0;

565 *
∑th
 == '/')

566 
∑th
++;

567  
∑th
;

568 
	}
}

573 
öode
*

574 
	$_«mei
(*
∑th
, 
∑ª¡
, *
«me
)

576 
öode
 *
ù
, *
√xt
;

578 if(*
∑th
 == '/')

579 
ù
 = 
	`igë
(
ROOTDEV
, 1);

581 
ù
 = 
	`idup
(
˝
->
cwd
);

583 (
∑th
 = 
	`skùñem
’©h, 
«me
)) != 0){

584 
	`ûock
(
ù
);

585 if(
ù
->
ty≥
 !
T_DIR
){

586 
	`iu∆ockput
(
ù
);

589 if(
∑ª¡
 && *
∑th
 == '\0'){

591 
	`iu∆ock
(
ù
);

592  
ù
;

594 if((
√xt
 = 
	`dúlookup
(
ù
, 
«me
, 0)) == 0){

595 
	`iu∆ockput
(
ù
);

598 
	`iu∆ockput
(
ù
);

599 
ù
 = 
√xt
;

601 if(
∑ª¡
){

602 
	`ùut
(
ù
);

605  
ù
;

606 
	}
}

608 
öode
*

609 
	$«mei
(*
∑th
)

611 
«me
[
DIRSIZ
];

612  
	`_«mei
(
∑th
, 0, 
«me
);

613 
	}
}

615 
öode
*

616 
	$«meù¨ít
(*
∑th
, *
«me
)

618  
	`_«mei
(
∑th
, 1, 
«me
);

619 
	}
}

	@fs.h

8 
	#BSIZE
 512

9 

	)

11 
	ssu≥rblock
 {

12 
uöt
 
	msize
;

13 
uöt
 
	mnblocks
;

14 
uöt
 
	mnöodes
;

17 
	#NADDRS
 (
NDIRECT
+1)

	)

18 
	#NDIRECT
 12

	)

19 
	#INDIRECT
 12

	)

20 
	#NINDIRECT
 (
BSIZE
 / (
uöt
))

	)

21 
	#MAXFILE
 (
NDIRECT
 + 
NINDIRECT
)

	)

24 
	sdöode
 {

25 
	mty≥
;

26 
	mmaj‹
;

27 
	mmö‹
;

28 
	m∆ök
;

29 
uöt
 
	msize
;

30 
uöt
 
	maddrs
[
NADDRS
];

33 
	#T_DIR
 1

34 
	#T_FILE
 2

35 
	#T_DEV
 3

36 

	)

38 
	#IPB
 (
BSIZE
 / (
döode
))

	)

41 
	#IBLOCK
(
i
Ë((iË/ 
IPB
 + 2)

	)

44 
	#BPB
 (
BSIZE
*8)

	)

47 
	#BBLOCK
(
b
, 
nöodes
Ë(b/
BPB
 + (nöodes)/
IPB
 + 3)

	)

50 
	#DIRSIZ
 14

	)

52 
	sdúít
 {

53 
ush‹t
 
	möum
;

54 
	m«me
[
DIRSIZ
];

	@fsvar.h

3 
	söode
 {

4 
uöt
 
	mdev
;

5 
uöt
 
	möum
;

6 
	mªf
;

7 
	mÊags
;

9 
	mty≥
;

10 
	mmaj‹
;

11 
	mmö‹
;

12 
	m∆ök
;

13 
uöt
 
	msize
;

14 
uöt
 
	maddrs
[
NADDRS
];

17 
	#I_BUSY
 0x1

	)

18 
	#I_VALID
 0x2

	)

	@grep.c

3 
	~"ty≥s.h
"

4 
	~"°©.h
"

5 
	~"u£r.h
"

7 
	gbuf
[1024];

8 
m©ch
(*, *);

11 
	$gªp
(*
∑âîn
, 
fd
)

13 
n
, 
m
;

14 *
p
, *
q
;

16 
m
 = 0;

17 (
n
 = 
	`ªad
(
fd
, 
buf
+
m
, (buf)-m)) > 0){

18 
m
 +
n
;

19 
p
 = 
buf
;

20 (
q
 = 
	`°rchr
(
p
, '\n')) != 0){

21 *
q
 = 0;

22 if(
	`m©ch
(
∑âîn
, 
p
)){

23 *
q
 = '\n';

24 
	`wrôe
(1, 
p
, 
q
+1 -Ö);

26 
p
 = 
q
+1;

28 if(
p
 =
buf
)

29 
m
 = 0;

30 if(
m
 > 0){

31 
m
 -
p
 - 
buf
;

32 
	`memmove
(
buf
, 
p
, 
m
);

35 
	}
}

38 
	$maö
(
¨gc
, *
¨gv
[])

40 
fd
, 
i
;

41 *
∑âîn
;

43 if(
¨gc
 <= 1){

44 
	`¥ötf
(2, "usage: grepÖattern [file ...]\n");

45 
	`exô
();

47 
∑âîn
 = 
¨gv
[1];

49 if(
¨gc
 <= 2){

50 
	`gªp
(
∑âîn
, 0);

51 
	`exô
();

54 
i
 = 2; i < 
¨gc
; i++){

55 if((
fd
 = 
	`›í
(
¨gv
[
i
], 0)) < 0){

56 
	`¥ötf
(1, "gªp: c™nŸ o≥¿%s\n", 
¨gv
[
i
]);

57 
	`exô
();

59 
	`gªp
(
∑âîn
, 
fd
);

60 
	`˛o£
(
fd
);

62 
	`exô
();

63 
	}
}

68 
m©chhîe
(*, *);

69 
m©ch°¨
(, *, *);

72 
	$m©ch
(*
ª
, *
ãxt
)

74 if(
ª
[0] == '^')

75  
	`m©chhîe
(
ª
+1, 
ãxt
);

77 if(
	`m©chhîe
(
ª
, 
ãxt
))

79 }*
ãxt
++ != '\0');

81 
	}
}

84 
	$m©chhîe
(*
ª
, *
ãxt
)

86 if(
ª
[0] == '\0')

88 if(
ª
[1] == '*')

89  
	`m©ch°¨
(
ª
[0],Ñe+2, 
ãxt
);

90 if(
ª
[0] == '$' &&Ñe[1] == '\0')

91  *
ãxt
 == '\0';

92 if(*
ãxt
!='\0' && (
ª
[0]=='.' ||Ñe[0]==*text))

93  
	`m©chhîe
(
ª
+1, 
ãxt
+1);

95 
	}
}

98 
	$m©ch°¨
(
c
, *
ª
, *
ãxt
)

101 if(
	`m©chhîe
(
ª
, 
ãxt
))

103 }*
ãxt
!='\0' && (*ãxt++==
c
 || c=='.'));

105 
	}
}

	@ide.c

3 
	~"ty≥s.h
"

4 
	~"defs.h
"

5 
	~"∑øm.h
"

6 
	~"mmu.h
"

7 
	~"¥oc.h
"

8 
	~"x86.h
"

9 
	~"å≠s.h
"

10 
	~"•ölock.h
"

11 
	~"buf.h
"

13 
	#IDE_BSY
 0x80

	)

14 
	#IDE_DRDY
 0x40

	)

15 
	#IDE_DF
 0x20

	)

16 
	#IDE_ERR
 0x01

	)

18 
	#IDE_CMD_READ
 0x20

	)

19 
	#IDE_CMD_WRITE
 0x30

	)

25 
•ölock
 
	gide_lock
;

26 
buf
 *
	gide_queue
;

28 
	gdisk_1_¥e£¡
;

29 
ide_°¨t_ªque°
();

33 
	$ide_waô_ªady
(
check_îr‹
)

35 
r
;

37 ((
r
 = 
	`öb
(0x1f7)Ë& 
IDE_BSY
Ë|| !‘ & 
IDE_DRDY
))

39 if(
check_îr‹
 && (
r
 & (
IDE_DF
|
IDE_ERR
)) != 0)

42 
	}
}

45 
	$ide_öô
()

47 
i
;

49 
	`öôlock
(&
ide_lock
, "ide");

50 
	`pic_íabÀ
(
IRQ_IDE
);

51 
	`iﬂpic_íabÀ
(
IRQ_IDE
, 
n˝u
 - 1);

52 
	`ide_waô_ªady
(0);

55 
	`outb
(0x1f6, 0xe0 | (1<<4));

56 
i
=0; i<1000; i++){

57 if(
	`öb
(0x1f7) != 0){

58 
disk_1_¥e£¡
 = 1;

64 
	`outb
(0x1f6, 0xe0 | (0<<4));

65 
	}
}

69 
	$ide_°¨t_ªque°
(
buf
 *
b
)

71 if(
b
 == 0)

72 
	`∑nic
("ide_start_request");

74 
	`ide_waô_ªady
(0);

75 
	`outb
(0x3f6, 0);

76 
	`outb
(0x1f2, 1);

77 
	`outb
(0x1f3, 
b
->
£˘‹
 & 0xff);

78 
	`outb
(0x1f4, (
b
->
£˘‹
 >> 8) & 0xff);

79 
	`outb
(0x1f5, (
b
->
£˘‹
 >> 16) & 0xff);

80 
	`outb
(0x1f6, 0xe0 | ((
b
->
dev
&1)<<4Ë| ((b->
£˘‹
>>24)&0x0f));

81 if(
b
->
Êags
 & 
B_DIRTY
){

82 
	`outb
(0x1f7, 
IDE_CMD_WRITE
);

83 
	`out¶
(0x1f0, 
b
->
d©a
, 512/4);

85 
	`outb
(0x1f7, 
IDE_CMD_READ
);

87 
	}
}

91 
	$ide_öå
()

93 
buf
 *
b
;

95 
	`acquúe
(&
ide_lock
);

96 if((
b
 = 
ide_queue
) == 0){

97 
	`ªÀa£
(&
ide_lock
);

102 if(!(
b
->
Êags
 & 
B_DIRTY
Ë&& 
	`ide_waô_ªady
(1) >= 0)

103 
	`ö¶
(0x1f0, 
b
->
d©a
, 512/4);

106 
b
->
Êags
 |
B_VALID
;

107 
b
->
Êags
 &~
B_DIRTY
;

108 
	`wakeup
(
b
);

111 if((
ide_queue
 = 
b
->
q√xt
) != 0)

112 
	`ide_°¨t_ªque°
(
ide_queue
);

114 
	`ªÀa£
(&
ide_lock
);

115 
	}
}

121 
	$ide_rw
(
buf
 *
b
)

123 
buf
 **
µ
;

125 if(!(
b
->
Êags
 & 
B_BUSY
))

126 
	`∑nic
("ide_rw: bufÇot busy");

127 if((
b
->
Êags
 & (
B_VALID
|
B_DIRTY
)) == B_VALID)

128 
	`∑nic
("ide_rw:ÇothingÅo do");

129 if(
b
->
dev
 !0 && !
disk_1_¥e£¡
)

130 
	`∑nic
("ide disk 1ÇotÖresent");

132 
	`acquúe
(&
ide_lock
);

135 
b
->
q√xt
 = 0;

136 
µ
=&
ide_queue
; *µ;Öp=&(*µ)->
q√xt
)

138 *
µ
 = 
b
;

141 if(
ide_queue
 =
b
)

142 
	`ide_°¨t_ªque°
(
b
);

146 (
b
->
Êags
 & (
B_VALID
|
B_DIRTY
)) != B_VALID)

147 
	`¶ìp
(
b
, &
ide_lock
);

149 
	`ªÀa£
(&
ide_lock
);

150 
	}
}

	@idle.c

3 
	~"ty≥s.h
"

4 
	~"°©.h
"

5 
	~"u£r.h
"

6 
	~"f˙é.h
"

9 
	$maö
()

11 
i
;

17 
	`¥ötf
(1,"ö idÀ\n",
i
);

19 
	}
}

	@idlecode.S

1 #Inôü»
¥o˚ss
 
execs
 /
idÀ
.

3 
	~"sysˇŒ.h
"

4 
	~"å≠s.h
"

6 #exec(
idÀ
, 
¨gv
)

7 .
globl
 
°¨t


8 
	g°¨t
:

9 
n›


10 
n›


11 
push
 %
óx


12 
p›
 %
óx


13 
n›


14 
n›


15 
jmp
 
°¨t


16 
pushl
 
$¨gv


17 
pushl
 
$idÀ


18 
pushl
 
$0


19 
movl
 
$SYS_exec
, %
óx


20 
	g$T_SYSCALL


22 #f‹(;;Ë
exô
();

23 
	gexô
:

24 
movl
 
$SYS_exô
, %
óx


25 
$T_SYSCALL


26 
jmp
 
	gexô


28 #ch¨ 
idÀ
[] = "/idle\0";

29 
	gidÀ
:

30 .
°rög
 "/idle\0"

32 #ch¨ *
¨gv
[] = { 
idÀ
, 0 };

33 .
	gp2Æign
 2

34 
	g¨gv
:

35 .
idÀ


	@init.c

3 
	~"ty≥s.h
"

4 
	~"°©.h
"

5 
	~"u£r.h
"

6 
	~"f˙é.h
"

8 *
	gsh_¨gs
[] = { "sh", 0 };

11 
	$maö
()

13 
pid
, 
wpid
;

15 if(
	`›í
("c⁄sﬁe", 
O_RDWR
) < 0){

16 
	`mknod
("console", 1, 1);

17 
	`›í
("c⁄sﬁe", 
O_RDWR
);

19 
	`dup
(0);

20 
	`dup
(0);

23 
	`¥ötf
(1, "init: starting sh\n");

24 
pid
 = 
	`f‹k
();

25 if(
pid
 < 0){

26 
	`¥ötf
(1, "init: fork failed\n");

27 
	`exô
();

29 if(
pid
 == 0){

30 
	`exec
("sh", 
sh_¨gs
);

31 
	`¥ötf
(1, "init:Éxec sh failed\n");

32 
	`exô
();

34 (
wpid
=
	`waô
()Ë>0 && wpid !
pid
)

35 
	`¥ötf
(1, "zombie!\n");

37 
	}
}

	@initcode.S

1 #Inôü»
¥o˚ss
 
execs
 /
öô
.

3 
	~"sysˇŒ.h
"

4 
	~"å≠s.h
"

6 #exec(
öô
, 
¨gv
)

7 .
globl
 
°¨t


8 
	g°¨t
:

9 
pushl
 
$¨gv


10 
pushl
 
$öô


11 
pushl
 
$0


12 
movl
 
$SYS_exec
, %
óx


13 
	g$T_SYSCALL


15 #f‹(;;Ë
exô
();

16 
	gexô
:

17 
movl
 
$SYS_exô
, %
óx


18 
$T_SYSCALL


19 
jmp
 
	gexô


21 #ch¨ 
öô
[] = "/init\0";

22 
	göô
:

23 .
°rög
 "/init\0"

25 #ch¨ *
¨gv
[] = { 
öô
, 0 };

26 .
	gp2Æign
 2

27 
	g¨gv
:

28 .
öô


	@ioapic.c

5 
	~"ty≥s.h
"

6 
	~"defs.h
"

7 
	~"å≠s.h
"

9 
	#IOAPIC
 0xFEC00000

10 

	)

11 
	#REG_ID
 0x00

12 
	#REG_VER
 0x01

13 
	#REG_TABLE
 0x10

14 

	)

20 
	#INT_DISABLED
 0x00010000

21 
	#INT_LEVEL
 0x00008000

22 
	#INT_ACTIVELOW
 0x00002000

23 
	#INT_LOGICAL
 0x00000800

24 

	)

25 vﬁ©ûê
iﬂpic
 *
	giﬂpic
;

28 
	siﬂpic
 {

29 
uöt
 
	mªg
;

30 
uöt
 
	m∑d
[3];

31 
uöt
 
	md©a
;

34 
uöt


35 
	$iﬂpic_ªad
(
ªg
)

37 
iﬂpic
->
ªg
 =Ñeg;

38  
iﬂpic
->
d©a
;

39 
	}
}

42 
	$iﬂpic_wrôe
(
ªg
, 
uöt
 
d©a
)

44 
iﬂpic
->
ªg
 =Ñeg;

45 
iﬂpic
->
d©a
 = data;

46 
	}
}

49 
	$iﬂpic_öô
()

51 
i
, 
id
, 
maxöå
;

53 if(!
ismp
)

56 
iﬂpic
 = (vﬁ©ûêiﬂpic*)
IOAPIC
;

57 
maxöå
 = (
	`iﬂpic_ªad
(
REG_VER
) >> 16) & 0xFF;

58 
id
 = 
	`iﬂpic_ªad
(
REG_ID
) >> 24;

59 if(
id
 !
iﬂpic_id
)

60 
	`˝rötf
("ioapic_init: id isn'tÉqualÅo ioapic_id;Çotá MP\n");

64 
i
 = 0; i <
maxöå
; i++){

65 
	`iﬂpic_wrôe
(
REG_TABLE
+2*
i
, 
INT_DISABLED
 | (
IRQ_OFFSET
 + i));

66 
	`iﬂpic_wrôe
(
REG_TABLE
+2*
i
+1, 0);

68 
	}
}

71 
	$iﬂpic_íabÀ
(
úq
, 
˝unum
)

73 if(!
ismp
)

79 
	`iﬂpic_wrôe
(
REG_TABLE
+2*
úq
, 
IRQ_OFFSET
 + irq);

80 
	`iﬂpic_wrôe
(
REG_TABLE
+2*
úq
+1, 
˝unum
 << 24);

81 
	}
}

	@kalloc.c

8 
	~"ty≥s.h
"

9 
	~"defs.h
"

10 
	~"∑øm.h
"

11 
	~"pm≠.h
"

12 
	~"buddy.h
"

13 
	~"•ölock.h
"

14 
	~"as£π.h
"

16 
•ölock
 
	gkÆloc_lock
;

18 
	srun
 {

19 
run
 *
	m√xt
;

20 
	mÀn
;

22 
run
 *
	g‰ìli°
;

23 
uöt
 
	g≈ages
;

24 
uöt
 
	gdbg
 = 0;

25 * 
	g°¨t
;

26 
e820m≠
 * 
	ge820_memm≠
;

29 
	$öô_∑ges_li°
(
∑ddr_t
 
°¨t_addr
, 
uöt
 
Àn
, 
uöt32_t
 
Êags
)

31 
∑ddr_t
 
addr
;

33 i‡(
°¨t_addr
 >= 0xfec00000)

35 
	`as£π
(
	`PGOFF
(
°¨t_addr
) == 0, "error in init_pages_list");

36 
addr
 = 
°¨t_addr
;ádd∏< sèπ_add∏+ 
Àn
;ádd∏+
PAGE
) {

38 
	`∑ge_‰ame
(
addr
)->
Êags
 = flags;

40 
	}
}

43 
	$öô_phy∑ges
()

45 
i
;

46 
uöt
 
Àn
;

47 
∑ddr_t
 
ba£
;

48 
≈ages
 = 0;

49 
e820_memm≠
 = (
e820m≠
 *)(0x8000);

51 
i
 = 0; i < 
e820_memm≠
->
ƒ_m≠
; i ++) {

53 
≈ages
 +
e820_memm≠
->
m≠
[
i
].
size
 / 
PAGE
;

56 
	`˝rötf
("tŸÆávaûabÀ mem‹yÖage†: %x\n", 
≈ages
);

58 
∑ges
 = (
Page
 *)
°¨t
;

59 
	`mem£t
(
∑ges
, 0, (
Page
Ë* 
≈ages
);

60 
°¨t
 +
	`ROUNDUP
((
Page
Ë* 
≈ages
, 
PAGE
);

61 
	`˝rötf
("°¨à%x\n",(
uöt
)
°¨t
);

63 
i
 = 0; i < 
e820_memm≠
->
ƒ_m≠
; i++) {

64 
ba£
 = (
∑ddr_t
)
e820_memm≠
->
m≠
[
i
].
addr
;

65 
ba£
 = 
	`ROUNDUP
(ba£, 
PAGE
);

66 
Àn
 = (
uöt
)
e820_memm≠
->
m≠
[
i
].
size
;

68 
e820_memm≠
->
m≠
[
i
].
ty≥
) {

69 
E820_ARM
 :

70 i‡(
ba£
 + 
Àn
 < (
uöt
Ë
°¨t
) {

71 
	`öô_∑ges_li°
(
ba£
, 
Àn
, 
PG_ª£rved
);

72 
	`˝rötf
("ª£rved f‹ kî√»%x, sizê%x\n", 
ba£
, 
Àn
);

75 i‡(
ba£
 < (
uöt
)
°¨t
) {

76 
	`öô_∑ges_li°
(
ba£
, (
uöt
)
°¨t
 - ba£, 
PG_ª£rved
);

77 
	`˝rötf
("ª£rved f‹ kî√»%x, sizê%x\n", 
ba£
, (
uöt
)
°¨t
 - base);

78 
	`öô_∑ges_li°
((
∑ddr_t
)
°¨t
, 
Àn
 + 
ba£
 - (
uöt
)start, 0);

79 
	`öô_memm≠
(
	`∑ge_‰ame
((
∑ddr_t
)
°¨t
), (
Àn
 + 
ba£
 - (
uöt
)°¨tË/ 
PAGE
);

80 
	`˝rötf
("‰ì mem‹y %x, sizê%x\n", (
∑ddr_t
)
°¨t
, 
Àn
 + 
ba£
 - (
uöt
)start);

83 
	`öô_∑ges_li°
(
ba£
, 
Àn
, 0);

84 
	`öô_memm≠
(
	`∑ge_‰ame
(
ba£
), 
Àn
 / 
PAGE
);

85 
	`˝rötf
("‰ì mem‹y %x, sizê%x\n", 
ba£
, 
Àn
);

89 
E820_ARR
 :

90 
	`öô_∑ges_li°
(
ba£
, 
Àn
, 
PG_ª£rved
);

91 
	`˝rötf
("ª£rved memm‹y %x, sizê%x\n", 
ba£
, 
Àn
);

97 
	}
}

104 
	$köô
()

106 
íd
;

111 
	`öôlock
(&
kÆloc_lock
, "kalloc");

112 
°¨t
 = (*Ë&
íd
;

113 
°¨t
 = (*Ë(((
uöt
)°¨à+ 
PAGE
) & ~(PAGE-1));

116 
	`öô_phy∑ges
();

146 
	`i386_vm_öô
();

148 
	}
}

155 
	$k‰ì
(*
v
, 
Àn
)

157 
ƒ
;

158 i‡(
Àn
 <0 ||Üí % 
PAGE
)

159 
	`∑nic
("kfree");

160 
ƒ
 = 
Àn
 / 
PAGE
;

161 i‡(
ƒ
 > 1024)

162 
	`∑nic
("kree :Éxceed maximumÖagesÅhat kfree can handle\n");

163 
	`acquúe
(&
kÆloc_lock
);

165 
	`__‰ì_∑ges
(
	`∑ge_‰ame
(
v
), 
ƒ
);

166 
	`ªÀa£
(&
kÆloc_lock
);

167 
	}
}

217 
	$kÆloc
(
n
)

219 
ƒ
;

220 
Page
 * 
p
;

221 i‡(
n
 <0 ||Ç % 
PAGE
)

222 
	`∑nic
("kalloc");

223 
ƒ
 = 
n
 / 
PAGE
;

224 i‡(
ƒ
 > 1024)

225 
	`∑nic
("kalloc :Éxceed maximumÖagesÅhat kalloc can handle\n");

226 
	`acquúe
(&
kÆloc_lock
);

227 
p
 = 
	`__Æloc_∑ges
(
ƒ
);

229 
	`ªÀa£
(&
kÆloc_lock
);

230 i‡(
p
)

231  (*)
	`∑ge_addr
(
p
);

233 
	`˝rötf
("kalloc: out of memory\n");

236 
	}
}

	@kbd.c

1 
	~"ty≥s.h
"

2 
	~"x86.h
"

3 
	~"defs.h
"

4 
	~"kbd.h
"

7 
	$kbd_gëc
()

9 
uöt
 
shi·
;

10 
uch¨
 *
ch¨code
[4] = {

11 
n‹mÆm≠
, 
shi·m≠
, 
˘lm≠
, ctlmap

13 
uöt
 
°
, 
d©a
, 
c
;

15 
°
 = 
	`öb
(
KBSTATP
);

16 if((
°
 & 
KBS_DIB
) == 0)

18 
d©a
 = 
	`öb
(
KBDATAP
);

20 if(
d©a
 == 0xE0){

21 
shi·
 |
E0ESC
;

23 } if(
d©a
 & 0x80){

25 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

26 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

28 } if(
shi·
 & 
E0ESC
){

30 
d©a
 |= 0x80;

31 
shi·
 &~
E0ESC
;

34 
shi·
 |
shi·code
[
d©a
];

35 
shi·
 ^
toggÀcode
[
d©a
];

36 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

37 if(
shi·
 & 
CAPSLOCK
){

38 if('a' <
c
 && c <= 'z')

39 
c
 += 'A' - 'a';

40 if('A' <
c
 && c <= 'Z')

41 
c
 += 'a' - 'A';

43  
c
;

44 
	}
}

47 
	$kbd_öå
()

49 
	`c⁄sﬁe_öå
(
kbd_gëc
);

50 
	}
}

	@kbd.h

3 
	#KBSTATP
 0x64

4 
	#KBS_DIB
 0x01

5 
	#KBDATAP
 0x60

6 

	)

7 
	#NO
 0

	)

9 
	#SHIFT
 (1<<0)

	)

10 
	#CTL
 (1<<1)

	)

11 
	#ALT
 (1<<2)

	)

13 
	#CAPSLOCK
 (1<<3)

	)

14 
	#NUMLOCK
 (1<<4)

	)

15 
	#SCROLLLOCK
 (1<<5)

	)

17 
	#E0ESC
 (1<<6)

	)

20 
	#KEY_HOME
 0xE0

	)

21 
	#KEY_END
 0xE1

	)

22 
	#KEY_UP
 0xE2

	)

23 
	#KEY_DN
 0xE3

	)

24 
	#KEY_LF
 0xE4

	)

25 
	#KEY_RT
 0xE5

	)

26 
	#KEY_PGUP
 0xE6

	)

27 
	#KEY_PGDN
 0xE7

	)

28 
	#KEY_INS
 0xE8

	)

29 
	#KEY_DEL
 0xE9

	)

32 
	#C
(
x
Ë(x - '@')

	)

34 
uch¨
 
	gshi·code
[256] =

36 [0x1D] 
CTL
,

37 [0x2A] 
SHIFT
,

38 [0x36] 
SHIFT
,

39 [0x38] 
ALT
,

40 [0x9D] 
CTL
,

41 [0xB8] 
ALT


44 
uch¨
 
	gtoggÀcode
[256] =

46 [0x3A] 
CAPSLOCK
,

47 [0x45] 
NUMLOCK
,

48 [0x46] 
SCROLLLOCK


51 
uch¨
 
	gn‹mÆm≠
[256] =

53 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

56 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

58 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

59 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

60 
NO
, ' ', NO, NO, NO, NO, NO, NO,

61 
NO
, NO, NO, NO, NO, NO, NO, '7',

63 '2', '3', '0', '.', 
NO
, NO, NO, NO,

66 [0xC8] 
KEY_UP
, [0xD0] 
KEY_DN
,

67 [0xC9] 
KEY_PGUP
, [0xD1] 
KEY_PGDN
,

68 [0xCB] 
KEY_LF
, [0xCD] 
KEY_RT
,

69 [0x97] 
KEY_HOME
, [0xCF] 
KEY_END
,

70 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


73 
uch¨
 
	gshi·m≠
[256] =

75 
NO
, 033, '!', '@', '#', '$', '%', '^',

78 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

80 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

81 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

82 
NO
, ' ', NO, NO, NO, NO, NO, NO,

83 
NO
, NO, NO, NO, NO, NO, NO, '7',

85 '2', '3', '0', '.', 
NO
, NO, NO, NO,

88 [0xC8] 
KEY_UP
, [0xD0] 
KEY_DN
,

89 [0xC9] 
KEY_PGUP
, [0xD1] 
KEY_PGDN
,

90 [0xCB] 
KEY_LF
, [0xCD] 
KEY_RT
,

91 [0x97] 
KEY_HOME
, [0xCF] 
KEY_END
,

92 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


95 
uch¨
 
	g˘lm≠
[256] =

97 
NO
, NO, NO, NO, NO, NO, NO, NO,

98 
NO
, NO, NO, NO, NO, NO, NO, NO,

99 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

100 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

101 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

102 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

103 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

105 [0xB5] 
C
('/'),

106 [0xC8] 
KEY_UP
, [0xD0] 
KEY_DN
,

107 [0xC9] 
KEY_PGUP
, [0xD1] 
KEY_PGDN
,

108 [0xCB] 
KEY_LF
, [0xCD] 
KEY_RT
,

109 [0x97] 
KEY_HOME
, [0xCF] 
KEY_END
,

110 [0xD2] 
KEY_INS
, [0xD3] 
KEY_DEL


	@kill.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
;

10 if(
¨gc
 < 1){

11 
	`¥ötf
(2, "usage: killÖid...\n");

12 
	`exô
();

14 
i
=1; i<
¨gc
; i++)

15 
	`kûl
(
	`©oi
(
¨gv
[
i
]));

16 
	`exô
();

17 
	}
}

	@lapic.c

4 
	~"ty≥s.h
"

5 
	~"defs.h
"

6 
	~"å≠s.h
"

7 
	~"mmu.h
"

8 
	~"x86.h
"

11 
	#ID
 (0x0020/4)

12 
	#VER
 (0x0030/4)

13 
	#TPR
 (0x0080/4)

14 
	#EOI
 (0x00B0/4)

15 
	#SVR
 (0x00F0/4)

16 
	#ENABLE
 0x00000100

17 
	#ESR
 (0x0280/4)

18 
	#ICRLO
 (0x0300/4)

19 
	#INIT
 0x00000500

20 
	#STARTUP
 0x00000600

21 
	#DELIVS
 0x00001000

22 
	#ASSERT
 0x00004000

23 
	#LEVEL
 0x00008000

24 
	#BCAST
 0x00080000

25 
	#ICRHI
 (0x0310/4)

26 
	#TIMER
 (0x0320/4)

27 
	#X1
 0x0000000B

28 
	#PERIODIC
 0x00020000

29 
	#PCINT
 (0x0340/4)

30 
	#LINT0
 (0x0350/4)

31 
	#LINT1
 (0x0360/4)

32 
	#ERROR
 (0x0370/4)

33 
	#MASKED
 0x00010000

34 
	#TICR
 (0x0380/4)

35 
	#TCCR
 (0x0390/4)

36 
	#TDCR
 (0x03E0/4)

37 

	)

38 vﬁ©ûê
uöt
 *
	gœpic
;

41 
	$œpicw
(
ödex
, 
vÆue
)

43 
œpic
[
ödex
] = 
vÆue
;

44 
œpic
[
ID
];

45 
	}
}

48 
	$œpic_öô
(
c
)

50 if(!
œpic
)

54 
	`œpicw
(
SVR
, 
ENABLE
 | (
IRQ_OFFSET
+
IRQ_SPURIOUS
));

60 
	`œpicw
(
TDCR
, 
X1
);

61 
	`œpicw
(
TIMER
, 
PERIODIC
 | (
IRQ_OFFSET
 + 
IRQ_TIMER
));

62 
	`œpicw
(
TICR
, 10000000);

65 
	`œpicw
(
LINT0
, 
MASKED
);

66 
	`œpicw
(
LINT1
, 
MASKED
);

70 if(((
œpic
[
VER
]>>16) & 0xFF) >= 4)

71 
	`œpicw
(
PCINT
, 
MASKED
);

74 
	`œpicw
(
ERROR
, 
IRQ_OFFSET
+
IRQ_ERROR
);

77 
	`œpicw
(
ESR
, 0);

78 
	`œpicw
(
ESR
, 0);

81 
	`œpicw
(
EOI
, 0);

84 
	`œpicw
(
ICRHI
, 0);

85 
	`œpicw
(
ICRLO
, 
BCAST
 | 
INIT
 | 
LEVEL
);

86 
œpic
[
ICRLO
] & 
DELIVS
)

90 
	`œpicw
(
TPR
, 0);

91 
	}
}

94 
	$˝u
()

101 if(
	`ªad_eÊags
()&
FL_IF
){

102 
n
;

103 if(
n
++ == 0)

104 
	`˝rötf
("cpu called from %x with interruptsÉnabled\n",

105 ((
uöt
*)
	`ªad_ebp
())[1]);

108 if(
œpic
)

109  
œpic
[
ID
]>>24;

111 
	}
}

115 
	$œpic_eoi
()

117 if(
œpic
)

118 
	`œpicw
(
EOI
, 0);

119 
	}
}

124 
	$mi¸odñay
(
us
)

126 vﬁ©ûê
j
 = 0;

128 
us
-- > 0)

129 
j
=0; j<10000; j++);

130 
	}
}

133 
	#IO_RTC
 0x70

	)

138 
	$œpic_°¨èp
(
uch¨
 
≠icid
, 
uöt
 
addr
)

140 
i
;

141 
ush‹t
 *
wrv
;

146 
	`outb
(
IO_RTC
, 0xF);

147 
	`outb
(
IO_RTC
+1, 0x0A);

148 
wrv
 = (
ush‹t
*)(0x40<<4 | 0x67);

149 
wrv
[0] = 0;

150 
wrv
[1] = 
addr
 >> 4;

154 
	`œpicw
(
ICRHI
, 
≠icid
<<24);

155 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
 | 
ASSERT
);

156 
	`mi¸odñay
(200);

157 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
);

158 
	`mi¸odñay
(100);

165 
i
 = 0; i < 2; i++){

166 
	`œpicw
(
ICRHI
, 
≠icid
<<24);

167 
	`œpicw
(
ICRLO
, 
STARTUP
 | (
addr
>>12));

168 
	`mi¸odñay
(200);

170 
	}
}

	@ln.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$maö
(
¨gc
, *
¨gv
[])

8 if(
¨gc
 != 3){

9 
	`¥ötf
(2, "Usage:Ün oldÇew\n");

10 
	`exô
();

12 if(
	`lök
(
¨gv
[1],árgv[2]) < 0)

13 
	`¥ötf
(2, "lök %†%s: faûed\n", 
¨gv
[1],árgv[2]);

14 
	`exô
();

15 
	}
}

	@ls.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

4 
	~"fs.h
"

7 
	$fmäame
(*
∑th
)

9 
buf
[
DIRSIZ
+1];

10 *
p
;

13 
p
=
∑th
+
	`°æí
(path);Ö >=Öath && *p != '/';Ö--)

15 
p
++;

18 if(
	`°æí
(
p
Ë>
DIRSIZ
)

19  
p
;

20 
	`memmove
(
buf
, 
p
, 
	`°æí
(p));

21 
	`mem£t
(
buf
+
	`°æí
(
p
), ' ', 
DIRSIZ
-strlen(p));

22  
buf
;

23 
	}
}

26 
	$ls
(*
∑th
)

28 
buf
[512], *
p
;

29 
fd
;

30 
dúít
 
de
;

31 
°©
 
°
;

33 if((
fd
 = 
	`›í
(
∑th
, 0)) < 0){

34 
	`¥ötf
(2, "ls: c™nŸ o≥¿%s\n", 
∑th
);

38 if(
	`f°©
(
fd
, &
°
) < 0){

39 
	`¥ötf
(2, "ls: c™nŸ sèà%s\n", 
∑th
);

40 
	`˛o£
(
fd
);

44 
°
.
ty≥
){

45 
T_FILE
:

46 
	`¥ötf
(1, "%†%d %d %d\n", 
	`fmäame
(
∑th
), 
°
.
ty≥
, st.
öo
, st.
size
);

49 
T_DIR
:

50 if(
	`°æí
(
∑th
Ë+ 1 + 
DIRSIZ
 + 1 >  
buf
){

51 
	`¥ötf
(1, "ls:ÖathÅooÜong\n");

54 
	`°r˝y
(
buf
, 
∑th
);

55 
p
 = 
buf
+
	`°æí
(buf);

56 *
p
++ = '/';

57 
	`ªad
(
fd
, &
de
, (de)) == (de)){

58 if(
de
.
öum
 == 0)

60 
	`memmove
(
p
, 
de
.
«me
, 
DIRSIZ
);

61 
p
[
DIRSIZ
] = 0;

62 if(
	`°©
(
buf
, &
°
) < 0){

63 
	`¥ötf
(1, "ls: c™nŸ sèà%s\n", 
buf
);

66 
	`¥ötf
(1, "%†%d %d %d\n", 
	`fmäame
(
buf
), 
°
.
ty≥
, st.
öo
, st.
size
);

70 
	`˛o£
(
fd
);

71 
	}
}

74 
	$maö
(
¨gc
, *
¨gv
[])

76 
i
;

78 if(
¨gc
 < 2){

79 
	`ls
(".");

80 
	`exô
();

82 
i
=1; i<
¨gc
; i++)

83 
	`ls
(
¨gv
[
i
]);

84 
	`exô
();

85 
	}
}

	@main.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"¥oc.h
"

6 
	~"•ölock.h
"

7 
	~"sched.h
"

8 
	~"x86.h
"

9 
	~"rq.h
"

10 
	~"pm≠.h
"

12 
boŸŸhîs
();

13 
	$mpmaö
(Ë
	`__©åibuã__
((
n‹ëu∫
));

17 
	$maö
()

19 
ed©a
[], 
íd
[];

20 * 
p
 = (*)(0x8004), *
cou¡
 = (*)(0x8000),
i
;

23 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

25 
	`mp_öô
();

26 
	`œpic_öô
(
	`mp_b˝u
());

27 
	`˝rötf
("\n˝u%d: sèπög xv6\n\n", 
	`˝u
());

28 
	`˝rötf
("cou¡ = %d\n",*
cou¡
);

29 
i
 = 0; i < *
cou¡
; i++,
p
 +=5)

30 
	`˝rötf
("mem ba£add: %x %x\nmíÜí : %x %x\n",*(
p
 + 1),*p, *(p+3), *(p+2));

32 
	`pöô
();

33 
	`böô
();

34 
	`pic_öô
();

35 
	`iﬂpic_öô
();

36 
	`köô
();

37 
	`tvöô
();

38 
	`fûeöô
();

39 
	`iöô
();

40 
	`c⁄sﬁe_öô
();

41 
	`ide_öô
();

42 if(!
ismp
)

43 
	`timî_öô
();

44 
	`u£röô
();

45 
	`boŸŸhîs
();

48 
	`mpmaö
();

49 
	}
}

54 
	$mpmaö
()

56 
∑ddr_t
 
boŸ_¸3
;

57 
	`˝rötf
("˝u%d: mpmaö\n", 
	`˝u
());

58 
	`idtöô
();

59 if(
	`˝u
(Ë!
	`mp_b˝u
()) {

60 
	`œpic_öô
(
	`˝u
());

61 
	`íabÀ_∑gög
();

63 
	`˝rötf
("˝u%d :ÖagögÉ«bÀd\n", 
	`˝u
());

65 
	`£tup£gs
(0);

66 
	`xchg
(&
˝us
[
	`˝u
()].
boŸed
, 1);

68 
	`˝rötf
("˝u%d: schedulög\n", 
	`˝u
());

70 
	`runIdÀ
();

71 
	}
}

74 
	$boŸŸhîs
()

76 
uch¨
 
_bö¨y_boŸŸhî_°¨t
[], 
_bö¨y_boŸŸhî_size
[];

77 
uch¨
 *
code
;

78 
˝u
 *
c
;

79 *
°ack
;

82 
code
 = (
uch¨
*)0x7000;

83 
	`memmove
(
code
, 
_bö¨y_boŸŸhî_°¨t
, (
uöt
)
_bö¨y_boŸŸhî_size
);

85 
c
 = 
˝us
; c < cpus+
n˝u
; c++){

86 if(
c
 =
˝us
+
	`˝u
())

90 
°ack
 = 
	`kÆloc
(
KSTACKSIZE
);

91 *(**)(
code
-4Ë
°ack
 + 
KSTACKSIZE
;

92 *(**)(
code
-8Ë
mpmaö
;

93 
	`œpic_°¨èp
(
c
->
≠icid
, (
uöt
)
code
);

96 
c
->
boŸed
 == 0)

99 
	}
}

	@matmul16.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

4 
	~"f˙é.h
"

6 
	#MATSIZE
 3

	)

8 
	gm©A
[
MATSIZE
][MATSIZE];

9 
	gm©B
[
MATSIZE
][MATSIZE];

10 
	gm©C
[
MATSIZE
][MATSIZE];

13 
	$ã°M©Mul
()

15 
i
,
j
,
k
,
ôî
;

17 
i
=0; i<
MATSIZE
; i++)

18 
j
=0; j<
MATSIZE
; j++)

20 
m©A
[
i
][
j
] = 1;

21 
m©B
[
i
][
j
] = 1;

24 
ôî
=0; iter<2000000; iter++)

27 
i
=0; i<
MATSIZE
; i++)

29 
j
=0; j<
MATSIZE
; j++)

31 
sum
 = 0;

32 
k
=0; k<
MATSIZE
; k++)

34 
sum
 +
m©A
[
i
][
k
] * 
m©B
[k][
j
];

36 
m©C
[
i
][
j
] = 
sum
;

41 
i
=0; i<
MATSIZE
; i++)

42 
j
=0; j<
MATSIZE
; j++)

43 
m©B
[
i
][
j
] = 
m©C
[i][j];

50 
	`¥ötf
(1, "pid %d d⁄e!\n", 
	`gëpid
());

53 
	}
}

56 
	$maö
(){

57 
i
;

58 
pid
;

60 
i
=0; i<16; i++){

62 
pid
 = 
	`f‹k
();

64 if(
pid
 < 0){

65 
	`¥ötf
(1, "matmul16 fork failed!\n");

66 
	`exô
();

68 if(
pid
 == 0){

70 
	`ã°M©Mul
();

71 
	`exô
();

75 
	`¥ötf
(1, "All children have been create!\n");

76 
i
 = 0;

77 
	`exô
();

78 
	}
}

	@memlayout.h

1 #i‚de‡
_MEMLAYOUT_H_


2 
	#_MEMLAYOUT_H_


	)

3 
	#KERNTOP
 0x80000000

8 
	#VPT
 0x7fc00000

9 
	#UVPT
 0x7f800000

10 
	#KSTACKTOP
 0xfeb00000

	@mkdir.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
i
;

10 if(
¨gc
 < 2){

11 
	`¥ötf
(2, "Usage: mkdir files...\n");

12 
	`exô
();

15 
i
 = 1; i < 
¨gc
; i++){

16 if(
	`mkdú
(
¨gv
[
i
]) < 0){

17 
	`¥ötf
(2, "mkdú: %†ÁûedÅÿ¸óã\n", 
¨gv
[
i
]);

22 
	`exô
();

23 
	}
}

	@mkfs.c

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<f˙é.h
>

6 
	~<as£π.h
>

7 
	~"ty≥s.h
"

8 
	~"fs.h
"

10 
	gnblocks
 = 995;

11 
	gnöodes
 = 200;

12 
	gsize
 = 1024;

14 
	gfsfd
;

15 
su≥rblock
 
	gsb
;

16 
	gzî€s
[512];

17 
uöt
 
	g‰ìblock
;

18 
uöt
 
	gu£dblocks
;

19 
uöt
 
	gbôblocks
;

20 
uöt
 
	g‰ìöode
 = 1;

22 
bÆloc
();

23 
w£˘
(
uöt
, *);

24 
wöode
(
uöt
, 
döode
*);

25 
röode
(
uöt
 
öum
, 
döode
 *
ù
);

26 
r£˘
(
uöt
 
£c
, *
buf
);

27 
uöt
 
üŒoc
(
ush‹t
 
ty≥
);

28 
üµíd
(
uöt
 
öum
, *
p
, 
n
);

31 
ush‹t


32 
	$xsh‹t
(
ush‹t
 
x
)

34 
ush‹t
 
y
;

35 
uch¨
 *
a
 = (uch¨*Ë&
y
;

36 
a
[0] = 
x
;

37 
a
[1] = 
x
 >> 8;

38  
y
;

39 
	}
}

41 
uöt


42 
	$xöt
(
uöt
 
x
)

44 
uöt
 
y
;

45 
uch¨
 *
a
 = (uch¨*Ë&
y
;

46 
a
[0] = 
x
;

47 
a
[1] = 
x
 >> 8;

48 
a
[2] = 
x
 >> 16;

49 
a
[3] = 
x
 >> 24;

50  
y
;

51 
	}
}

54 
	$maö
(
¨gc
, *
¨gv
[])

56 
i
, 
cc
, 
fd
;

57 
uöt
 
roŸöo
, 
öum
, 
off
;

58 
dúít
 
de
;

59 
buf
[512];

60 
döode
 
dö
;

62 if(
¨gc
 < 2){

63 
	`Ârötf
(
°dîr
, "Usage: mkfs fs.img files...\n");

64 
	`exô
(1);

67 
	`as£π
((512 % (
döode
)) == 0);

68 
	`as£π
((512 % (
dúít
)) == 0);

70 
fsfd
 = 
	`›í
(
¨gv
[1], 
O_RDWR
|
O_CREAT
|
O_TRUNC
, 0666);

71 if(
fsfd
 < 0){

72 
	`≥º‹
(
¨gv
[1]);

73 
	`exô
(1);

76 
sb
.
size
 = 
	`xöt
(size);

77 
sb
.
nblocks
 = 
	`xöt
(nblocks);

78 
sb
.
nöodes
 = 
	`xöt
(ninodes);

80 
bôblocks
 = 
size
/(512*8) + 1;

81 
u£dblocks
 = 
nöodes
 / 
IPB
 + 3 + 
bôblocks
;

82 
‰ìblock
 = 
u£dblocks
;

84 
	`¥ötf
("u£d %d (bô %dÇöodê%luË‰ì %uÅŸÆ %d\n", 
u£dblocks
,

85 
bôblocks
, 
nöodes
/
IPB
 + 1, 
‰ìblock
, 
nblocks
+
u£dblocks
);

87 
	`as£π
(
nblocks
 + 
u£dblocks
 =
size
);

89 
i
 = 0; i < 
nblocks
 + 
u£dblocks
; i++)

90 
	`w£˘
(
i
, 
zî€s
);

92 
	`w£˘
(1, &
sb
);

94 
roŸöo
 = 
	`üŒoc
(
T_DIR
);

95 
	`as£π
(
roŸöo
 == 1);

97 
	`bzîo
(&
de
, (de));

98 
de
.
öum
 = 
	`xsh‹t
(
roŸöo
);

99 
	`°r˝y
(
de
.
«me
, ".");

100 
	`üµíd
(
roŸöo
, &
de
, (de));

102 
	`bzîo
(&
de
, (de));

103 
de
.
öum
 = 
	`xsh‹t
(
roŸöo
);

104 
	`°r˝y
(
de
.
«me
, "..");

105 
	`üµíd
(
roŸöo
, &
de
, (de));

107 
i
 = 2; i < 
¨gc
; i++){

108 
	`as£π
(
	`ödex
(
¨gv
[
i
], '/') == 0);

110 if((
fd
 = 
	`›í
(
¨gv
[
i
], 0)) < 0){

111 
	`≥º‹
(
¨gv
[
i
]);

112 
	`exô
(1);

119 if(
¨gv
[
i
][0] == '_')

120 ++
¨gv
[
i
];

122 
öum
 = 
	`üŒoc
(
T_FILE
);

124 
	`bzîo
(&
de
, (de));

125 
de
.
öum
 = 
	`xsh‹t
(inum);

126 
	`°∫˝y
(
de
.
«me
, 
¨gv
[
i
], 
DIRSIZ
);

127 
	`üµíd
(
roŸöo
, &
de
, (de));

129 (
cc
 = 
	`ªad
(
fd
, 
buf
, (buf))) > 0)

130 
	`üµíd
(
öum
, 
buf
, 
cc
);

132 
	`˛o£
(
fd
);

136 
	`röode
(
roŸöo
, &
dö
);

137 
off
 = 
	`xöt
(
dö
.
size
);

138 
off
 = ((off/
BSIZE
) + 1) * BSIZE;

139 
dö
.
size
 = 
	`xöt
(
off
);

140 
	`wöode
(
roŸöo
, &
dö
);

142 
	`bÆloc
(
u£dblocks
);

144 
	`exô
(0);

145 
	}
}

148 
	$w£˘
(
uöt
 
£c
, *
buf
)

150 if(
	`l£ek
(
fsfd
, 
£c
 * 512L, 0) != sec * 512L){

151 
	`≥º‹
("lseek");

152 
	`exô
(1);

154 if(
	`wrôe
(
fsfd
, 
buf
, 512) != 512){

155 
	`≥º‹
("write");

156 
	`exô
(1);

158 
	}
}

160 
uöt


161 
	$i2b
(
uöt
 
öum
)

163  (
öum
 / 
IPB
) + 2;

164 
	}
}

167 
	$wöode
(
uöt
 
öum
, 
döode
 *
ù
)

169 
buf
[512];

170 
uöt
 
bn
;

171 
döode
 *
dù
;

173 
bn
 = 
	`i2b
(
öum
);

174 
	`r£˘
(
bn
, 
buf
);

175 
dù
 = ((
döode
*Ë
buf
Ë+ (
öum
 % 
IPB
);

176 *
dù
 = *
ù
;

177 
	`w£˘
(
bn
, 
buf
);

178 
	}
}

181 
	$röode
(
uöt
 
öum
, 
döode
 *
ù
)

183 
buf
[512];

184 
uöt
 
bn
;

185 
döode
 *
dù
;

187 
bn
 = 
	`i2b
(
öum
);

188 
	`r£˘
(
bn
, 
buf
);

189 
dù
 = ((
döode
*Ë
buf
Ë+ (
öum
 % 
IPB
);

190 *
ù
 = *
dù
;

191 
	}
}

194 
	$r£˘
(
uöt
 
£c
, *
buf
)

196 if(
	`l£ek
(
fsfd
, 
£c
 * 512L, 0) != sec * 512L){

197 
	`≥º‹
("lseek");

198 
	`exô
(1);

200 if(
	`ªad
(
fsfd
, 
buf
, 512) != 512){

201 
	`≥º‹
("read");

202 
	`exô
(1);

204 
	}
}

206 
uöt


207 
	$üŒoc
(
ush‹t
 
ty≥
)

209 
uöt
 
öum
 = 
‰ìöode
++;

210 
döode
 
dö
;

212 
	`bzîo
(&
dö
, (din));

213 
dö
.
ty≥
 = 
	`xsh‹t
(type);

214 
dö
.
∆ök
 = 
	`xsh‹t
(1);

215 
dö
.
size
 = 
	`xöt
(0);

216 
	`wöode
(
öum
, &
dö
);

217  
öum
;

218 
	}
}

221 
	$bÆloc
(
u£d
)

223 
uch¨
 
buf
[512];

224 
i
;

226 
	`¥ötf
("bÆloc: fú° %d block†havêbì¿Æloˇãd\n", 
u£d
);

227 
	`as£π
(
u£d
 < 512);

228 
	`bzîo
(
buf
, 512);

229 
i
 = 0; i < 
u£d
; i++) {

230 
buf
[
i
/8] = buf[i/8] | (0x1 << (i%8));

232 
	`¥ötf
("bÆloc: wrôêbôm≠ blockáà£˘‹ %lu\n", 
nöodes
/
IPB
 + 3);

233 
	`w£˘
(
nöodes
 / 
IPB
 + 3, 
buf
);

234 
	}
}

236 
	#mö
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

239 
	$üµíd
(
uöt
 
öum
, *
xp
, 
n
)

241 *
p
 = (*Ë
xp
;

242 
uöt
 
fbn
, 
off
, 
n1
;

243 
döode
 
dö
;

244 
buf
[512];

245 
uöt
 
ödúe˘
[
NINDIRECT
];

246 
uöt
 
x
;

248 
	`röode
(
öum
, &
dö
);

250 
off
 = 
	`xöt
(
dö
.
size
);

251 
n
 > 0){

252 
fbn
 = 
off
 / 512;

253 
	`as£π
(
fbn
 < 
MAXFILE
);

254 if(
fbn
 < 
NDIRECT
) {

255 if(
	`xöt
(
dö
.
addrs
[
fbn
]) == 0) {

256 
dö
.
addrs
[
fbn
] = 
	`xöt
(
‰ìblock
++);

257 
u£dblocks
++;

259 
x
 = 
	`xöt
(
dö
.
addrs
[
fbn
]);

261 if(
	`xöt
(
dö
.
addrs
[
INDIRECT
]) == 0) {

263 
dö
.
addrs
[
INDIRECT
] = 
	`xöt
(
‰ìblock
++);

264 
u£dblocks
++;

267 
	`r£˘
(
	`xöt
(
dö
.
addrs
[
INDIRECT
]), (*Ë
ödúe˘
);

268 if(
ödúe˘
[
fbn
 - 
NDIRECT
] == 0) {

269 
ödúe˘
[
fbn
 - 
NDIRECT
] = 
	`xöt
(
‰ìblock
++);

270 
u£dblocks
++;

271 
	`w£˘
(
	`xöt
(
dö
.
addrs
[
INDIRECT
]), (*Ë
ödúe˘
);

273 
x
 = 
	`xöt
(
ödúe˘
[
fbn
-
NDIRECT
]);

275 
n1
 = 
	`mö
(
n
, (
fbn
 + 1Ë* 512 - 
off
);

276 
	`r£˘
(
x
, 
buf
);

277 
	`bc›y
(
p
, 
buf
 + 
off
 - (
fbn
 * 512), 
n1
);

278 
	`w£˘
(
x
, 
buf
);

279 
n
 -
n1
;

280 
off
 +
n1
;

281 
p
 +
n1
;

283 
dö
.
size
 = 
	`xöt
(
off
);

284 
	`wöode
(
öum
, &
dö
);

285 
	}
}

	@mmu.h

1 #i‚de‡
_MMU_H_


2 
	#_MMU_H_


	)

7 
	#PTE_P
 0x001

8 
	#PTE_W
 0x002

9 
	#PTE_U
 0x004

10 
	#PTE_PWT
 0x008

11 
	#PTE_PCD
 0x010

12 
	#PTE_A
 0x020

13 
	#PTE_D
 0x040

14 
	#PTE_PS
 0x080

15 
	#PTE_MBZ
 0x180

16 

	)

18 
	#CR0_PE
 0x00000001

19 
	#CR0_MP
 0x00000002

20 
	#CR0_EM
 0x00000004

21 
	#CR0_TS
 0x00000008

22 
	#CR0_ET
 0x00000010

23 
	#CR0_NE
 0x00000020

24 
	#CR0_WP
 0x00010000

25 
	#CR0_AM
 0x00040000

26 
	#CR0_NW
 0x20000000

27 
	#CR0_CD
 0x40000000

28 
	#CR0_PG
 0x80000000

29 

	)

30 
	#CR4_PCE
 0x00000100

31 
	#CR4_MCE
 0x00000040

32 
	#CR4_PSE
 0x00000010

33 
	#CR4_DE
 0x00000008

34 
	#CR4_TSD
 0x00000004

35 
	#CR4_PVI
 0x00000002

36 
	#CR4_VME
 0x00000001

37 

	)

52 
	#PDX
(
œ
Ë((((
vaddr_t
)÷a)Ë>> 
PDXSHIFT
Ë& 0x3FF)

	)

55 
	#PPN
(
œ
Ë(((
vaddr_t
)÷a)Ë>> 
PTXSHIFT
)

	)

58 
	#PTX
(
œ
Ë((((
vaddr_t
)÷a)Ë>> 
PTXSHIFT
Ë& 0x3FF)

	)

61 
	#PGOFF
(
œ
Ë(((
vaddr_t
)÷a)Ë& 0xFFF)

	)

64 
	#PTE_ADDR
(
±e
Ë((
∑ddr_t
)’ãË& ~0xFFF)

	)

67 
	#PDXSHIFT
 22

68 
	#PTXSHIFT
 12

69 
	#PTENTRY
 1024

70 
	#PTSIZE
 
PAGE
 * 
PTENTRY


71 

	)

73 
	#FL_CF
 0x00000001

74 
	#FL_PF
 0x00000004

75 
	#FL_AF
 0x00000010

76 
	#FL_ZF
 0x00000040

77 
	#FL_SF
 0x00000080

78 
	#FL_TF
 0x00000100

79 
	#FL_IF
 0x00000200

80 
	#FL_DF
 0x00000400

81 
	#FL_OF
 0x00000800

82 
	#FL_IOPL_MASK
 0x00003000

83 
	#FL_IOPL_0
 0x00000000

84 
	#FL_IOPL_1
 0x00001000

85 
	#FL_IOPL_2
 0x00002000

86 
	#FL_IOPL_3
 0x00003000

87 
	#FL_NT
 0x00004000

88 
	#FL_RF
 0x00010000

89 
	#FL_VM
 0x00020000

90 
	#FL_AC
 0x00040000

91 
	#FL_VIF
 0x00080000

92 
	#FL_VIP
 0x00100000

93 
	#FL_ID
 0x00200000

94 

	)

96 
	s£gdesc
 {

97 
uöt
 
	mlim_15_0
 : 16;

98 
uöt
 
	mba£_15_0
 : 16;

99 
uöt
 
	mba£_23_16
 : 8;

100 
uöt
 
	mty≥
 : 4;

101 
uöt
 
	ms
 : 1;

102 
uöt
 
	md∂
 : 2;

103 
uöt
 
	mp
 : 1;

104 
uöt
 
	mlim_19_16
 : 4;

105 
uöt
 
	mavl
 : 1;

106 
uöt
 
	mrsv1
 : 1;

107 
uöt
 
	mdb
 : 1;

108 
uöt
 
	mg
 : 1;

109 
uöt
 
	mba£_31_24
 : 8;

113 
	#SEG_NULL
 (
£gdesc
){ 0,0,0,0,0,0,0,0,0,0,0,0,0 }

	)

116 
	#SEG
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
£gdesc
) \

117 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

118 
ty≥
, 1, 
d∂
, 1, (
uöt
Ë(
lim
) >> 28, 0, 0, 1, 1, \

119 (
uöt
Ë(
ba£
Ë>> 24 }

	)

121 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
£gdesc
) \

122 { (
lim
Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

123 
ty≥
, 1, 
d∂
, 1, (
uöt
Ë(
lim
) >> 16, 0, 0, 1, 0, \

124 (
uöt
Ë(
ba£
Ë>> 24 }

	)

126 
	#DPL_USER
 0x3

127 

	)

129 
	#STA_X
 0x8

130 
	#STA_E
 0x4

131 
	#STA_C
 0x4

132 
	#STA_W
 0x2

133 
	#STA_R
 0x2

134 
	#STA_A
 0x1

135 

	)

137 
	#STS_T16A
 0x1

138 
	#STS_LDT
 0x2

139 
	#STS_T16B
 0x3

140 
	#STS_CG16
 0x4

141 
	#STS_TG
 0x5

142 
	#STS_IG16
 0x6

143 
	#STS_TG16
 0x7

144 
	#STS_T32A
 0x9

145 
	#STS_T32B
 0xB

146 
	#STS_CG32
 0xC

147 
	#STS_IG32
 0xE

148 
	#STS_TG32
 0xF

149 

	)

151 
	sèsk°©e
 {

152 
uöt
 
	mlök
;

153 
uöt
 
	me•0
;

154 
ush‹t
 
	mss0
;

155 
ush‹t
 
	m∑ddög1
;

156 
uöt
 *
	me•1
;

157 
ush‹t
 
	mss1
;

158 
ush‹t
 
	m∑ddög2
;

159 
uöt
 *
	me•2
;

160 
ush‹t
 
	mss2
;

161 
ush‹t
 
	m∑ddög3
;

162 *
	m¸3
;

163 
uöt
 *
	meù
;

164 
uöt
 
	meÊags
;

165 
uöt
 
	móx
;

166 
uöt
 
	mecx
;

167 
uöt
 
	medx
;

168 
uöt
 
	mebx
;

169 
uöt
 *
	me•
;

170 
uöt
 *
	mebp
;

171 
uöt
 
	mesi
;

172 
uöt
 
	medi
;

173 
ush‹t
 
	mes
;

174 
ush‹t
 
	m∑ddög4
;

175 
ush‹t
 
	mcs
;

176 
ush‹t
 
	m∑ddög5
;

177 
ush‹t
 
	mss
;

178 
ush‹t
 
	m∑ddög6
;

179 
ush‹t
 
	mds
;

180 
ush‹t
 
	m∑ddög7
;

181 
ush‹t
 
	mfs
;

182 
ush‹t
 
	m∑ddög8
;

183 
ush‹t
 
	mgs
;

184 
ush‹t
 
	m∑ddög9
;

185 
ush‹t
 
	mldt
;

186 
ush‹t
 
	m∑ddög10
;

187 
ush‹t
 
	mt
;

188 
ush‹t
 
	miomb
;

192 
	sg©edesc
 {

193 
uöt
 
	moff_15_0
 : 16;

194 
uöt
 
	mcs
 : 16;

195 
uöt
 
	m¨gs
 : 5;

196 
uöt
 
	mrsv1
 : 3;

197 
uöt
 
	mty≥
 : 4;

198 
uöt
 
	ms
 : 1;

199 
uöt
 
	md∂
 : 2;

200 
uöt
 
	mp
 : 1;

201 
uöt
 
	moff_31_16
 : 16;

212 
	#SETGATE
(
g©e
, 
i°øp
, 
£l
, 
off
, 
d
) \

214 (
g©e
).
off_15_0
 = (
uöt
Ë(
off
) & 0xffff; \

215 (
g©e
).
cs
 = (
£l
); \

216 (
g©e
).
¨gs
 = 0; \

217 (
g©e
).
rsv1
 = 0; \

218 (
g©e
).
ty≥
 = (
i°øp
Ë? 
STS_TG32
 : 
STS_IG32
; \

219 (
g©e
).
s
 = 0; \

220 (
g©e
).
d∂
 = (
d
); \

221 (
g©e
).
p
 = 1; \

222 (
g©e
).
off_31_16
 = (
uöt
Ë(
off
) >> 16; \

223 }

	)

	@mp.c

5 
	~"ty≥s.h
"

6 
	~"defs.h
"

7 
	~"∑øm.h
"

8 
	~"mp.h
"

9 
	~"x86.h
"

10 
	~"mmu.h
"

11 
	~"¥oc.h
"

13 
˝u
 
	g˝us
[
NCPU
];

14 
˝u
 *
	gb˝u
;

15 
	gismp
;

16 
	gn˝u
;

17 
uch¨
 
	giﬂpic_id
;

20 
	$mp_b˝u
()

22  
b˝u
-
˝us
;

23 
	}
}

25 
uch¨


26 
	$sum
(
uch¨
 *
addr
, 
Àn
)

28 
i
, 
sum
;

30 
sum
 = 0;

31 
i
=0; i<
Àn
; i++)

32 
sum
 +
addr
[
i
];

33  
sum
;

34 
	}
}

37 
mp
*

38 
	$mp_£¨ch1
(
uch¨
 *
addr
, 
Àn
)

40 
uch¨
 *
e
, *
p
;

42 
e
 = 
addr
+
Àn
;

43 
p
 = 
addr
;Ö < 
e
;Ö +(
mp
))

44 if(
	`memcmp
(
p
, "_MP_", 4Ë=0 && 
	`sum
’, (
mp
)) == 0)

45  (
mp
*)
p
;

47 
	}
}

54 
mp
*

55 
	$mp_£¨ch
()

57 
uch¨
 *
bda
;

58 
uöt
 
p
;

59 
mp
 *mp;

61 
bda
 = (
uch¨
*)0x400;

62 if((
p
 = ((
bda
[0x0F]<<8)|bda[0x0E]) << 4)){

63 if((
mp
 = 
	`mp_£¨ch1
((
uch¨
*)
p
, 1024)))

64  
mp
;

66 
p
 = ((
bda
[0x14]<<8)|bda[0x13])*1024;

67 if((
mp
 = 
	`mp_£¨ch1
((
uch¨
*)
p
-1024, 1024)))

68  
mp
;

70  
	`mp_£¨ch1
((
uch¨
*)0xF0000, 0x10000);

71 
	}
}

78 
mpc⁄f
*

79 
	$mp_c⁄fig
(
mp
 **
pmp
)

81 
mpc⁄f
 *
c⁄f
;

82 
mp
 *mp;

84 if((
mp
 = 
	`mp_£¨ch
()Ë=0 || mp->
phyßddr
 == 0)

86 
c⁄f
 = (
mpc⁄f
*)
mp
->
phyßddr
;

87 if(
	`memcmp
(
c⁄f
, "PCMP", 4) != 0)

89 if(
c⁄f
->
vîsi⁄
 != 1 && conf->version != 4)

91 if(
	`sum
((
uch¨
*)
c⁄f
, c⁄f->
Àngth
) != 0)

93 *
pmp
 = 
mp
;

94  
c⁄f
;

95 
	}
}

98 
	$mp_öô
()

100 
uch¨
 *
p
, *
e
;

101 
mp
 *mp;

102 
mpc⁄f
 *
c⁄f
;

103 
mµroc
 *
¥oc
;

104 
mpiﬂpic
 *
iﬂpic
;

106 
b˝u
 = &
˝us
[
n˝u
];

107 if((
c⁄f
 = 
	`mp_c⁄fig
(&
mp
)) == 0)

110 
ismp
 = 1;

111 
œpic
 = (
uöt
*)
c⁄f
->
œpiˇddr
;

113 
p
=(
uch¨
*)(
c⁄f
+1), 
e
=(uch¨*)c⁄f+c⁄f->
Àngth
;Ö<e; ){

114 *
p
){

115 
MPPROC
:

116 
¥oc
 = (
mµroc
*)
p
;

117 
˝us
[
n˝u
].
≠icid
 = 
¥oc
->apicid;

118 if(
¥oc
->
Êags
 & 
MPBOOT
)

119 
b˝u
 = &
˝us
[
n˝u
];

120 
n˝u
++;

121 
p
 +(
mµroc
);

123 
MPIOAPIC
:

124 
iﬂpic
 = (
mpiﬂpic
*)
p
;

125 
iﬂpic_id
 = 
iﬂpic
->
≠i˙o
;

126 
p
 +(
mpiﬂpic
);

128 
MPBUS
:

129 
MPIOINTR
:

130 
MPLINTR
:

131 
p
 += 8;

134 
	`˝rötf
("mp_öô: unknow¿c⁄figÅy≥ %x\n", *
p
);

135 
	`∑nic
("mp_init");

139 if(
mp
->
im¸p
){

142 
	`outb
(0x22, 0x70);

143 
	`outb
(0x23, 
	`öb
(0x23) | 1);

145 
	}
}

	@mp.h

3 
	smp
 {

4 
uch¨
 
	msig«tuª
[4];

5 *
	mphyßddr
;

6 
uch¨
 
	mÀngth
;

7 
uch¨
 
	m•e¸ev
;

8 
uch¨
 
	mchecksum
;

9 
uch¨
 
	mty≥
;

10 
uch¨
 
	mim¸p
;

11 
uch¨
 
	mª£rved
[3];

14 
	smpc⁄f
 {

15 
uch¨
 
	msig«tuª
[4];

16 
ush‹t
 
	mÀngth
;

17 
uch¨
 
	mvîsi⁄
;

18 
uch¨
 
	mchecksum
;

19 
uch¨
 
	m¥odu˘
[20];

20 
uöt
 *
	m€mèbÀ
;

21 
ush‹t
 
	m€mÀngth
;

22 
ush‹t
 
	míåy
;

23 
uöt
 *
	mœpiˇddr
;

24 
ush‹t
 
	mxÀngth
;

25 
uch¨
 
	mxchecksum
;

26 
uch¨
 
	mª£rved
;

29 
	smµroc
 {

30 
uch¨
 
	mty≥
;

31 
uch¨
 
	m≠icid
;

32 
uch¨
 
	mvîsi⁄
;

33 
uch¨
 
	mÊags
;

34 
	#MPBOOT
 0x02

35 
uch¨
 
sig«tuª
[4];

36 
uöt
 
„©uª
;

37 
uch¨
 
ª£rved
[8];

	)

40 
	smpiﬂpic
 {

41 
uch¨
 
	mty≥
;

42 
uch¨
 
	m≠i˙o
;

43 
uch¨
 
	mvîsi⁄
;

44 
uch¨
 
	mÊags
;

45 
uöt
 *
	maddr
;

49 
	#MPPROC
 0x00

50 
	#MPBUS
 0x01

51 
	#MPIOAPIC
 0x02

52 
	#MPIOINTR
 0x03

53 
	#MPLINTR
 0x04

54 

	)

	@param.h

1 #i‚de‡
_PARAM_H_


2 
	#_PARAM_H_


	)

3 
	#NPROC
 64

4 
	#PAGE
 4096

5 
	#KSTACKSIZE
 8*
PAGE


6 
	#NCPU
 8

7 
	#NOFILE
 16

8 
	#NFILE
 100

9 
	#NBUF
 10

10 
	#NINODE
 50

11 
	#NDEV
 10

12 
	#ROOTDEV
 1

	@picirq.c

3 
	~"ty≥s.h
"

4 
	~"x86.h
"

5 
	~"å≠s.h
"

8 
	#IO_PIC1
 0x20

9 
	#IO_PIC2
 0xA0

10 

	)

11 
	#IRQ_SLAVE
 2

12 

	)

15 
ush‹t
 
	gúqmask
 = 0xFFFF & ~(1<<
IRQ_SLAVE
);

18 
	$pic_£tmask
(
ush‹t
 
mask
)

20 
úqmask
 = 
mask
;

21 
	`outb
(
IO_PIC1
+1, 
mask
);

22 
	`outb
(
IO_PIC2
+1, 
mask
 >> 8);

23 
	}
}

26 
	$pic_íabÀ
(
úq
)

28 
	`pic_£tmask
(
úqmask
 & ~(1<<
úq
));

29 
	}
}

33 
	$pic_öô
()

36 
	`outb
(
IO_PIC1
+1, 0xFF);

37 
	`outb
(
IO_PIC2
+1, 0xFF);

45 
	`outb
(
IO_PIC1
, 0x11);

48 
	`outb
(
IO_PIC1
+1, 
IRQ_OFFSET
);

52 
	`outb
(
IO_PIC1
+1, 1<<
IRQ_SLAVE
);

62 
	`outb
(
IO_PIC1
+1, 0x3);

65 
	`outb
(
IO_PIC2
, 0x11);

66 
	`outb
(
IO_PIC2
+1, 
IRQ_OFFSET
 + 8);

67 
	`outb
(
IO_PIC2
+1, 
IRQ_SLAVE
);

70 
	`outb
(
IO_PIC2
+1, 0x3);

76 
	`outb
(
IO_PIC1
, 0x68);

77 
	`outb
(
IO_PIC1
, 0x0a);

79 
	`outb
(
IO_PIC2
, 0x68);

80 
	`outb
(
IO_PIC2
, 0x0a);

82 if(
úqmask
 != 0xFFFF)

83 
	`pic_£tmask
(
úqmask
);

84 
	}
}

	@pipe.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"¥oc.h
"

6 
	~"fûe.h
"

7 
	~"•ölock.h
"

9 
	#PIPESIZE
 512

	)

11 
	spùe
 {

12 
	mªad›í
;

13 
	mwrôe›í
;

14 
uöt
 
	mwrôï
;

15 
uöt
 
	mªadp
;

16 
•ölock
 
	mlock
;

17 
	md©a
[
PIPESIZE
];

21 
	$pùóŒoc
(
fûe
 **
f0
, fûê**
f1
)

23 
pùe
 *
p
;

25 
p
 = 0;

26 *
f0
 = *
f1
 = 0;

27 if((*
f0
 = 
	`fûóŒoc
()Ë=0 || (*
f1
 = filealloc()) == 0)

28 
bad
;

29 if((
p
 = (
pùe
*)
	`kÆloc
(
PAGE
)) == 0)

30 
bad
;

31 
p
->
ªad›í
 = 1;

32 
p
->
wrôe›í
 = 1;

33 
p
->
wrôï
 = 0;

34 
p
->
ªadp
 = 0;

35 
	`öôlock
(&
p
->
lock
, "pipe");

36 (*
f0
)->
ty≥
 = 
FD_PIPE
;

37 (*
f0
)->
ªadabÀ
 = 1;

38 (*
f0
)->
wrôabÀ
 = 0;

39 (*
f0
)->
pùe
 = 
p
;

40 (*
f1
)->
ty≥
 = 
FD_PIPE
;

41 (*
f1
)->
ªadabÀ
 = 0;

42 (*
f1
)->
wrôabÀ
 = 1;

43 (*
f1
)->
pùe
 = 
p
;

46 
bad
:

47 if(
p
)

48 
	`k‰ì
((*)
p
, 
PAGE
);

49 if(*
f0
){

50 (*
f0
)->
ty≥
 = 
FD_NONE
;

51 
	`fûe˛o£
(*
f0
);

53 if(*
f1
){

54 (*
f1
)->
ty≥
 = 
FD_NONE
;

55 
	`fûe˛o£
(*
f1
);

58 
	}
}

61 
	$pùe˛o£
(
pùe
 *
p
, 
wrôabÀ
)

63 
	`acquúe
(&
p
->
lock
);

64 if(
wrôabÀ
){

65 
p
->
wrôe›í
 = 0;

66 
	`wakeup
(&
p
->
ªadp
);

68 
p
->
ªad›í
 = 0;

69 
	`wakeup
(&
p
->
wrôï
);

71 
	`ªÀa£
(&
p
->
lock
);

73 if(
p
->
ªad›í
 =0 &&Ö->
wrôe›í
 == 0)

74 
	`k‰ì
((*)
p
, 
PAGE
);

75 
	}
}

78 
	$pùewrôe
(
pùe
 *
p
, *
addr
, 
n
)

80 
i
;

82 
	`acquúe
(&
p
->
lock
);

83 
i
 = 0; i < 
n
; i++){

84 
p
->
wrôï
 =p->
ªadp
 + 
PIPESIZE
) {

85 if(
p
->
ªad›í
 =0 || 
˝
->
kûÀd
){

86 
	`ªÀa£
(&
p
->
lock
);

89 
	`wakeup
(&
p
->
ªadp
);

90 
	`¶ìp
(&
p
->
wrôï
, &p->
lock
);

92 
p
->
d©a
[p->
wrôï
++ % 
PIPESIZE
] = 
addr
[
i
];

94 
	`wakeup
(&
p
->
ªadp
);

95 
	`ªÀa£
(&
p
->
lock
);

96  
i
;

97 
	}
}

100 
	$pùîód
(
pùe
 *
p
, *
addr
, 
n
)

102 
i
;

104 
	`acquúe
(&
p
->
lock
);

105 
p
->
ªadp
 =p->
wrôï
 &&Ö->
wrôe›í
){

106 if(
˝
->
kûÀd
){

107 
	`ªÀa£
(&
p
->
lock
);

110 
	`¶ìp
(&
p
->
ªadp
, &p->
lock
);

112 
i
 = 0; i < 
n
; i++){

113 if(
p
->
ªadp
 =p->
wrôï
)

115 
addr
[
i
] = 
p
->
d©a
[p->
ªadp
++ % 
PIPESIZE
];

117 
	`wakeup
(&
p
->
wrôï
);

118 
	`ªÀa£
(&
p
->
lock
);

119  
i
;

120 
	}
}

	@pmap.c

1 
	~"pm≠.h
"

2 
	~"memœyout.h
"

3 
	~"∑øm.h
"

4 
	~"x86.h
"

5 
	~"defs.h
"

6 
	~"as£π.h
"

7 
	~"îr‹no.h
"

8 
	~"•ölock.h
"

9 
	~"buddy.h
"

11 
•ölock_t
 
	gphy_mem_lock
;

12 
Page
 * 
	g∑ges
;

13 
∑ddr_t
 
	gboŸ_¸3
;

14 
pde_t
 * 
	gboŸ_pgdú
;

15 
Page
 * 
	g∑ges
;

18 
check_boŸ_pgdú
();

21 
	$boŸ_m≠_£gmít
(
pde_t
 * 
pgdú
, 
∑ddr_t
 
∑
, 
vaddr_t
 
œ
, 
uöt
 
size
, uöà
≥rm
)

23 
ªt
 = 0;

24 
uöt
 
i
 = 0;

25 
	`as£π
(!(
size
 & 0xfff), "size isÇotá multiple of PAGE\n");

26 ; 
i
 < 
size
; i +
PAGE
) {

27 i‡((
ªt
 = 
	`ö£π_∑ge
(
pgdú
, 
∑
 + 
i
, 
œ
 + i, 
≥rm
, 1)) < 0) {

28 
	`˝rötf
("îr‹ %d\n",
ªt
);

29 
	`∑nic
("errorát boot map segment\n");

32 
	}
}

42 
	$m≠_£gmít
(
pde_t
 * 
pgdú
, 
∑ddr_t
 
∑
, 
vaddr_t
 
œ
, 
uöt
 
size
, uöà
≥rm
)

44 
ªt
 = 0;

45 
uöt
 
i
 = 0;

46 i‡(
size
 & 0xfff)

47  -
E_NOT_AT_PGBOUND
;

48 ; 
i
 < 
size
; i +
PAGE
) {

49 i‡((
ªt
 = 
	`ö£π_∑ge
(
pgdú
, 
∑
 + 
i
, 
œ
 + i, 
≥rm
, 0)) < 0) {

50  
ªt
;

54 
	}
}

57 
	$do_unm≠
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
, 
uöt
 
size
)

59 
uöt
 
i
,
ªt
;

60 i‡(
va
 & 0xff‡|| 
size
 & 0xfff)

61 
	`∑nic
("do_unmap invalid va or size");

62 
i
 = 0; i < 
size
; i +
PAGE
) {

63 i‡((
ªt
 = 
	`ªmove_∑ge
(
pgdú
, 
va
)) < 0)

64  
ªt
;

65 
va
 +
PAGE
;

68 
	}
}

72 
	$Æloc_∑ge
()

74  
	`kÆloc
(
PAGE
);

75 
	}
}

87 
	$ö£π_∑ge
(
pde_t
 * 
pgdú
, 
∑ddr_t
 
∑
, 
vaddr_t
 
va
, 
uöt
 
≥rm
, uöà
km≠
)

89 i‡((
∑
 & 0xfffË|| (
va
 & 0xfff))

90  -
E_NOT_AT_PGBOUND
;

92 
	`acquúe
(&
phy_mem_lock
);

93 
±e_t
 * 
±e
 = 
	`gë_±e
(
pgdú
, 
va
, 1);

95 i‡(
±e
 =
NULL
) {

96 
	`ªÀa£
(&
phy_mem_lock
);

97  -
E_NO_MEM
;

100 i‡(*
±e
 & 
PTE_P
) {

101 
	`ªÀa£
(&
phy_mem_lock
);

102  -
E_MAP_EXIST
;

104 *
±e
 = 
	`PTE_ADDR
(
∑
Ë| 
PTE_P
 | 
≥rm
;

106 i‡(!
km≠
) {

107 
	`IncPageCou¡
(
	`∑ge_‰ame
(
∑
));

108 
	`dbmsg
("ö¯cou¡ %x\n",(
	`∑ge_‰ame
(
∑
))->
m≠cou¡
);

111 
	`ªÀa£
(&
phy_mem_lock
);

114 
	}
}

122 
	$ªmove_∑ge
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
)

124 
±e_t
 * 
±e
;

125 
Page
 * 
p
;

126 i‡(
va
 & 0xfff)

127  -
E_NOT_AT_PGBOUND
;

128 
	`acquúe
(&
phy_mem_lock
);

129 
±e
 = 
	`gë_±e
(
pgdú
, 
va
, 0);

130 i‡(
±e
 =
NULL
)

131  -
E_ALREADY_FREE
;

133 i‡(*
±e
 & 
PTE_P
) {

134 
p
 = 
	`∑ge_‰ame
(
	`PTE_ADDR
(*
±e
));

135 
	`DecPageCou¡
(
p
);

136 i‡(!
	`PageRe£rved
(
p
Ë&& !
	`IsPageM≠≥d
(p)) {

137 
	`dbmsg
("ªmovög m≠pög %xáà∑ge†%x\n", 
va
, 
p
 - 
∑ges
);

138 
	`__‰ì_∑ges
(
p
, 1);

140 *
±e
 = 0;

143 
	`ªÀa£
(&
phy_mem_lock
);

144  -
E_ALREADY_FREE
;

147 
	`ªÀa£
(&
phy_mem_lock
);

149 
	}
}

152 
	$íabÀ_∑gög
()

154 
uöt
 
¸0
;

156 
	`l¸3
(
boŸ_¸3
);

159 
¸0
 = 
	`r¸0
();

160 
¸0
 |
CR0_PE
 | 
CR0_PG
 | 
CR0_AM
 | 
CR0_WP
 | 
CR0_NE
 | 
CR0_TS
 | 
CR0_EM
 | 
CR0_MP
;

161 
¸0
 &~(
CR0_TS
 | 
CR0_EM
);

162 
	`l¸0
(
¸0
);

163 
	}
}

170 
	$i386_vm_öô
()

172 
pde_t
 * 
pgdú
;

173 
i
;

175 
	`öôlock
(&
phy_mem_lock
, "phy_mem");

179 
pgdú
 = (
pde_t
 *)
	`Æloc_∑ge
();

180 
	`mem£t
(
pgdú
, 0, 
PAGE
);

181 
boŸ_pgdú
 = 
pgdú
;

182 
boŸ_¸3
 = (
uöt
)
pgdú
;

187 
pgdú
[
	`PDX
(
VPT
)] = 
boŸ_¸3
 | 
PTE_W
 | 
PTE_P
;

188 
pgdú
[
	`PDX
(
UVPT
)] = 
boŸ_¸3
 | 
PTE_U
 | 
PTE_P
;

191 
	`boŸ_m≠_£gmít
(
pgdú
, 0, 0, 0x100000, 
PTE_U
 | 
PTE_W
);

192 
i
 = 0; i < 
e820_memm≠
->
ƒ_m≠
; i ++) {

193 
uöt
 
addr
 = (uöt)
e820_memm≠
->
m≠
[
i
].addr;

194 
uöt
 
size
 = (uöt)
e820_memm≠
->
m≠
[
i
].size;

195 i‡(
addr
 >= 0x100000) {

196 
	`˝rötf
("m≠ : %x,%x wôh sizê%x\n",(
addr
 >> 16),◊dd∏& 0xffff),
size
);

197 
	`boŸ_m≠_£gmít
(
pgdú
, 
addr
,áddr, 
size
, 
PTE_U
 | 
PTE_W
);

201 
	`boŸ_m≠_£gmít
(
pgdú
, 0x„c00000, 0x„c00000, 0x1000000, 
PTE_U
 | 
PTE_W
);

204 
	`check_boŸ_pgdú
();

206 
	`íabÀ_∑gög
();

207 
	`˝rötf
("PagingÉnabled!\n");

208 
	}
}

222 
±e_t
 *

223 
	$gë_±e
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
, 
¸óã
)

225 
pde_t
 * 
pde
 = &
pgdú
[
	`PDX
(
va
)];

226 
±e_t
 * 
±e
 = 
NULL
;

227 i‡(!(*
pde
 & 
PTE_P
)) {

228 i‡(
¸óã
) {

231 
±e
 = (
±e_t
 *)
	`Æloc_∑ge
();

232 i‡(
±e
 =
NULL
)  NULL;

233 
	`as£π
(!((
uöt
)
±e
 & 0xfff), "assert :Çot inÖage boundary\n");

236 
	`mem£t
(
±e
,0,
PAGE
);

238 *
pde
 = (
uöt
)
±e
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
;

243  
NULL
;

247 
±e
 = &(((
±e_t
 *)
	`PTE_ADDR
(*
pde
))[
	`PTX
(
va
)]);

248  
±e
;

249 
	}
}

251 
∑ddr_t


252 
	$check_va2∑
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
)

254 i‡(!(
pgdú
[
	`PDX
(
va
)] & 
PTE_P
))

256 
±e_t
 * 
±e
 = (±e_à*)
	`PTE_ADDR
(
pgdú
[
	`PDX
(
va
)]);

257 i‡(!(
±e
[
	`PTX
(
va
)] & 
PTE_P
))

259  
	`PTE_ADDR
(
±e
[
	`PTX
(
va
)]Ë| 
	`PGOFF
(va);

260 
	}
}

263 
	$check_boŸ_pgdú
()

265 
uöt
 
i
 = 0x100000, 
ªt
 = 0;

266 ;
i
 < 0x200000; i +
PAGE
 / 2) {

267 
ªt
 = 
	`check_va2∑
(
boŸ_pgdú
, 
i
);

268 i‡(
ªt
 == -1) {

269 
	`˝rötf
("pdênŸÉxi° %x\n",
i
);

272 i‡(
ªt
 == -2) {

273 
	`˝rötf
("±ênŸÉxi° %x\n",
i
);

276 i‡(
ªt
 !
i
)

277 
	`˝rötf
("addªs†å™¶©êîr‹ %x\n",
i
);

279 
	}
}

	@pmap.h

1 #i‚de‡
_PMAP_H_


2 
	#_PMAP_H_


	)

3 
	~"queue.h
"

4 
	~"ty≥s.h
"

5 
	~"mmu.h
"

6 
	~"©omic.h
"

7 
	#NULL
 ((*Ë0)

	)

10 
	#E820MAX
 32

11 
	#E820_ARM
 1

12 
	#E820_ARR
 2

13 

	)

15 
	#PG_ª£rved
 1

16 
	#PG_¥›îty
 2

17 
	#PG_locked
 4

18 
	#PG_dúty
 8

19 

	)

20 
	se820m≠
 {

21 
	mƒ_m≠
;

23 
	maddr
;

24 
	msize
;

25 
	mty≥
;

26 } 
	mm≠
[
E820MAX
];

30 
	$LIST_HEAD
(
	tPage_li°
, 
	tPage
Ë
	t∑ge_li°_hód_t
;

31 
	$LIST_ENTRY
(
	tPage
Ë
	t∑ge_li°_íåy_t
;

33 
	sPage
 {

34 
uöt32_t
 
Êags
;

35 
uöt32_t
 
m≠cou¡
;

36 
uöt32_t
 
¥›îty
;

37 
uöt32_t
 
ödex
;

38 
∑ge_li°_íåy_t
 
Ãu
;

41 
Page
 
	t∑ge_t
;

43 
pde_t
 * 
boŸ_pgdú
;

44 
Page
 * 
∑ges
;

45 
e820m≠
 * 
e820_memm≠
;

48 
	#∑ge_‰ame
(
addr
Ë(&
∑ges
[
	`PPN
◊ddr)])

	)

49 
	#∑ge_addr
(
p
Ë((
∑ddr_t
)’ - 
∑ges
Ë<< 
PTXSHIFT
)

	)

51 
±e_t
 *
	`gë_±e
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
, 
¸óã
);

52 
	`ö£π_∑ge
(
pde_t
 * 
pgdú
, 
∑ddr_t
 
∑
, 
vaddr_t
 
va
, 
uöt
 
≥rm
, uöà
km≠
);

53 
	`i386_vm_öô
();

54 
	`íabÀ_∑gög
();

55 * 
	`Æloc_∑ge
();

56 
	`m≠_£gmít
(
pde_t
 * 
pgdú
, 
∑ddr_t
 
∑
, 
vaddr_t
 
œ
, 
uöt
 
size
, uöà
≥rm
);

57 
	`ªmove_∑ge
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
);

58 
	`do_unm≠
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
, 
uöt
 
size
);

59 
∑ddr_t
 
	`check_va2∑
(
pde_t
 * 
pgdú
, 
vaddr_t
 
va
);

61 
	#SET_PAGE_RESERVED
(
∑ge
Ë(’age)->
Êags
 |
PG_ª£rved
)

	)

62 
	#CLEAR_PAGE_RESERVED
(
∑ge
Ë(’age)->
Êags
 &(~
PG_ª£rved
))

	)

63 
	#PageRe£rved
(
∑ge
Ë(’age)->
Êags
 & 
PG_ª£rved
)

	)

64 
	#SëPagePr›îty
(
∑ge
Ë(’age)->
Êags
 |
PG_¥›îty
)

	)

65 
	#CÀ¨PagePr›îty
(
∑ge
Ë(’age)->
Êags
 &(~
PG_¥›îty
))

	)

66 
	#PagePr›îty
(
∑ge
Ë(’age)->
Êags
 & 
PG_¥›îty
)

	)

67 
	#IncPageCou¡
(
∑ge
Ë(’age)->
m≠cou¡
 ++)

	)

68 
	#DecPageCou¡
(
∑ge
Ë(’age)->
m≠cou¡
 --)

	)

69 
	#IsPageM≠≥d
(
∑ge
Ë(’age)->
m≠cou¡
)

	)

	@printf.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$putc
(
fd
, 
c
)

8 
	`wrôe
(
fd
, &
c
, 1);

9 
	}
}

12 
	$¥ötöt
(
fd
, 
xx
, 
ba£
, 
sgn
)

14 
digôs
[] = "0123456789ABCDEF";

15 
buf
[16];

16 
i
, 
√g
;

17 
uöt
 
x
;

19 
√g
 = 0;

20 if(
sgn
 && 
xx
 < 0){

21 
√g
 = 1;

22 
x
 = -
xx
;

24 
x
 = 
xx
;

27 
i
 = 0;

29 
buf
[
i
++] = 
digôs
[
x
 % 
ba£
];

30 }(
x
 /
ba£
) != 0);

31 if(
√g
)

32 
buf
[
i
++] = '-';

34 --
i
 >= 0)

35 
	`putc
(
fd
, 
buf
[
i
]);

36 
	}
}

40 
	$¥ötf
(
fd
, *
fmt
, ...)

42 *
s
;

43 
c
, 
i
, 
°©e
;

44 
uöt
 *
≠
;

46 
°©e
 = 0;

47 
≠
 = (
uöt
*)(*)&
fmt
 + 1;

48 
i
 = 0; 
fmt
[i]; i++){

49 
c
 = 
fmt
[
i
] & 0xff;

50 if(
°©e
 == 0){

51 if(
c
 == '%'){

52 
°©e
 = '%';

54 
	`putc
(
fd
, 
c
);

56 } if(
°©e
 == '%'){

57 if(
c
 == 'd'){

58 
	`¥ötöt
(
fd
, *
≠
, 10, 1);

59 
≠
++;

60 } if(
c
 == 'x' || c == 'p'){

61 
	`¥ötöt
(
fd
, *
≠
, 16, 0);

62 
≠
++;

63 } if(
c
 == 's'){

64 
s
 = (*)*
≠
;

65 
≠
++;

66 if(
s
 == 0)

67 
s
 = "(null)";

68 *
s
 != 0){

69 
	`putc
(
fd
, *
s
);

70 
s
++;

72 } if(
c
 == 'c'){

73 
	`putc
(
fd
, *
≠
);

74 
≠
++;

75 } if(
c
 == '%'){

76 
	`putc
(
fd
, 
c
);

79 
	`putc
(
fd
, '%');

80 
	`putc
(
fd
, 
c
);

82 
°©e
 = 0;

85 
	}
}

	@proc.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"x86.h
"

6 
	~"¥oc.h
"

7 
	~"•ölock.h
"

8 
	~"sched.h
"

9 
	~"sched_fifo.h
"

10 
	~"sched_RR.h
"

11 
	~"sched_MLFQ.h
"

12 
	~"rq.h
"

13 
	~"pm≠.h
"

14 
	~"memœyout.h
"

19 * 
	grq_lock_«me
 = "rqlock";

21 
	#SCHED_SIMPLE


	)

26 
•ölock
 
	g¥oc_èbÀ_lock
;

28 
¥oc
 
	g¥oc
[
NPROC
];

29 
¥oc
 *
	göô¥oc
;

32 
¥oc
* 
	gidÀ¥oc
[
NCPU
];

34 
	g√xçid
 = 1;

35 
f‹kªt
();

36 
f‹kªt1
(
å≠‰ame
*);

38 
öô_rq
(
rq
 *rq);

39 
íqueue_¥oc
 (
rq
 *rq, 
¥oc
 *
p
);

40 
dequeue_¥oc
 (
rq
 *rq, 
¥oc
 *
p
);

41 
yõld_¥oc
 (
rq
 *rq);

42 
¥oc
* 
pick_√xt_¥oc
 (
rq
 *rq);

43 
¥oc_tick
 (
rq
*Ñq, 
¥oc
* 
p
);

46 
	$pöô
()

48 
i
;

49 
	`öôlock
(&
¥oc_èbÀ_lock
, "proc_table");

50 
i
 = 0; i < 
NCPU
; i++)

52 
rq
 *Ñq = &
rqs
[
i
];

53 #ifde‡
SCHED_SIMPLE


54 
rq
->
sched_˛ass
 = (sched_˛as†*)&
sim∂e_sched_˛ass
;

55 
rq
->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sim∂e_sched_˛ass
;

57 #ifde‡
SCHED_FIFO


58 
rq
->
sched_˛ass
 = (sched_˛as†*)&
sched_˛ass_fifo
;

59 
rq
->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sched_˛ass_fifo
;

61 #ifde‡
SCHED_RR


62 
rq
->
sched_˛ass
 = (sched_˛as†*)&
sched_˛ass_RR
;

63 
rq
->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sched_˛ass_RR
;

64 
rq
->
max_¶i˚s
 = 100;

66 #ifde‡
SCHED_MLFQ


67 
rq
->
√xt
 = &
rqs
[
i
+
NCPU
];

68 
rq
->
√xt
->√xà&
rqs
[
i
+2*
NCPU
];

69 
rq
->
sched_˛ass
 = (sched_˛as†*)&
sched_˛ass_MLFQ
;

70 
rq
->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sched_˛ass_RR
;

71 
rq
->
max_¶i˚s
 = 20;

72 
rq
->
√xt
->
sched_˛ass
 = (sched_˛as†*)&
sched_˛ass_MLFQ
;

73 
rq
->
√xt
->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sched_˛ass_RR
;

74 
rq
->
√xt
->
max_¶i˚s
 = 500;

75 
rq
->
√xt
->√xt->
sched_˛ass
 = (sched_˛as†*)&
sched_˛ass_MLFQ
;

76 
rq
->
√xt
->√xt->
sub_sched_˛ass
 = (
sched_˛ass
 *)&
sched_˛ass_fifo
;

79 
	`öô_rq
(
rq
);

80 #ifde‡
SCHED_MLFQ


81 
	`öô_rq
(
rq
->
√xt
);

82 
	`öô_rq
(
rq
->
√xt
->next);

85 
i
 = 0; i < 
NCPU
; i++)

86 
˝us
[
i
].
rq
 = &(
rqs
[i]);

87 
	}
}

92 
¥oc
*

93 
	$Ælo˝roc
()

95 
i
;

96 
¥oc
 *
p
;

98 
	`acquúe
(&
¥oc_èbÀ_lock
);

99 
i
 = 0; i < 
NPROC
; i++){

100 
p
 = &
¥oc
[
i
];

101 if(
p
->
°©e
 =
UNUSED
){

102 
p
->
°©e
 = 
EMBRYO
;

103 
p
->
pid
 = 
√xçid
++;

104 
p
->
rq
 = 
NULL
;

105 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

106  
p
;

109 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

111 
	}
}

116 
	$grow¥oc
(
n
)

118 *
√wmem
;

128 
√wmem
 = 
	`kÆloc
(
n
);

129 i‡(
√wmem
 == 0)

131 
	`mem£t
(
√wmem
, 0, 
n
);

132 
	`m≠_£gmít
(
˝
->
vm
.
pgdú
, (
∑ddr_t
)
√wmem
, 
KERNTOP
 + cp->
sz
, 
n
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

133 
˝
->
sz
 +
n
;

134 
	`£tup£gs
(
˝
);

135  
˝
->
sz
 - 
n
;

136 
	}
}

141 
	$£tup£gs
(
¥oc
 *
p
)

143 
˝u
 *
c
;

145 
	`push˛i
();

146 
c
 = &
˝us
[
	`˝u
()];

147 
c
->
ts
.
ss0
 = 
SEG_KDATA
 << 3;

148 if(
p
)

149 
c
->
ts
.
e•0
 = (
uöt
)(
p
->
k°ack
 + 
KSTACKSIZE
);

151 
c
->
ts
.
e•0
 = 0xffffffff;

153 
c
->
gdt
[0] = 
SEG_NULL
;

154 
c
->
gdt
[
SEG_KCODE
] = 
	`SEG
(
STA_X
|
STA_R
, 0, 0x100000 + 64*1024-1, 0);

155 
c
->
gdt
[
SEG_KDATA
] = 
	`SEG
(
STA_W
, 0, 0xffffffff, 0);

156 
c
->
gdt
[
SEG_TSS
] = 
	`SEG16
(
STS_T32A
, (
uöt
)&c->
ts
, (c->ts)-1, 0);

157 
c
->
gdt
[
SEG_TSS
].
s
 = 0;

158 if(
p
){

159 
c
->
gdt
[
SEG_UCODE
] = 
	`SEG
(
STA_X
|
STA_R
, (
uöt
)
KERNTOP
, 
p
->
sz
-1, 
DPL_USER
);

160 
c
->
gdt
[
SEG_UDATA
] = 
	`SEG
(
STA_W
, (
uöt
)
KERNTOP
, 
p
->
sz
-1, 
DPL_USER
);

161 
c
->
¸3
 = (
∑ddr_t
)(
p
->
vm
.
pgdú
);

162 
	`dbmsg
("¥o˚s†%†lﬂd cr3 %x\n",
p
->
«me
, 
c
->
¸3
);

165 
c
->
gdt
[
SEG_UCODE
] = 
SEG_NULL
;

166 
c
->
gdt
[
SEG_UDATA
] = 
SEG_NULL
;

167 
c
->
¸3
 = (
∑ddr_t
)(
boŸ_pgdú
);

168 
	`dbmsg
("NULLÖro˚s†lﬂd cr3 %x f‹ U£∏NULL\n",
c
->
¸3
);

170 
	`dbmsg
("lﬂd gdà%x\n",
c
->
gdt
);

171 
	`lgdt
(
c
->
gdt
, (c->gdt));

172 
	`dbmsg
("loadÅr \n");

173 
	`…r
(
SEG_TSS
 << 3);

174 
	`dbmsg
("lﬂd cr3 %x\n",
c
->
¸3
);

175 
	`l¸3
(
c
->
¸3
);

176 
	`dbmsg
("load cr3 over\n");

177 
	`p›˛i
();

178 
	`dbmsg
("setupsegs over\n");

179 
	}
}

184 
¥oc
*

185 
	$c›y¥oc
(
¥oc
 *
p
)

187 
i
,
ªt
;

188 
¥oc
 *
≈
;

189 * 
k°ack
, * 
mem
;

190 
pde_t
 * 
pgdú
 = 0;

193 if((
≈
 = 
	`Ælo˝roc
()) == 0)

197 
pgdú
 = (
pde_t
 *)
	`Æloc_∑ge
();

198 
	`mem£t
(
pgdú
, 0 ,
PAGE
);

199 
i
 = 0; i < 
	`PDX
(
KERNTOP
); i++) {

200 
pgdú
[
i
] = 
boŸ_pgdú
[i];

202 
i
 = 
	`PDX
(0x„c00000); i < 
PTENTRY
; i++) {

203 
pgdú
[
i
] = 
boŸ_pgdú
[i];

205 
≈
->
vm
.
pgdú
 =Ögdir;

208 i‡((
k°ack
 = 
	`kÆloc
(
KSTACKSIZE
)) == 0) {

209 
≈
->
°©e
 = 
UNUSED
;

210 
	`k‰ì
((*)
pgdú
, 
PAGE
);

214 
≈
->
k°ack
 = kstack;

215 
≈
->
k
 = 
k°ack
;

220 
≈
->
tf
 = (
å≠‰ame
*)(
k°ack
 + 
KSTACKSIZE
) - 1;

222 if(
p
){

223 
≈
->
∑ª¡
 = 
p
;

224 
	`memmove
(
≈
->
tf
, 
p
->tf, (*np->tf));

226 
≈
->
sz
 = 
p
->sz;

227 if((
mem
 = 
	`kÆloc
(
≈
->
sz
)) == 0){

229 
	`do_unm≠
(
≈
->
vm
.
pgdú
, (
vaddr_t
)
p
->
k°ack
, 
KSTACKSIZE
);

230 
≈
->
k°ack
 = 0;

231 
≈
->
°©e
 = 
UNUSED
;

232 
≈
->
∑ª¡
 = 0;

235 
	`memmove
(
mem
, 
p
->mem, 
≈
->
sz
);

236 
ªt
 = 
	`m≠_£gmít
(
pgdú
, (
∑ddr_t
)
mem
, 
KERNTOP
, 
≈
->
sz
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

237 
≈
->
mem
 = (*)
KERNTOP
;

239 
i
 = 0; i < 
NOFILE
; i++)

240 if(
p
->
ofûe
[
i
])

241 
≈
->
ofûe
[
i
] = 
	`fûedup
(
p
->ofile[i]);

242 
≈
->
cwd
 = 
	`idup
(
p
->cwd);

246 
	`mem£t
(&
≈
->
c⁄ãxt
, 0, (np->context));

247 
≈
->
c⁄ãxt
.
eù
 = (
uöt
)
f‹kªt
;

248 
≈
->
c⁄ãxt
.
e•
 = (
uöt
Íp->
tf
;

251 
≈
->
tf
->
óx
 = 0;

252  
≈
;

253 
	}
}

255 
¥oc
*

256 
	$ÆlocIdÀ
(){

257 
uch¨
 
_bö¨y_idÀcode_°¨t
[], 
_bö¨y_idÀcode_size
[];

258 *
mem
;

260 
¥oc
* 
p
 = 
	`c›y¥oc
(0);

261 
p
->
sz
 = 
PAGE
;

262 
mem
 = 
	`kÆloc
(
p
->
sz
);

263 
p
->
cwd
 = 
	`«mei
("/");

264 
	`mem£t
(
p
->
tf
, 0, (*p->tf));

265 
p
->
tf
->
cs
 = (
SEG_UCODE
 << 3Ë| 
DPL_USER
;

266 
p
->
tf
->
ds
 = (
SEG_UDATA
 << 3Ë| 
DPL_USER
;

267 
p
->
tf
->
es
 =Ö->tf->
ds
;

268 
p
->
tf
->
ss
 =Ö->tf->
ds
;

269 
p
->
tf
->
eÊags
 = 
FL_IF
;

270 
p
->
tf
->
e•
 =Ö->
sz
;

273 
p
->
tf
->
e•
 -= 4;

274 *(
uöt
*)(
mem
 + 
p
->
tf
->
e•
) = 0xefefefef;

277 
p
->
tf
->
eù
 = 0;

278 
	`memmove
(
mem
, 
_bö¨y_idÀcode_°¨t
, ()
_bö¨y_idÀcode_size
);

279 
	`m≠_£gmít
(
p
->
vm
.
pgdú
, (
∑ddr_t
)
mem
, 
KERNTOP
,Ö->
sz
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

280 
p
->
mem
 = (*)
KERNTOP
;

281 
	`ß„°r˝y
(
p
->
«me
, "idle", (p->name));

282 
p
->
°©e
 = 
RUNNABLE
;

284  
p
;

285 
	}
}

289 
	$u£röô
()

291 
¥oc
 *
p
;

292 
uch¨
 
_bö¨y_öôcode_°¨t
[], 
_bö¨y_öôcode_size
[];

293 * 
mem
;

294 
i
;

296 
p
 = 
	`c›y¥oc
(0);

297 
p
->
sz
 = 
PAGE
;

298 
mem
 = 
	`kÆloc
(
p
->
sz
);

299 
p
->
cwd
 = 
	`«mei
("/");

300 
	`mem£t
(
p
->
tf
, 0, (*p->tf));

301 
p
->
tf
->
cs
 = (
SEG_UCODE
 << 3Ë| 
DPL_USER
;

302 
p
->
tf
->
ds
 = (
SEG_UDATA
 << 3Ë| 
DPL_USER
;

303 
p
->
tf
->
es
 =Ö->tf->
ds
;

304 
p
->
tf
->
ss
 =Ö->tf->
ds
;

305 
p
->
tf
->
eÊags
 = 
FL_IF
;

306 
p
->
tf
->
e•
 =Ö->
sz
;

309 
p
->
tf
->
e•
 -= 4;

310 *(
uöt
*)(
mem
 + 
p
->
tf
->
e•
) = 0xefefefef;

311 
	`dbmsg
("öô sizê%x\m", 
p
->
sz
);

314 
p
->
tf
->
eù
 = 0;

315 
	`memmove
(
mem
, 
_bö¨y_öôcode_°¨t
, ()
_bö¨y_öôcode_size
);

316 
	`m≠_£gmít
(
p
->
vm
.
pgdú
, (
∑ddr_t
)
mem
, 
KERNTOP
,Ö->
sz
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

317 
p
->
mem
 = (*)
KERNTOP
;

318 
	`ß„°r˝y
(
p
->
«me
, "initcode", (p->name));

319 
p
->
°©e
 = 
RUNNABLE
;

320 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

321 
	`íqueue_¥oc
(
˝us
[
	`˝u
()].
rq
, 
p
);

322 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

324 
öô¥oc
 = 
p
;

326 
i
=0; i<
NCPU
; i++){

327 
p
 = 
idÀ¥oc
[
i
] = 
	`ÆlocIdÀ
();

328 
	`ß„°r˝y
(
p
->
«me
, "idle", (p->name));

329 
p
->
«me
[4] = ()(
i
+'0');

330 
p
->
«me
[5] = '\0';\

331 
	`˝rötf
("idÀ¥oc[%d]: %x\n", 
i
,
p
);

333 
	}
}

336 
¥oc
*

337 
	$cuΩroc
()

339 
¥oc
 *
p
;

341 
	`push˛i
();

342 
p
 = 
˝us
[
	`˝u
()].
cuΩroc
;

343 
	`p›˛i
();

344  
p
;

345 
	}
}

355 
	$runIdÀ
()

357 
¥oc
 *
p
;

358 
˝u
 *
c
;

359 
i
;

361 
c
 = &
˝us
[
	`˝u
()];

362 
p
 = 
idÀ¥oc
[
	`˝u
()];

364 
	`°i
();

365 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

366 
c
->
cuΩroc
 = 
p
;

367 
	`£tup£gs
(
p
);

368 
p
->
°©e
 = 
RUNNING
;

369 
	`swtch
(&
c
->
c⁄ãxt
, &
p
->context);

371 
	}
}

379 
	$scheduÀ
()

381 
˝u
 *
c
;

382 
¥oc
* 
√xt
, *
¥ev
;

383 
c
 = &
˝us
[
	`˝u
()];

384 
¥ev
 = 
˝
;

388 if((
¥ev
->
°©e
 !
RUNNABLE
Ë&& (¥ev->°©ê!
RUNNING
))

390 
	`dequeue_¥oc
(
˝us
[
	`˝u
()].
rq
, 
¥ev
);

393 
√xt
 = 
	`pick_√xt_¥oc
(
˝us
[
	`˝u
()].
rq
);

397 
c
->
cuΩroc
 = 
√xt
;

399 
	`£tup£gs
(
√xt
);

401 
√xt
->
°©e
 = 
RUNNING
;

405 if(
√xt
 !
¥ev
)

407 
	`swtch
(&
¥ev
->
c⁄ãxt
, &
√xt
->context);

409 
	}
}

413 
	$yõld
()

416 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

417 
˝
->
°©e
 = 
RUNNABLE
;

419 
	`yõld_¥oc
(
˝us
[
	`˝u
()].
rq
);

420 
	`scheduÀ
();

423 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

424 
	}
}

429 
	$f‹kªt
()

432 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

435 
	`f‹kªt1
(
˝
->
tf
);

436 
	}
}

441 
	$¶ìp
(*
ch™
, 
•ölock
 *
lk
)

443 if(
˝
 == 0)

444 
	`∑nic
("sleep");

446 if(
lk
 == 0)

447 
	`∑nic
("sleep withoutÜk");

455 if(
lk
 =&
¥oc_èbÀ_lock
){

456 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

457 }if(
lk
 =&(
˝us
[
	`˝u
()].
rq
->
rq_lock
)){

458 
	`acquúe
(&
¥oc_èbÀ_lock
);

460 
	`acquúe
(&
¥oc_èbÀ_lock
);

461 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

462 
	`ªÀa£
(
lk
);

466 
˝
->
ch™
 = chan;

467 
˝
->
°©e
 = 
SLEEPING
;

468 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

469 
	`scheduÀ
();

472 
	`acquúe
(&
¥oc_èbÀ_lock
);

473 
˝
->
ch™
 = 0;

476 if(
lk
 =&
¥oc_èbÀ_lock
){

477 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

478 }if(
lk
 =&(
˝us
[
	`˝u
()].
rq
->
rq_lock
)){

479 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

481 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

482 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

483 
	`acquúe
(
lk
);

485 
	}
}

490 
	$wakeup1
(*
ch™
)

492 
¥oc
 *
p
;

494 
p
 = 
¥oc
;Ö < &¥oc[
NPROC
];Ö++)

495 if(
p
->
°©e
 =
SLEEPING
 &&Ö->
ch™
 == chan){

496 
p
->
°©e
 = 
RUNNABLE
;

497 
	`íqueue_¥oc
(
˝us
[
	`˝u
()].
rq
, 
p
);

499 
	}
}

503 
	$wakeup
(*
ch™
)

505 
	`acquúe
(&
¥oc_èbÀ_lock
);

506 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

508 
	`wakeup1
(
ch™
);

510 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

511 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

512 
	}
}

518 
	$kûl
(
pid
)

520 
¥oc
 *
p
;

522 
	`acquúe
(&
¥oc_èbÀ_lock
);

523 
p
 = 
¥oc
;Ö < &¥oc[
NPROC
];Ö++){

524 if(
p
->
pid
 ==Öid){

525 
p
->
kûÀd
 = 1;

527 if(
p
->
°©e
 =
SLEEPING
){

528 
p
->
°©e
 = 
RUNNABLE
;

529 
	`íqueue_¥oc
(
˝us
[
	`˝u
()].
rq
, 
p
);

531 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

535 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

537 
	}
}

543 
	$exô
()

545 
¥oc
 *
p
;

546 
fd
;

548 if(
˝
 =
öô¥oc
)

549 
	`∑nic
("initÉxiting");

552 
fd
 = 0; fd < 
NOFILE
; fd++){

553 if(
˝
->
ofûe
[
fd
]){

554 
	`fûe˛o£
(
˝
->
ofûe
[
fd
]);

555 
˝
->
ofûe
[
fd
] = 0;

559 
	`ùut
(
˝
->
cwd
);

560 
˝
->
cwd
 = 0;

562 
	`acquúe
(&
¥oc_èbÀ_lock
);

563 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

565 
	`wakeup1
(
˝
->
∑ª¡
);

568 
p
 = 
¥oc
;Ö < &¥oc[
NPROC
];Ö++){

569 if(
p
->
∑ª¡
 =
˝
){

570 
p
->
∑ª¡
 = 
öô¥oc
;

571 if(
p
->
°©e
 =
ZOMBIE
)

572 
	`wakeup1
(
öô¥oc
);

577 
˝
->
kûÀd
 = 0;

578 
˝
->
°©e
 = 
ZOMBIE
;

580 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

581 
	`scheduÀ
();

582 
	`∑nic
("zombieÉxit");

583 
	}
}

588 
	$waô
()

590 
¥oc
 *
p
;

591 
i
, 
havekids
, 
pid
;

593 
	`acquúe
(&
¥oc_èbÀ_lock
);

596 
havekids
 = 0;

597 
i
 = 0; i < 
NPROC
; i++){

598 
p
 = &
¥oc
[
i
];

599 if(
p
->
°©e
 =
UNUSED
)

601 if(
p
->
∑ª¡
 =
˝
){

602 if(
p
->
°©e
 =
ZOMBIE
){

605 
	`k‰ì
(
p
->
k°ack
, 
KSTACKSIZE
);

607 
pid
 = 
p
->pid;

608 
p
->
°©e
 = 
UNUSED
;

609 
p
->
pid
 = 0;

610 
p
->
∑ª¡
 = 0;

611 
p
->
«me
[0] = 0;

612 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

613  
pid
;

615 
havekids
 = 1;

620 if(!
havekids
 || 
˝
->
kûÀd
){

621 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

626 
	`¶ìp
(
˝
, &
¥oc_èbÀ_lock
);

628 
	}
}

634 
	$¥ocdump
()

636 *
°©es
[] = {

637 [
UNUSED
] "unused",

638 [
EMBRYO
] "embryo",

639 [
SLEEPING
] "sleep ",

640 [
RUNNABLE
] "runble",

641 [
RUNNING
] "run ",

642 [
ZOMBIE
] "zombie"

644 
i
, 
j
;

645 
¥oc
 *
p
;

646 *
°©e
;

647 
uöt
 
pc
[10];

649 
	`acquúe
(&
¥oc_èbÀ_lock
);

650 
i
=0; i<
n˝u
; i++)

652 if(
i
 !
	`˝u
())

653 
	`acquúe
(&(
˝us
[
i
].
rq
->
rq_lock
));

655 
	`˝rötf
("************************\n");

656 
i
=0; i<
n˝u
; i++){

657 
p
 = 
˝us
[
i
].
cuΩroc
;

658 if(
p
->
°©e
 >0 &&Ö->°©ê< 
	`NELEM
(
°©es
) && states[p->state])

659 
°©e
 = 
°©es
[
p
->state];

661 
°©e
 = "???";

662 #i‚de‡
SCHED_MLFQ


663 
	`˝rötf
("On cpu %d,Çproc=%d : curproc_pid %d\n",

664 
i
, 
˝us
[i].
rq
->
¥oc_num
, 
p
->
pid
);

666 
	`˝rötf
("On cpu %d,Ñq1=%d,Ñq2=%d,Ñq3=%d : curproc_pid %d\n",

667 
i
, 
˝us
[i].
rq
->
¥oc_num
, cpus[i].rq->
√xt
->proc_num, cpus[i].rq->next->next->proc_num,

668 
p
->
pid
);

672 
i
 = 0; i < 
NPROC
; i++){

673 
p
 = &
¥oc
[
i
];

674 if(
p
->
°©e
 =
UNUSED
)

676 if(
p
->
°©e
 >0 &&Ö->°©ê< 
	`NELEM
(
°©es
) && states[p->state])

677 
°©e
 = 
°©es
[
p
->state];

679 
°©e
 = "???";

680 
	`˝rötf
("%d %†%s", 
p
->
pid
, 
°©e
,Ö->
«me
);

681 if(
p
->
°©e
 =
SLEEPING
){

682 
	`gëˇŒîpcs
((
uöt
*)
p
->
c⁄ãxt
.
ebp
+2, 
pc
);

683 
j
=0; j<10 && 
pc
[j] != 0; j++)

684 
	`˝rötf
(" %p", 
pc
[
j
]);

686 
	`˝rötf
("\n");

688 
	`˝rötf
("************************\n");

689 
i
 = 0; i < 
n˝u
; i++)

691 if(
i
 !
	`˝u
())

692 
	`ªÀa£
(&(
˝us
[
i
].
rq
->
rq_lock
));

694 
	`ªÀa£
(&
¥oc_èbÀ_lock
);

695 
	}
}

697 
	$öô_rq
(
rq
 *rq)

699 
i
;

702 
i
 = 0; i < 
NPROC
; i++){

703 
rq
->
nodes
[
i
].
¥oc
 = 
NULL
;

704 
rq
->
nodes
[
i
].
√xt
 = &(rq->nodes[i]) + 1;

706 
rq
->
nodes
[
NPROC
-1].
√xt
 = 0;

707 
rq
->
‰ì_li°
 = &‘q->
nodes
[0]);

708 
rq
->
√xt_to_run
 = 
NULL
;

709 
rq
->
sub_sched_˛ass
->
	`öô_rq
(rq);

710 
rq
->
¥oc_num
 = 0;

713 
	`öôlock
(&(
rq
->
rq_lock
), 
rq_lock_«me
);

714 
	}
}

716 
	$íqueue_¥oc
(
rq
 *rq, 
¥oc
 *
p
)

718 if(!
	`hﬁdög
(&(
rq
->
rq_lock
)))

719 
	`∑nic
("enqueue_procÇoÜock");

722 if(
rq
->
‰ì_li°
 == 0)

723 
	`∑nic
("kernelÖanic: DoÇot supportÖrocs moreÅhan NPROC!(inÉnqueue_proc_simple)\n");

725 
rq
->
sched_˛ass
->
	`íqueue_¥oc
‘q, 
p
);

726 
	}
}

728 
	$dequeue_¥oc
 (
rq
 *rq, 
¥oc
 *
p
)

730 if(!
	`hﬁdög
(&(
rq
->
rq_lock
)))

731 
	`∑nic
("dequeue_procÇoÜock");

733 if(
p
 =
idÀ¥oc
[
	`˝u
()])

735 
rq
->
sched_˛ass
->
	`dequeue_¥oc
‘q, 
p
);

736 
	}
}

738 
	$yõld_¥oc
 (
rq
 *rq)

740 if(!
	`hﬁdög
(&(
rq
->
rq_lock
)))

741 
	`∑nic
("yieldÇoÜock");

742 
rq
->
sched_˛ass
->
	`yõld_¥oc
(rq);

743 
	}
}

745 
¥oc
* 
	$pick_√xt_¥oc
(
rq
 *rq)

747 if(!
	`hﬁdög
(&(
rq
->
rq_lock
)))

748 
	`∑nic
("pick_next_procÇoÜock");

749 
¥oc
* 
p
 = 
rq
->
sched_˛ass
->
	`pick_√xt_¥oc
(rq);

750 i‡(
p
)

751  
p
;

753  
idÀ¥oc
[
	`˝u
()];

754 
	}
}

756 
	$¥oc_tick
(
rq
*Ñq, 
¥oc
* 
p
)

758 
rq
->
sched_˛ass
->
	`¥oc_tick
(
˝us
[
	`˝u
()].rq, 
˝
);

759 
	}
}

	@proc.h

11 #i‚de‡
_PROC_H_


12 
	#_PROC_H_


	)

14 
	~"•ölock.h
"

15 
	~"ty≥s.h
"

18 
	#SEG_KCODE
 1

19 
	#SEG_KDATA
 2

20 
	#SEG_UCODE
 3

	)

21 
	#SEG_UDATA
 4

	)

22 
	#SEG_TSS
 5

23 
	#NSEGS
 6

	)

32 
	sc⁄ãxt
 {

33 
	meù
;

34 
	me•
;

35 
	mebx
;

36 
	mecx
;

37 
	medx
;

38 
	mesi
;

39 
	medi
;

40 
	mebp
;

43 
	e¥oc_°©e
 { 
	mUNUSED
, 
	mEMBRYO
, 
	mSLEEPING
, 
	mRUNNABLE
, 
	mRUNNING
, 
	mZOMBIE
 };

45 
	s¥oc_vm
 {

46 
pde_t
 * 
	mpgdú
;

47 
•ölock_t
 
	m∑ge_èbÀ_lock
;

48 
vaddr_t
 
	m°¨t_code
;

49 
vaddr_t
 
	míd_code
;

50 
vaddr_t
 
	m°¨t_d©a
;

51 
vaddr_t
 
	míd_d©a
;

52 
vaddr_t
 
	m°¨t_°ack
;

56 
	s¥oc
 {

57 *
	mmem
;

58 
uöt
 
	msz
;

59 *
	mk°ack
;

60 *
	mk
;

61 
¥oc_°©e
 
	m°©e
;

62 
	mpid
;

63 
¥oc
 *
	m∑ª¡
;

64 *
	mch™
;

65 
	mkûÀd
;

66 
fûe
 *
	mofûe
[
NOFILE
];

67 
öode
 *
	mcwd
;

68 
c⁄ãxt
 
	mc⁄ãxt
;

69 
å≠‰ame
 *
	mtf
;

70 
¥oc_vm
 
	mvm
;

71 
	m«me
[16];

72 
	mtime¶i˚
;

73 
rq
* 
	mrq
;

83 
	s˝u
 {

84 
uch¨
 
	m≠icid
;

85 
∑ddr_t
 
	m¸3
;

86 
¥oc
 *
	mcuΩroc
;

87 
c⁄ãxt
 
	mc⁄ãxt
;

88 
èsk°©e
 
	mts
;

89 
£gdesc
 
	mgdt
[
NSEGS
];

90 vﬁ©ûê
uöt
 
	mboŸed
;

91 
	mn˛i
;

92 
	möã«
;

93 
rq
* 
	mrq
;

96 
˝u
 
˝us
[
NCPU
];

97 
n˝u
;

98 
¥oc
 *
öô¥oc
;

99 
¥oc
 *
idÀ¥oc
[];

100 
•ölock
 
¥oc_èbÀ_lock
;

102 
scheduÀ
();

103 
¥oc_tick
(
rq
*Ñq, 
¥oc
* 
p
);

104 
íqueue_¥oc
(
rq
 *rq, 
¥oc
 *
p
);

105 
dequeue_¥oc
 (
rq
 *rq, 
¥oc
 *
p
);

106 
¥oc
* 
pick_√xt_¥oc
(
rq
 *rq);

108 
	ssched_˛ass
{

110 (*
	möô_rq
Ë(
rq
 *
	mrq
);

113 (*
	míqueue_¥oc
Ë(
rq
 *
	mrq
, 
¥oc
 *
	mp
);

116 (*
	mdequeue_¥oc
Ë(
rq
 *
	mrq
, 
¥oc
 *
	mp
);

119 (*
	myõld_¥oc
Ë(
rq
 *
	mrq
);

121 
	m¥oc
* (*
	mpick_√xt_¥oc
Ë(
rq
 *
	mrq
);

124 (*
	m¥oc_tick
)(
rq
* 
	mrq
, 
¥oc
* 
	mp
);

127 (*
	mlﬂd_bÆ™˚
)(
rq
* 
	mrq
);

131 (*
	mgë_¥oc
)(
rq
* 
	mrq
, 
¥oc
* 
	m¥ocs_moved
[]);

136 
	#˝
 
	`cuΩroc
()

	)

	@queue.h

35 #i‚de‡
JOS_INC_QUEUE_H


36 
	#JOS_INC_QUEUE_H


	)

52 
	sFrob


54 
	m‰obozz
;

55 
LIST_ENTRY
(
Frob
Ë
	m‰ob_lök
;

58 
	$LIST_HEAD
(
Frob_li°
, 
Frob
)

60 
Frob_li°
 
Êi°
;

62 
	`LIST_INIT
(&
Êi°
);

63 
Êi°
 = 
	`LIST_HEAD_INITIALIZER
(&flist);

65 if(
	$LIST_EMPTY
(&
Êi°
))

66 
	`¥ötf
("list isÉmpty\n");

68 
Frob
 *
f
 = 
	`LIST_FIRST
(&
Êi°
);

69 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

70 
f
 = 
	`LIST_NEXT
(f, 
‰ob_lök
);

72 
f
=
	`LIST_FIRST
(&
Êi°
); f != 0;

73 
f
 = 
	$LIST_NEXT
(
f
, 
‰ob_lök
))

74 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

76 
	$LIST_FOREACH
(
f
, &
Êi°
, 
‰ob_lök
)

77 
	`¥ötf
("‡%d\n", 
f
->
‰obozz
);

79 
f
 = 
	`LIST_NEXT
(
	`LIST_FIRST
(&
Êi°
));

80 
	`LIST_INSERT_AFTER
(
f
, 
g
, 
‰ob_lök
);

81 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

82 
	`LIST_INSERT_BEFORE
(
f
, 
g
, 
‰ob_lök
);

83 
	`LIST_REMOVE
(
g
, 
‰ob_lök
);

84 
	`LIST_INSERT_HEAD
(&
Êi°
, 
g
, 
‰ob_lök
);

109 
	#LIST_HEAD
(
«me
, 
ty≥
) \

110 
	s«me
 { \

111 
ty≥
 *
lh_fú°
; \

112 }

	)

118 
	#LIST_HEAD_INITIALIZER
(
hód
) \

119 { 
NULL
 
	}

	)
}

129 
	#LIST_ENTRY
(
ty≥
) \

131 
ty≥
 *
À_√xt
; \

132 
ty≥
 **
À_¥ev
; \

133 }

	)

142 
	#LIST_EMPTY
(
hód
Ë((hód)->
lh_fú°
 =
NULL
)

	)

147 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

153 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

160 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

161 (
v¨
Ë
	`LIST_FIRST
((
hód
)); \

162 (
v¨
); \

163 (
v¨
Ë
	`LIST_NEXT
((v¨), 
fõld
))

	)

168 
	#LIST_INIT
(
hód
) do { \

169 
	`LIST_FIRST
((
hód
)Ë
NULL
; \

170 } 0)

	)

177 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

178 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
ËLIST_NEXT((
li°ñm
), fõld)Ë!
NULL
)\

179 
	`LIST_NEXT
((
li°ñm
), 
fõld
)->fõld.
À_¥ev
 = \

180 &
	`LIST_NEXT
((
ñm
), 
fõld
); \

181 
	`LIST_NEXT
((
li°ñm
), 
fõld
Ë(
ñm
); \

182 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
li°ñm
), field); \

183 } 0)

	)

190 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

191 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

192 
	`LIST_NEXT
((
ñm
), 
fõld
Ë(
li°ñm
); \

193 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

194 (
li°ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field); \

195 } 0)

	)

201 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

202 i‡((
	`LIST_NEXT
((
ñm
), 
fõld
Ë
	`LIST_FIRST
((
hód
))Ë!
NULL
) \

203 
	`LIST_FIRST
((
hód
))->
fõld
.
À_¥ev
 = &
	`LIST_NEXT
((
ñm
), field);\

204 
	`LIST_FIRST
((
hód
)Ë(
ñm
); \

205 (
ñm
)->
fõld
.
À_¥ev
 = &
	`LIST_FIRST
((
hód
)); \

206 } 0)

	)

212 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

213 i‡(
	`LIST_NEXT
((
ñm
), 
fõld
Ë!
NULL
) \

214 
	`LIST_NEXT
((
ñm
), 
fõld
)->fõld.
À_¥ev
 = \

215 (
ñm
)->
fõld
.
À_¥ev
; \

216 *(
ñm
)->
fõld
.
À_¥ev
 = 
	`LIST_NEXT
((elm), field); \

217 } 0)

	)

	@rm.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
i
;

10 if(
¨gc
 < 2){

11 
	`¥ötf
(2, "Usage:Ñm files...\n");

12 
	`exô
();

15 
i
 = 1; i < 
¨gc
; i++){

16 if(
	`u∆ök
(
¨gv
[
i
]) < 0){

17 
	`¥ötf
(2, "rm: %†ÁûedÅÿdñëe\n", 
¨gv
[
i
]);

22 
	`exô
();

23 
	}
}

	@rq.c

1 
	~"∑øm.h
"

2 
	~"ty≥s.h
"

3 
	~"mmu.h
"

4 
	~"•ölock.h
"

5 
	~"rq.h
"

7 
rq
 
	grqs
[
NCPU
*3];

	@rq.h

1 #i‚de‡
_RQ_H_


2 
	#_RQ_H_


	)

4 
	~"¥oc.h
"

5 
	#NULL
 0

	)

7 
	srq_node
{

8 
¥oc
* 
	m¥oc
;

9 
rq_node
* 
	m√xt
;

11 
rq_node
* 
	m¥ev
;

14 
	srq
{

15 
•ölock
 
	mrq_lock
;

16 
rq_node
 
	mnodes
[
NPROC
];

18 
rq_node
* 
	m√xt_to_run
;

19 
rq_node
* 
	mœ°_to_run
;

20 
rq_node
* 
	m‰ì_li°
;

23 
	mmax_¶i˚s
;

24 
sched_˛ass
* 
	msched_˛ass
;

25 
rq
* 
	m√xt
;

26 
sched_˛ass
* 
	msub_sched_˛ass
;

29 
	m¥oc_num
;

32 
rq
 
rqs
[];

	@sched.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"x86.h
"

6 
	~"¥oc.h
"

7 
	~"•ölock.h
"

8 
	~"sched.h
"

9 
	~"rq.h
"

12 
	$öô_rq_sim∂e
(
rq
*Ñq){

13 
i
;

16 
i
 = 0; i < 
NPROC
; i++){

17 
rq
->
nodes
[
i
].
¥ev
 = 
NULL
;

19 
	}
}

21 
	$íqueue_¥oc_sim∂e
(
rq
 *rq, 
¥oc
 *
p
){

25 
rq_node
* 
≤ode
 = 
rq
->
‰ì_li°
;

26 
rq
->
‰ì_li°
 = 
≤ode
->
√xt
;

29 
≤ode
->
¥oc
 = 
p
;

30 if(
rq
->
√xt_to_run
 == 0){

31 
rq
->
√xt_to_run
 = 
≤ode
;

32 
≤ode
->
√xt
 =Önode->
¥ev
 =Önode;

34 
rq_node
* 
¥ev
 = 
rq
->
√xt_to_run
->prev;

35 
¥ev
->
√xt
 = 
≤ode
;

36 
≤ode
->
¥ev
 =Örev;

37 
rq
->
√xt_to_run
->
¥ev
 = 
≤ode
;

38 
≤ode
->
√xt
 = 
rq
->
√xt_to_run
;

41 
p
->
rq
 =Ñq;

42 
rq
->
¥oc_num
 ++;

43 
	}
}

45 
	$dequeue_¥oc_sim∂e
(
rq
 *rq, 
¥oc
 *
p
){

47 
rq_node
* 
˙ode
;

48 if(
rq
->
√xt_to_run
->
¥oc
 =
p
)

49 
˙ode
 = 
rq
->
√xt_to_run
;

51 
˙ode
 = 
rq
->
√xt_to_run
->
¥ev
;

52 
˙ode
->
¥oc
 !
p
){

53 if(
˙ode
 =
rq
->
√xt_to_run
){

54 
	`˝rötf
("¥oc: %s, sèã = %d\n", 
p
->
«me
,Ö->
°©e
);

55 
	`∑nic
("KernelÖanic: Cannot findÖroc in dequeue_proc_simple\n");

57 
˙ode
 = cnode->
¥ev
;

62 if(
˙ode
->
√xt
 == cnode){

63 
rq
->
√xt_to_run
 = 0;

65 
rq_node
* 
¥ev
 = 
˙ode
->prev;

66 
rq_node
* 
√xt
 = 
˙ode
->next;

67 
¥ev
->
√xt
 =Çext;

68 
√xt
->
¥ev
 =Örev;

69 
rq
->
√xt_to_run
 = 
√xt
;

73 
˙ode
->
√xt
 = 
rq
->
‰ì_li°
;

74 
rq
->
‰ì_li°
 = 
˙ode
;

76 
rq
->
¥oc_num
 --;

77 
	}
}

79 
	$yõld_¥oc_sim∂e
(
rq
 *rq){

80 if(
rq
->
√xt_to_run
)

81 
rq
->
√xt_to_run
 =Ñq->√xt_to_run->
√xt
;

82 
	}
}

84 
¥oc
* 
	$pick_√xt_¥oc_sim∂e
(
rq
 *rq){

85 
rq_node
* 
p_node
 = 
rq
->
√xt_to_run
;

86 i‡(
p_node
 =
NULL
)

87  
NULL
;

88  
p_node
->
¥oc
;

89 
	}
}

91 
	$¥oc_tick_sim∂e
(
rq
*Ñq, 
¥oc
* 
p
){

92 
	`yõld
();

94 
	}
}

97 
	$lﬂd_bÆ™˚_sim∂e
(
rq
*Ñq){

98 
max
 = 0;

99 
rq
* 
§c_rq
 = 0;

100 
i
;

101 
¥oc
* 
¥ocs_moved
[
NPROC
/2];

102 
num_¥ocs_moved
;

105 
i
=0; i<
n˝u
; i++){

106 if(
rqs
[
i
].
¥oc_num
 > 
max
){

107 
§c_rq
 = &(
rqs
[
i
]);

108 
max
 = 
§c_rq
->
¥oc_num
;

111 if(
§c_rq
 == 0)

115 
	`acquúe
(&(
§c_rq
->
rq_lock
));

116 
num_¥ocs_moved
 = 
§c_rq
->
sched_˛ass
->
	`gë_¥oc
(§c_rq, 
¥ocs_moved
);

117 
	`ªÀa£
(&(
§c_rq
->
rq_lock
));

119 if(
num_¥ocs_moved
 != 0)

120 
	`˝rötf
("load_balance\n");

122 
	`acquúe
(&(
rq
->
rq_lock
));

123 
i
=0; i<
num_¥ocs_moved
; i++) {

124 
	`íqueue_¥oc
(
rq
, 
¥ocs_moved
[
i
]);

126 
	`ªÀa£
(&(
rq
->
rq_lock
));

129 
	}
}

132 
	$gë_¥oc_sim∂e
(
rq
*Ñq, 
¥oc
* 
¥ocs_moved
[]){

133 
num_¥ocs_moved
;

134 
i
;

135 
rq_node
* 
¥ev
, *
√xt
, *
˙ode
;

137 
num_¥ocs_moved
 = 
rq
->
¥oc_num
/2;

139 
˙ode
 = 
rq
->
√xt_to_run
->
√xt
;

140 
i
=0; i<
num_¥ocs_moved
; i++){

141 if(
˙ode
->
√xt
 == 0){

142 
	`ªÀa£
(&(
rq
->
rq_lock
));

143 
	`˝rötf
("Wr⁄g hîe:Öroc_num = %d\n", 
rq
->
¥oc_num
);

144 
	`∑nic
("NotÉnoughÖrocÅo move in get_proc_simple\n");

146 
¥ocs_moved
[
i
] = 
˙ode
->
¥oc
;

147 
¥ev
 = 
˙ode
->¥ev, 
√xt
 = cnode->next;

148 
¥ev
->
√xt
 =Çext;

149 
√xt
->
¥ev
 =Örev;

150 
˙ode
->
√xt
 = 
rq
->
‰ì_li°
;

151 
rq
->
‰ì_li°
 = 
˙ode
;

152 
˙ode
 = 
√xt
;

154 
rq
->
¥oc_num
 -
num_¥ocs_moved
;

156  
num_¥ocs_moved
;

157 
	}
}

159 c⁄° 
sched_˛ass
 
	gsim∂e_sched_˛ass
 = {

160 .
öô_rq
 = 
öô_rq_sim∂e
,

161 .
	gíqueue_¥oc
 = 
íqueue_¥oc_sim∂e
,

162 .
	gdequeue_¥oc
 = 
dequeue_¥oc_sim∂e
,

163 .
	gyõld_¥oc
 = 
yõld_¥oc_sim∂e
,

164 .
	gpick_√xt_¥oc
 = 
pick_√xt_¥oc_sim∂e
,

165 .
	g¥oc_tick
 = 
¥oc_tick_sim∂e
,

166 .
	glﬂd_bÆ™˚
 = 
lﬂd_bÆ™˚_sim∂e
,

167 .
	ggë_¥oc
 = 
gë_¥oc_sim∂e
,

	@sched.h

3 #i‚de‡
__SCHED_H


4 
	#__SCHED_H


	)

6 
	~"rq.h
"

8 c⁄° 
sched_˛ass
 
sim∂e_sched_˛ass
;

	@sched_MLFQ.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"x86.h
"

6 
	~"¥oc.h
"

7 
	~"•ölock.h
"

8 
	~"sched_MLFQ.h
"

10 
	$öô_rq_MLFQ
(
rq
*Ñq){

12 
	}
}

14 
	$íqueue_¥oc_MLFQ
(
rq
 *rq, 
¥oc
 *
p
){

15 
rq
->
sub_sched_˛ass
->
	`íqueue_¥oc
‘q, 
p
);

16 
	}
}

18 
	$dequeue_¥oc_MLFQ
(
rq
 *rq, 
¥oc
 *
p
){

19 i‡(
p
->
rq
 !
NULL
)

20 
p
->
rq
->
sub_sched_˛ass
->
	`dequeue_¥oc
(p->rq,Ö);

21 
	}
}

23 
	$yõld_¥oc_MLFQ
(
rq
 *rq){

24 if(
rq
->
√xt_to_run
)

25 
rq
->
sub_sched_˛ass
->
	`yõld_¥oc
(rq);

26 i‡(
rq
->
√xt
->
√xt_to_run
)

27 
rq
->
√xt
->
sub_sched_˛ass
->
	`yõld_¥oc
(rq->next);

28 i‡(
rq
->
√xt
->√xt->
√xt_to_run
)

29 
rq
->
√xt
->√xt->
sub_sched_˛ass
->
	`yõld_¥oc
(rq->next->next);

31 
	}
}

33 
¥oc
* 
	$pick_√xt_¥oc_MLFQ
(
rq
 *rq){

34 
¥oc
* 
p
 = 
rq
->
sub_sched_˛ass
->
	`pick_√xt_¥oc
(rq);

35 i‡(
p
 =
NULL
)

36 
p
 = 
rq
->
√xt
->
sub_sched_˛ass
->
	`pick_√xt_¥oc
(rq->next);

37 i‡(
p
 =
NULL
)

38 
p
 = 
rq
->
√xt
->√xt->
sub_sched_˛ass
->
	`pick_√xt_¥oc
(rq->next->next);

39  
p
;

40 
	}
}

42 
	$¥oc_tick_MLFQ
(
rq
*Ñq, 
¥oc
* 
p
){

43 if(
p
 =
idÀ¥oc
[
	`˝u
()])

44 
	`yõld
();

48 i‡(
p
->
rq
 =rq ||Ö->rq =rq->
√xt
)

50 
p
->
time¶i˚
--;

51 i‡(
p
->
time¶i˚
 == 0)

53 i‡(
p
->
rq
 ==Ñq)

54 
	`˝rötf
("Switch from 1Åo 2\n");

56 
	`˝rötf
("Switch from 2Åo 3\n");

57 
	`acquúe
(&(
rqs
[
	`˝u
()].
rq_lock
));

58 
p
->
rq
->
sub_sched_˛ass
->
	`dequeue_¥oc
(p->rq,Ö);

59 
p
->
rq
->
√xt
->
sub_sched_˛ass
->
	`íqueue_¥oc
(p->rq->next,Ö);

60 
˝
->
°©e
 = 
RUNNABLE
;

61 
	`scheduÀ
();

62 
	`ªÀa£
(&(
rqs
[
	`˝u
()].
rq_lock
));

66 i‡(
p
->
rq
 =rq->
√xt
->next)

68 
p
->
rq
->
sub_sched_˛ass
->
	`¥oc_tick
(p->rq,Ö);

71 
	}
}

73 
	$lﬂd_bÆ™˚_MLFQ
(
rq
*Ñq){

74 
max
 = 0;

75 
rq
* 
§c_rq
 = 
NULL
;

76 
i
;

77 
¥oc
* 
¥ocs_moved
[3][
NPROC
/2];

78 
num_¥ocs_moved
[3];

81 
i
 = 0; i < 
n˝u
; i++){

82 i‡(
rqs
[
i
].
¥oc_num
 +Ñqs[i+
NCPU
].¥oc_num +Ñqs[i+2*NCPU].¥oc_num > 
max
){

83 
§c_rq
 = &(
rqs
[
i
]);

84 
max
 = 
rqs
[
i
].
¥oc_num
 +Ñqs[i+
NCPU
].proc_num +Ñqs[i+2*NCPU].proc_num;

87 i‡(
§c_rq
 =
NULL
)

91 
	`acquúe
(&(
§c_rq
->
rq_lock
));

92 
num_¥ocs_moved
[0] = 
§c_rq
->
sub_sched_˛ass
->
	`gë_¥oc
(§c_rq, 
¥ocs_moved
[0]);

93 
num_¥ocs_moved
[1] = 
§c_rq
->
√xt
->
sub_sched_˛ass
->
	`gë_¥oc
(§c_rq->√xt, 
¥ocs_moved
[1]);

94 
num_¥ocs_moved
[2] = 
§c_rq
->
√xt
->√xt->
sub_sched_˛ass
->
	`gë_¥oc
(§c_rq->√xt->√xt, 
¥ocs_moved
[2]);

95 
	`ªÀa£
(&(
§c_rq
->
rq_lock
));

97 i‡(
num_¥ocs_moved
[0]+num_procs_moved[1]+num_procs_moved[2] != 0)

98 
	`˝rötf
("load_balance\n");

100 
	`acquúe
(&(
rq
->
rq_lock
));

101 
i
 = 0; i < 
num_¥ocs_moved
[0]; i++) {

102 
rq
->
sub_sched_˛ass
->
	`íqueue_¥oc
‘q, 
¥ocs_moved
[0][
i
]);

104 
i
 = 0; i < 
num_¥ocs_moved
[1]; i++) {

105 
rq
->
√xt
->
sub_sched_˛ass
->
	`íqueue_¥oc
‘q->√xt, 
¥ocs_moved
[1][
i
]);

107 
i
 = 0; i < 
num_¥ocs_moved
[2]; i++) {

108 
rq
->
√xt
->√xt->
sub_sched_˛ass
->
	`íqueue_¥oc
‘q->√xt->√xt, 
¥ocs_moved
[2][
i
]);

110 
	`ªÀa£
(&(
rq
->
rq_lock
));

113 
	}
}

115 
	$gë_¥oc_MLFQ
(
rq
*Ñq, 
¥oc
* 
¥ocs_moved
[]){

117 
	}
}

119 c⁄° 
sched_˛ass
 
	gsched_˛ass_MLFQ
 = {

120 .
öô_rq
 = 
öô_rq_MLFQ
,

121 .
	gíqueue_¥oc
 = 
íqueue_¥oc_MLFQ
,

122 .
	gdequeue_¥oc
 = 
dequeue_¥oc_MLFQ
,

123 .
	gyõld_¥oc
 = 
yõld_¥oc_MLFQ
,

124 .
	gpick_√xt_¥oc
 = 
pick_√xt_¥oc_MLFQ
,

125 .
	g¥oc_tick
 = 
¥oc_tick_MLFQ
,

126 .
	glﬂd_bÆ™˚
 = 
lﬂd_bÆ™˚_MLFQ
,

127 .
	ggë_¥oc
 = 
gë_¥oc_MLFQ
,

	@sched_MLFQ.h

3 #i‚de‡
__SCHED_MLFQ_H


4 
	#__SCHED_MLFQ_H


	)

6 
	~"rq.h
"

8 c⁄° 
sched_˛ass
 
sched_˛ass_MLFQ
;

	@sched_RR.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"x86.h
"

6 
	~"¥oc.h
"

7 
	~"•ölock.h
"

8 
	~"sched_RR.h
"

12 
	$öô_rq_RR
(
rq
*Ñq){

13 
i
;

15 
i
 = 0; i < 
NPROC
; i++){

16 
rq
->
nodes
[
i
].
¥ev
 = 
NULL
;

18 
	}
}

20 
	$íqueue_¥oc_RR
(
rq
 *rq, 
¥oc
 *
p
){

21 
rq_node
* 
≤ode
 = 
rq
->
‰ì_li°
;

22 
rq
->
‰ì_li°
 = 
≤ode
->
√xt
;

24 i‡(
p
->
rq
 !=Ñq)

25 
p
->
time¶i˚
 = 
rq
->
max_¶i˚s
;

27 
≤ode
->
¥oc
 = 
p
;

29 i‡(
rq
->
√xt_to_run
 =
NULL
){

30 
rq
->
√xt_to_run
 =Ñq->
œ°_to_run
 = 
≤ode
;

31 
≤ode
->
√xt
 =Önode->
¥ev
 =Önode;

33 
rq
->
√xt_to_run
->
¥ev
->
√xt
 = 
≤ode
;

34 
≤ode
->
¥ev
 = 
rq
->
√xt_to_run
->prev;

35 
≤ode
->
√xt
 = 
rq
->
√xt_to_run
;

36 
rq
->
√xt_to_run
->
¥ev
 = 
≤ode
;

39 
p
->
rq
 =Ñq;

40 
rq
->
¥oc_num
 ++;

41 
	}
}

43 
	$dequeue_¥oc_RR
(
rq
 *rq, 
¥oc
 *
p
){

44 
rq_node
* 
node
 = 
rq
->
√xt_to_run
;

45 
node
 !
rq
->
√xt_to_run
->
¥ev
 &&Çode->
¥oc
 !
p
)

47 
node
 =Çode->
√xt
;

49 i‡(
p
 =
rq
->
√xt_to_run
->
¥oc
)

51 i‡(
node
->
√xt
 ==Çode)

52 
rq
->
√xt_to_run
 = 
NULL
;

54 
rq
->
√xt_to_run
 =Ñq->√xt_to_run->
√xt
;

56 i‡(
node
->
√xt
 !=Çode)

58 
node
->
¥ev
->
√xt
 =Çode->next;

59 
node
->
√xt
->
¥ev
 =Çode->prev;

63 
node
->
√xt
 = 
rq
->
‰ì_li°
;

64 
rq
->
‰ì_li°
 = 
node
;

66 
rq
->
¥oc_num
 --;

67 
	}
}

69 
	$yõld_¥oc_RR
(
rq
 *rq){

70 if(
rq
->
√xt_to_run
)

71 
rq
->
√xt_to_run
 =Ñq->√xt_to_run->
√xt
;

72 
	}
}

74 
¥oc
* 
	$pick_√xt_¥oc_RR
(
rq
 *rq){

75 
rq_node
* 
p_node
 = 
rq
->
√xt_to_run
;

76 i‡(
p_node
 =
NULL
)

77  
NULL
;

78  
p_node
->
¥oc
;

79 
	}
}

81 
	$¥oc_tick_RR
(
rq
*Ñq, 
¥oc
* 
p
){

82 if(
p
 =
idÀ¥oc
[
	`˝u
()])

83 
	`yõld
();

86 
p
->
time¶i˚
--;

87 i‡(
p
->
time¶i˚
 == 0)

89 
p
->
time¶i˚
 = 
rq
->
max_¶i˚s
;

90 
	`yõld
();

93 
	}
}

95 
	$lﬂd_bÆ™˚_RR
(
rq
*Ñq){

96 
max
 = 0;

97 
rq
* 
§c_rq
 = 0;

98 
i
;

99 
¥oc
* 
¥ocs_moved
[
NPROC
/2];

100 
num_¥ocs_moved
;

103 
i
=0; i<
n˝u
; i++){

104 if(
rqs
[
i
].
¥oc_num
 > 
max
){

105 
§c_rq
 = &(
rqs
[
i
]);

106 
max
 = 
§c_rq
->
¥oc_num
;

109 if(
§c_rq
 == 0)

113 
	`acquúe
(&(
§c_rq
->
rq_lock
));

114 
num_¥ocs_moved
 = 
§c_rq
->
sched_˛ass
->
	`gë_¥oc
(§c_rq, 
¥ocs_moved
);

115 
	`ªÀa£
(&(
§c_rq
->
rq_lock
));

117 
	`acquúe
(&(
rq
->
rq_lock
));

118 
i
=0; i<
num_¥ocs_moved
; i++) {

119 
	`íqueue_¥oc
(
rq
, 
¥ocs_moved
[
i
]);

121 
	`ªÀa£
(&(
rq
->
rq_lock
));

123 #ifde‡
LOAD_BALANCE_OUTPUT


124 if(
num_¥ocs_moved
 != 0)

126 
	`˝rötf
("afterÜoad_balance\n");

127 
	`¥ocdump
();

132 
	}
}

135 
	$gë_¥oc_RR
(
rq
*Ñq, 
¥oc
* 
¥ocs_moved
[]){

136 
num_¥ocs_moved
;

137 
i
;

138 
rq_node
* 
¥ev
, *
√xt
, *
˙ode
;

140 
num_¥ocs_moved
 = 
rq
->
¥oc_num
/2;

142 #ifde‡
LOAD_BALANCE_OUTPUT


143 if(
num_¥ocs_moved
 != 0)

145 
	`˝rötf
("beforeÜoad_balance\n");

146 
	`ªÀa£
(&(
rq
->
rq_lock
));

147 
	`¥ocdump
();

148 
	`acquúe
(&(
rq
->
rq_lock
));

152 
˙ode
 = 
rq
->
√xt_to_run
->
√xt
;

153 
i
=0; i<
num_¥ocs_moved
; i++){

154 if(
˙ode
->
√xt
 == 0){

155 
	`ªÀa£
(&(
rq
->
rq_lock
));

156 
	`˝rötf
("Wr⁄g hîe:Öroc_num = %d\n", 
rq
->
¥oc_num
);

157 
	`∑nic
("NotÉnoughÖrocÅo move in get_proc_simple\n");

159 
¥ocs_moved
[
i
] = 
˙ode
->
¥oc
;

160 
¥ev
 = 
˙ode
->¥ev, 
√xt
 = cnode->next;

161 
¥ev
->
√xt
 =Çext;

162 
√xt
->
¥ev
 =Örev;

163 
˙ode
->
√xt
 = 
rq
->
‰ì_li°
;

164 
rq
->
‰ì_li°
 = 
˙ode
;

165 
˙ode
 = 
√xt
;

167 
rq
->
¥oc_num
 -
num_¥ocs_moved
;

169  
num_¥ocs_moved
;

170 
	}
}

172 c⁄° 
sched_˛ass
 
	gsched_˛ass_RR
 = {

173 .
öô_rq
 = 
öô_rq_RR
,

174 .
	gíqueue_¥oc
 = 
íqueue_¥oc_RR
,

175 .
	gdequeue_¥oc
 = 
dequeue_¥oc_RR
,

176 .
	gyõld_¥oc
 = 
yõld_¥oc_RR
,

177 .
	gpick_√xt_¥oc
 = 
pick_√xt_¥oc_RR
,

178 .
	g¥oc_tick
 = 
¥oc_tick_RR
,

179 .
	glﬂd_bÆ™˚
 = 
lﬂd_bÆ™˚_RR
,

180 .
	ggë_¥oc
 = 
gë_¥oc_RR
,

	@sched_RR.h

3 #i‚de‡
__SCHED_RR_H


4 
	#__SCHED_RR_H


	)

6 
	~"rq.h
"

8 c⁄° 
sched_˛ass
 
sched_˛ass_RR
;

	@sched_fifo.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"x86.h
"

6 
	~"¥oc.h
"

7 
	~"•ölock.h
"

8 
	~"sched_fifo.h
"

10 
	$öô_rq_fifo
(
rq
*Ñq){

12 
	}
}

14 
	$íqueue_¥oc_fifo
(
rq
 *rq, 
¥oc
 *
p
){

15 
rq_node
* 
≤ode
 = 
rq
->
‰ì_li°
;

16 
rq
->
‰ì_li°
 = 
≤ode
->
√xt
;

19 
≤ode
->
¥oc
 = 
p
;

20 
≤ode
->
√xt
 = 
NULL
;

22 i‡(
rq
->
√xt_to_run
 =
NULL
){

23 
rq
->
√xt_to_run
 =Ñq->
œ°_to_run
 = 
≤ode
;

25 
rq
->
œ°_to_run
->
√xt
 = 
≤ode
;

26 
rq
->
œ°_to_run
 = 
≤ode
;

29 
p
->
rq
 =Ñq;

30 
rq
->
¥oc_num
 ++;

31 
	}
}

33 
	$dequeue_¥oc_fifo
(
rq
 *rq, 
¥oc
 *
p
){

34 
rq_node
* 
node
 = 
rq
->
√xt_to_run
;

35 
rq_node
* 
≤ode
 = 
NULL
;

36 
node
 !
rq
->
œ°_to_run
 &&Çode->
¥oc
 !
p
)

38 
≤ode
 = 
node
;

39 
node
 =Çode->
√xt
;

41 i‡(
p
 =
rq
->
√xt_to_run
->
¥oc
)

42 
rq
->
√xt_to_run
 = 
node
->
√xt
;

44 
≤ode
->
√xt
 = 
node
->next;

47 
node
->
√xt
 = 
rq
->
‰ì_li°
;

48 
rq
->
‰ì_li°
 = 
node
;

50 
rq
->
¥oc_num
 --;

51 
	}
}

53 
	$yõld_¥oc_fifo
(
rq
 *rq){

54 if(
rq
->
√xt_to_run
)

56 i‡(
rq
->
√xt_to_run
 =rq->
œ°_to_run
)

58 
rq
->
œ°_to_run
->
√xt
 =Ñq->
√xt_to_run
;

59 
rq
->
√xt_to_run
 =Ñq->√xt_to_run->
√xt
;

60 
rq
->
œ°_to_run
 =Ñq->œ°_to_run->
√xt
;

62 
	}
}

64 
¥oc
* 
	$pick_√xt_¥oc_fifo
(
rq
 *rq){

65 
rq_node
* 
p_node
 = 
rq
->
√xt_to_run
;

66 i‡(
p_node
 =
NULL
)

67  
NULL
;

68  
p_node
->
¥oc
;

69 
	}
}

71 
	$¥oc_tick_fifo
(
rq
*Ñq, 
¥oc
* 
p
){

72 
¥oc
* 
idÀ¥oc
[];

73 if(
p
 =
idÀ¥oc
[
	`˝u
()])

74 
	`yõld
();

76 
	}
}

78 
	$lﬂd_bÆ™˚_fifo
(
rq
*Ñq){

79 
max
 = 0;

80 
rq
* 
§c_rq
 = 
NULL
;

81 
i
;

82 
¥oc
* 
¥ocs_moved
[
NPROC
/2];

83 
num_¥ocs_moved
;

86 
i
 = 0; i < 
n˝u
; i++){

87 i‡(
rqs
[
i
].
¥oc_num
 > 
max
){

88 
§c_rq
 = &(
rqs
[
i
]);

89 
max
 = 
§c_rq
->
¥oc_num
;

92 if(
§c_rq
 =
NULL
)

96 
	`acquúe
(&(
§c_rq
->
rq_lock
));

97 
num_¥ocs_moved
 = 
§c_rq
->
sched_˛ass
->
	`gë_¥oc
(§c_rq, 
¥ocs_moved
);

98 
	`ªÀa£
(&(
§c_rq
->
rq_lock
));

99 i‡(
num_¥ocs_moved
 != 0)

100 
	`˝rötf
("Load balance\n");

101 
	`acquúe
(&(
rq
->
rq_lock
));

102 
i
 = 0; i < 
num_¥ocs_moved
; i++)

103 
	`íqueue_¥oc
(
rq
, 
¥ocs_moved
[
i
]);

105 
	`ªÀa£
(&(
rq
->
rq_lock
));

108 
	}
}

110 
	$gë_¥oc_fifo
(
rq
*Ñq, 
¥oc
* 
¥ocs_moved
[]){

111 
num_¥ocs_moved
 = 
rq
->
¥oc_num
/2;

112 
i
;

113 
rq_node
 *
√xt
;

115 
rq_node
* 
˙ode
 = 
rq
->
√xt_to_run
;

116 
i
 = 0; i < 
num_¥ocs_moved
; i++){

117 i‡(
˙ode
->
√xt
 =
NULL
){

118 
	`˝rötf
("Wr⁄g hîe:Öroc_num = %d\n", 
rq
->
¥oc_num
);

119 
	`∑nic
("NotÉnoughÖrocÅo move in get_proc_fifo\n");

121 
√xt
 = 
˙ode
->next;

122 if(
√xt
 =
rq
->
œ°_to_run
)

123 
rq
->
œ°_to_run
 = 
˙ode
;

124 
¥ocs_moved
[
i
] = 
√xt
->
¥oc
;

125 
˙ode
->
√xt
 =Çext->next;

126 
√xt
->√xà
rq
->
‰ì_li°
;

127 
rq
->
‰ì_li°
 = 
√xt
;

129 
rq
->
¥oc_num
 -
num_¥ocs_moved
;

131  
num_¥ocs_moved
;

132 
	}
}

134 c⁄° 
sched_˛ass
 
	gsched_˛ass_fifo
 = {

135 .
öô_rq
 = 
öô_rq_fifo
,

136 .
	gíqueue_¥oc
 = 
íqueue_¥oc_fifo
,

137 .
	gdequeue_¥oc
 = 
dequeue_¥oc_fifo
,

138 .
	gyõld_¥oc
 = 
yõld_¥oc_fifo
,

139 .
	gpick_√xt_¥oc
 = 
pick_√xt_¥oc_fifo
,

140 .
	g¥oc_tick
 = 
¥oc_tick_fifo
,

141 .
	glﬂd_bÆ™˚
 = 
lﬂd_bÆ™˚_fifo
,

142 .
	ggë_¥oc
 = 
gë_¥oc_fifo
,

	@sched_fifo.h

3 #i‚de‡
__SCHED_FIFO_H


4 
	#__SCHED_FIFO_H


	)

6 
	~"rq.h
"

8 c⁄° 
sched_˛ass
 
sched_˛ass_fifo
;

	@sh.c

3 
	~"ty≥s.h
"

4 
	~"u£r.h
"

5 
	~"f˙é.h
"

8 
	#EXEC
 1

	)

9 
	#REDIR
 2

	)

10 
	#PIPE
 3

	)

11 
	#LIST
 4

	)

12 
	#BACK
 5

	)

14 
	#MAXARGS
 10

	)

16 
	scmd
 {

17 
	mty≥
;

20 
	sexeccmd
 {

21 
	mty≥
;

22 *
	m¨gv
[
MAXARGS
];

23 *
	mórgv
[
MAXARGS
];

26 
	sªdúcmd
 {

27 
	mty≥
;

28 
cmd
 *
	mcmd
;

29 *
	mfûe
;

30 *
	mefûe
;

31 
	mmode
;

32 
	mfd
;

35 
	spùecmd
 {

36 
	mty≥
;

37 
cmd
 *
	mÀ·
;

38 
cmd
 *
	mright
;

41 
	sli°cmd
 {

42 
	mty≥
;

43 
cmd
 *
	mÀ·
;

44 
cmd
 *
	mright
;

47 
	sbackcmd
 {

48 
	mty≥
;

49 
cmd
 *
	mcmd
;

52 
f‹k1
();

53 
∑nic
(*);

54 
cmd
 *
∑r£cmd
(*);

58 
	$runcmd
(
cmd
 *cmd)

60 
p
[2];

61 
backcmd
 *
bcmd
;

62 
execcmd
 *
ecmd
;

63 
li°cmd
 *
lcmd
;

64 
pùecmd
 *
pcmd
;

65 
ªdúcmd
 *
rcmd
;

67 if(
cmd
 == 0)

68 
	`exô
();

70 
cmd
->
ty≥
){

72 
	`∑nic
("runcmd");

74 
EXEC
:

75 
ecmd
 = (
execcmd
*)
cmd
;

76 if(
ecmd
->
¨gv
[0] == 0)

77 
	`exô
();

78 
	`exec
(
ecmd
->
¨gv
[0],Écmd->argv);

79 
	`¥ötf
(2, "exe¯%†Áûed\n", 
ecmd
->
¨gv
[0]);

82 
REDIR
:

83 
rcmd
 = (
ªdúcmd
*)
cmd
;

84 
	`˛o£
(
rcmd
->
fd
);

85 if(
	`›í
(
rcmd
->
fûe
,Ñcmd->
mode
) < 0){

86 
	`¥ötf
(2, "›í %†Áûed\n", 
rcmd
->
fûe
);

87 
	`exô
();

89 
	`runcmd
(
rcmd
->
cmd
);

92 
LIST
:

93 
lcmd
 = (
li°cmd
*)
cmd
;

94 if(
	`f‹k1
() == 0)

95 
	`runcmd
(
lcmd
->
À·
);

96 
	`waô
();

97 
	`runcmd
(
lcmd
->
right
);

100 
PIPE
:

101 
pcmd
 = (
pùecmd
*)
cmd
;

102 if(
	`pùe
(
p
) < 0)

103 
	`∑nic
("pipe");

104 if(
	`f‹k1
() == 0){

105 
	`˛o£
(1);

106 
	`dup
(
p
[1]);

107 
	`˛o£
(
p
[0]);

108 
	`˛o£
(
p
[1]);

109 
	`runcmd
(
pcmd
->
À·
);

111 if(
	`f‹k1
() == 0){

112 
	`˛o£
(0);

113 
	`dup
(
p
[0]);

114 
	`˛o£
(
p
[0]);

115 
	`˛o£
(
p
[1]);

116 
	`runcmd
(
pcmd
->
right
);

118 
	`˛o£
(
p
[0]);

119 
	`˛o£
(
p
[1]);

120 
	`waô
();

121 
	`waô
();

124 
BACK
:

125 
bcmd
 = (
backcmd
*)
cmd
;

126 if(
	`f‹k1
() == 0)

127 
	`runcmd
(
bcmd
->
cmd
);

130 
	`exô
();

131 
	}
}

134 
	$gëcmd
(*
buf
, 
nbuf
)

136 
	`¥ötf
(2, "$ ");

137 
	`mem£t
(
buf
, 0, 
nbuf
);

138 
	`gës
(
buf
, 
nbuf
);

139 if(
buf
[0] == 0)

142 
	}
}

145 
	$maö
()

147 
buf
[100];

148 
fd
;

151 (
fd
 = 
	`›í
("c⁄sﬁe", 
O_RDWR
)) >= 0){

152 if(
fd
 >= 3){

153 
	`˛o£
(
fd
);

159 
	`gëcmd
(
buf
, (buf)) >= 0){

160 if(
buf
[0] == 'c' && buf[1] == 'd' && buf[2] == ' '){

163 
buf
[
	`°æí
(buf)-1] = 0;

164 if(
	`chdú
(
buf
+3) < 0)

165 
	`¥ötf
(2, "ˇ¬Ÿ cd %s\n", 
buf
+3);

168 if(
	`f‹k1
() == 0)

169 
	`runcmd
(
	`∑r£cmd
(
buf
));

170 
	`waô
();

172 
	`exô
();

173 
	}
}

176 
	$∑nic
(*
s
)

178 
	`¥ötf
(2, "%s\n", 
s
);

179 
	`exô
();

180 
	}
}

183 
	$f‹k1
()

185 
pid
;

187 
pid
 = 
	`f‹k
();

188 if(
pid
 == -1)

189 
	`∑nic
("fork");

190  
pid
;

191 
	}
}

195 
cmd
*

196 
	$execcmd
()

198 
execcmd
 *
cmd
;

200 
cmd
 = 
	`mÆloc
((*cmd));

201 
	`mem£t
(
cmd
, 0, (*cmd));

202 
cmd
->
ty≥
 = 
EXEC
;

203  (
cmd
*)cmd;

204 
	}
}

206 
cmd
*

207 
	$ªdúcmd
(
cmd
 *
subcmd
, *
fûe
, *
efûe
, 
mode
, 
fd
)

209 
ªdúcmd
 *
cmd
;

211 
cmd
 = 
	`mÆloc
((*cmd));

212 
	`mem£t
(
cmd
, 0, (*cmd));

213 
cmd
->
ty≥
 = 
REDIR
;

214 
cmd
->cmd = 
subcmd
;

215 
cmd
->
fûe
 = file;

216 
cmd
->
efûe
 =Éfile;

217 
cmd
->
mode
 = mode;

218 
cmd
->
fd
 = fd;

219  (
cmd
*)cmd;

220 
	}
}

222 
cmd
*

223 
	$pùecmd
(
cmd
 *
À·
, cmd *
right
)

225 
pùecmd
 *
cmd
;

227 
cmd
 = 
	`mÆloc
((*cmd));

228 
	`mem£t
(
cmd
, 0, (*cmd));

229 
cmd
->
ty≥
 = 
PIPE
;

230 
cmd
->
À·
 =Üeft;

231 
cmd
->
right
 =Ñight;

232  (
cmd
*)cmd;

233 
	}
}

235 
cmd
*

236 
	$li°cmd
(
cmd
 *
À·
, cmd *
right
)

238 
li°cmd
 *
cmd
;

240 
cmd
 = 
	`mÆloc
((*cmd));

241 
	`mem£t
(
cmd
, 0, (*cmd));

242 
cmd
->
ty≥
 = 
LIST
;

243 
cmd
->
À·
 =Üeft;

244 
cmd
->
right
 =Ñight;

245  (
cmd
*)cmd;

246 
	}
}

248 
cmd
*

249 
	$backcmd
(
cmd
 *
subcmd
)

251 
backcmd
 *
cmd
;

253 
cmd
 = 
	`mÆloc
((*cmd));

254 
	`mem£t
(
cmd
, 0, (*cmd));

255 
cmd
->
ty≥
 = 
BACK
;

256 
cmd
->cmd = 
subcmd
;

257  (
cmd
*)cmd;

258 
	}
}

261 
	gwhôe•a˚
[] = " \t\r\n\v";

262 
	gsymbﬁs
[] = "<|>&;()";

265 
	$gëtokí
(**
ps
, *
es
, **
q
, **
eq
)

267 *
s
;

268 
ªt
;

270 
s
 = *
ps
;

271 
s
 < 
es
 && 
	`°rchr
(
whôe•a˚
, *s))

272 
s
++;

273 if(
q
)

274 *
q
 = 
s
;

275 
ªt
 = *
s
;

276 *
s
){

285 
s
++;

288 
s
++;

289 if(*
s
 == '>'){

290 
ªt
 = '+';

291 
s
++;

295 
ªt
 = 'a';

296 
s
 < 
es
 && !
	`°rchr
(
whôe•a˚
, *sË&& !°rchr(
symbﬁs
, *s))

297 
s
++;

300 if(
eq
)

301 *
eq
 = 
s
;

303 
s
 < 
es
 && 
	`°rchr
(
whôe•a˚
, *s))

304 
s
++;

305 *
ps
 = 
s
;

306  
ªt
;

307 
	}
}

310 
	$≥ek
(**
ps
, *
es
, *
toks
)

312 *
s
;

314 
s
 = *
ps
;

315 
s
 < 
es
 && 
	`°rchr
(
whôe•a˚
, *s))

316 
s
++;

317 *
ps
 = 
s
;

318  *
s
 && 
	`°rchr
(
toks
, *s);

319 
	}
}

321 
cmd
 *
∑r£löe
(**, *);

322 
cmd
 *
∑r£pùe
(**, *);

323 
cmd
 *
∑r£exec
(**, *);

324 
cmd
 *
nu…îmö©e
(cmd*);

326 
cmd
*

327 
	$∑r£cmd
(*
s
)

329 *
es
;

330 
cmd
 *cmd;

332 
es
 = 
s
 + 
	`°æí
(s);

333 
cmd
 = 
	`∑r£löe
(&
s
, 
es
);

334 
	`≥ek
(&
s
, 
es
, "");

335 if(
s
 !
es
){

336 
	`¥ötf
(2, "À·ovîs: %s\n", 
s
);

337 
	`∑nic
("syntax");

339 
	`nu…îmö©e
(
cmd
);

340  
cmd
;

341 
	}
}

343 
cmd
*

344 
	$∑r£löe
(**
ps
, *
es
)

346 
cmd
 *cmd;

348 
cmd
 = 
	`∑r£pùe
(
ps
, 
es
);

349 
	`≥ek
(
ps
, 
es
, "&")){

350 
	`gëtokí
(
ps
, 
es
, 0, 0);

351 
cmd
 = 
	`backcmd
(cmd);

353 if(
	`≥ek
(
ps
, 
es
, ";")){

354 
	`gëtokí
(
ps
, 
es
, 0, 0);

355 
cmd
 = 
	`li°cmd
(cmd, 
	`∑r£löe
(
ps
, 
es
));

357  
cmd
;

358 
	}
}

360 
cmd
*

361 
	$∑r£pùe
(**
ps
, *
es
)

363 
cmd
 *cmd;

365 
cmd
 = 
	`∑r£exec
(
ps
, 
es
);

366 if(
	`≥ek
(
ps
, 
es
, "|")){

367 
	`gëtokí
(
ps
, 
es
, 0, 0);

368 
cmd
 = 
	`pùecmd
(cmd, 
	`∑r£pùe
(
ps
, 
es
));

370  
cmd
;

371 
	}
}

373 
cmd
*

374 
	$∑r£ªdús
(
cmd
 *cmd, **
ps
, *
es
)

376 
tok
;

377 *
q
, *
eq
;

379 
	`≥ek
(
ps
, 
es
, "<>")){

380 
tok
 = 
	`gëtokí
(
ps
, 
es
, 0, 0);

381 if(
	`gëtokí
(
ps
, 
es
, &
q
, &
eq
) != 'a')

382 
	`∑nic
("missing file forÑedirection");

383 
tok
){

385 
cmd
 = 
	`ªdúcmd
(cmd, 
q
, 
eq
, 
O_RDONLY
, 0);

388 
cmd
 = 
	`ªdúcmd
(cmd, 
q
, 
eq
, 
O_WRONLY
|
O_CREATE
, 1);

391 
cmd
 = 
	`ªdúcmd
(cmd, 
q
, 
eq
, 
O_WRONLY
|
O_CREATE
, 1);

395  
cmd
;

396 
	}
}

398 
cmd
*

399 
	$∑r£block
(**
ps
, *
es
)

401 
cmd
 *cmd;

403 if(!
	`≥ek
(
ps
, 
es
, "("))

404 
	`∑nic
("parseblock");

405 
	`gëtokí
(
ps
, 
es
, 0, 0);

406 
cmd
 = 
	`∑r£löe
(
ps
, 
es
);

407 if(!
	`≥ek
(
ps
, 
es
, ")"))

408 
	`∑nic
("syntax - missing )");

409 
	`gëtokí
(
ps
, 
es
, 0, 0);

410 
cmd
 = 
	`∑r£ªdús
(cmd, 
ps
, 
es
);

411  
cmd
;

412 
	}
}

414 
cmd
*

415 
	$∑r£exec
(**
ps
, *
es
)

417 *
q
, *
eq
;

418 
tok
, 
¨gc
;

419 
execcmd
 *
cmd
;

420 
cmd
 *
ªt
;

422 if(
	`≥ek
(
ps
, 
es
, "("))

423  
	`∑r£block
(
ps
, 
es
);

425 
ªt
 = 
	`execcmd
();

426 
cmd
 = (
execcmd
*)
ªt
;

428 
¨gc
 = 0;

429 
ªt
 = 
	`∑r£ªdús
‘ë, 
ps
, 
es
);

430 !
	`≥ek
(
ps
, 
es
, "|)&;")){

431 if((
tok
=
	`gëtokí
(
ps
, 
es
, &
q
, &
eq
)) == 0)

433 if(
tok
 != 'a')

434 
	`∑nic
("syntax");

435 
cmd
->
¨gv
[
¨gc
] = 
q
;

436 
cmd
->
órgv
[
¨gc
] = 
eq
;

437 
¨gc
++;

438 if(
¨gc
 >
MAXARGS
)

439 
	`∑nic
("too manyárgs");

440 
ªt
 = 
	`∑r£ªdús
‘ë, 
ps
, 
es
);

442 
cmd
->
¨gv
[
¨gc
] = 0;

443 
cmd
->
órgv
[
¨gc
] = 0;

444  
ªt
;

445 
	}
}

448 
cmd
*

449 
	$nu…îmö©e
(
cmd
 *cmd)

451 
i
;

452 
backcmd
 *
bcmd
;

453 
execcmd
 *
ecmd
;

454 
li°cmd
 *
lcmd
;

455 
pùecmd
 *
pcmd
;

456 
ªdúcmd
 *
rcmd
;

458 if(
cmd
 == 0)

461 
cmd
->
ty≥
){

462 
EXEC
:

463 
ecmd
 = (
execcmd
*)
cmd
;

464 
i
=0; 
ecmd
->
¨gv
[i]; i++)

465 *
ecmd
->
órgv
[
i
] = 0;

468 
REDIR
:

469 
rcmd
 = (
ªdúcmd
*)
cmd
;

470 
	`nu…îmö©e
(
rcmd
->
cmd
);

471 *
rcmd
->
efûe
 = 0;

474 
PIPE
:

475 
pcmd
 = (
pùecmd
*)
cmd
;

476 
	`nu…îmö©e
(
pcmd
->
À·
);

477 
	`nu…îmö©e
(
pcmd
->
right
);

480 
LIST
:

481 
lcmd
 = (
li°cmd
*)
cmd
;

482 
	`nu…îmö©e
(
lcmd
->
À·
);

483 
	`nu…îmö©e
(
lcmd
->
right
);

486 
BACK
:

487 
bcmd
 = (
backcmd
*)
cmd
;

488 
	`nu…îmö©e
(
bcmd
->
cmd
);

491  
cmd
;

492 
	}
}

	@spinlock.c

3 
	~"ty≥s.h
"

4 
	~"defs.h
"

5 
	~"∑øm.h
"

6 
	~"x86.h
"

7 
	~"mmu.h
"

8 
	~"¥oc.h
"

9 
	~"•ölock.h
"

11 
u£_c⁄sﬁe_lock
;

14 
	$öôlock
(
•ölock
 *
lock
, *
«me
)

16 
lock
->
«me
 =Çame;

17 
lock
->
locked
 = 0;

18 
lock
->
˝u
 = 0xffffffff;

19 
	}
}

26 
	$acquúe
(
•ölock
 *
lock
)

28 
	`push˛i
();

29 if(
	`hﬁdög
(
lock
)) {

30 
	`˝rötf
("lockÇame: %s, ", 
lock
->
«me
);

31 
	`∑nic
("acquire");

37 
	`xchg
(&
lock
->
locked
, 1) == 1)

44 
lock
->
˝u
 = 
	`˝u
() + 10;

45 
	`gëˇŒîpcs
(&
lock
,Üock->
pcs
);

46 
	}
}

50 
	$ªÀa£
(
•ölock
 *
lock
)

52 if(!
	`hﬁdög
(
lock
))

53 
	`∑nic
("release");

55 
lock
->
pcs
[0] = 0;

56 
lock
->
˝u
 = 0xffffffff;

63 
	`xchg
(&
lock
->
locked
, 0);

65 
	`p›˛i
();

66 
	}
}

70 
	$gëˇŒîpcs
(*
v
, 
uöt
 
pcs
[])

72 
uöt
 *
ebp
;

73 
i
;

75 
ebp
 = (
uöt
*)
v
 - 2;

76 
i
 = 0; i < 10; i++){

77 if(
ebp
 =0 ||Éb∞=(
uöt
*)0xffffffff)

79 
pcs
[
i
] = 
ebp
[1];

80 
ebp
 = (
uöt
*)ebp[0];

82 ; 
i
 < 10; i++)

83 
pcs
[
i
] = 0;

84 
	}
}

88 
	$hﬁdög
(
•ölock
 *
lock
)

90  
lock
->
locked
 &&Üock->
˝u
 =
	`˝u
() + 10;

91 
	}
}

99 
	$push˛i
()

101 
eÊags
;

103 
eÊags
 = 
	`ªad_eÊags
();

104 
	`˛i
();

105 if(
˝us
[
	`˝u
()].
n˛i
++ == 0)

106 
˝us
[
	`˝u
()].
öã«
 = 
eÊags
 & 
FL_IF
;

107 
	}
}

110 
	$p›˛i
()

112 if(
	`ªad_eÊags
()&
FL_IF
)

113 
	`∑nic
("popcli - interruptible");

114 if(--
˝us
[
	`˝u
()].
n˛i
 < 0)

115 
	`∑nic
("popcli");

116 if(
˝us
[
	`˝u
()].
n˛i
 =0 && cpus[˝u()].
öã«
)

117 
	`°i
();

118 
	}
}

	@spinlock.h

1 #i‚de‡
_SPINLOCK_H_


2 
	#_SPINLOCK_H_


	)

4 
	s•ölock
 {

5 
uöt
 
	mlocked
;

8 *
	m«me
;

9 
	m˝u
;

10 
uöt
 
	mpcs
[10];

13 
•ölock
 
	t•ölock_t
;

	@stat.h

1 
	s°©
 {

2 
	mdev
;

3 
uöt
 
	möo
;

4 
	mty≥
;

5 
	m∆ök
;

6 
uöt
 
	msize
;

	@string.c

1 
	~"ty≥s.h
"

4 
	$mem£t
(*
d°
, 
c
, 
uöt
 
n
)

6 *
d
;

8 
d
 = (*)
d°
;

9 
n
-- > 0)

10 *
d
++ = 
c
;

12  
d°
;

13 
	}
}

16 
	$memcmp
(c⁄° *
v1
, c⁄° *
v2
, 
uöt
 
n
)

18 c⁄° 
uch¨
 *
s1
, *
s2
;

20 
s1
 = 
v1
;

21 
s2
 = 
v2
;

22 
n
-- > 0){

23 if(*
s1
 !*
s2
)

24  *
s1
 - *
s2
;

25 
s1
++, 
s2
++;

29 
	}
}

32 
	$memmove
(*
d°
, c⁄° *
§c
, 
uöt
 
n
)

34 c⁄° *
s
;

35 *
d
;

37 
s
 = 
§c
;

38 
d
 = 
d°
;

39 if(
s
 < 
d
 && s + 
n
 > d){

40 
s
 +
n
;

41 
d
 +
n
;

42 
n
-- > 0)

43 *--
d
 = *--
s
;

45 
n
-- > 0)

46 *
d
++ = *
s
++;

48  
d°
;

49 
	}
}

52 
	$°∫cmp
(c⁄° *
p
, c⁄° *
q
, 
uöt
 
n
)

54 
n
 > 0 && *
p
 && *∞=*
q
)

55 
n
--, 
p
++, 
q
++;

56 if(
n
 == 0)

58  (
uch¨
)*
p
 - (uch¨)*
q
;

59 
	}
}

62 
	$°∫˝y
(*
s
, c⁄° *
t
, 
n
)

64 *
os
;

66 
os
 = 
s
;

67 
n
-- > 0 && (*
s
++ = *
t
++) != 0)

69 
n
-- > 0)

70 *
s
++ = 0;

71  
os
;

72 
	}
}

76 
	$ß„°r˝y
(*
s
, c⁄° *
t
, 
n
)

78 *
os
;

80 
os
 = 
s
;

81 if(
n
 <= 0)

82  
os
;

83 --
n
 > 0 && (*
s
++ = *
t
++) != 0)

85 *
s
 = 0;

86  
os
;

87 
	}
}

90 
	$°æí
(c⁄° *
s
)

92 
n
;

94 
n
 = 0; 
s
[n];Ç++)

96  
n
;

97 
	}
}

	@swtch.S

1 #void 
swtch
(
c⁄ãxt
 *
ﬁd
, c⁄ãxà*
√w
);

2 #
#Savê
cuºít
 
c⁄ãxt
 
ö
 
ﬁd


3 #™d 
thí
 
lﬂd
 
c⁄ãxt
 
‰om
 
√w
.

5 .
globl
 
swtch


6 
	gswtch
:

7 #Savê
ﬁd
 
ªgi°îs


8 
movl
 4(%
e•
), %
óx


10 
	gp›l
 0(%
	góx
Ë#%
eù


11 
	gmovl
 %
	ge•
, 4(%
	góx
)

12 
	gmovl
 %
	gebx
, 8(%
	góx
)

13 
	gmovl
 %
	gecx
, 12(%
	góx
)

14 
	gmovl
 %
	gedx
, 16(%
	góx
)

15 
	gmovl
 %
	gesi
, 20(%
	góx
)

16 
	gmovl
 %
	gedi
, 24(%
	góx
)

17 
	gmovl
 %
	gebp
, 28(%
	góx
)

19 #Lﬂd 
√w
 
ªgi°îs


20 
	gmovl
 4(%
	ge•
), %
	góx
 #nŸ 8(%e•Ë- 
p›≥d
  
addªss
 
above


22 
	gmovl
 28(%
	góx
), %
ebp


23 
	gmovl
 24(%
	góx
), %
edi


24 
	gmovl
 20(%
	góx
), %
esi


25 
	gmovl
 16(%
	góx
), %
edx


26 
	gmovl
 12(%
	góx
), %
ecx


27 
	gmovl
 8(%
	góx
), %
ebx


28 
	gmovl
 4(%
	góx
), %
e•


29 
	gpushl
 0(%
	góx
Ë#%
eù


31 
	gªt


	@syscall.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"¥oc.h
"

6 
	~"x86.h
"

7 
	~"sysˇŒ.h
"

17 
	$„tchöt
(
¥oc
 *
p
, 
uöt
 
addr
, *
ù
)

19 if(
addr
 >
p
->
sz
 ||áddr+4 >Ö->sz)

21 *
ù
 = *(*)(
p
->
mem
 + 
addr
);

23 
	}
}

29 
	$„tch°r
(
¥oc
 *
p
, 
uöt
 
addr
, **
µ
)

31 *
s
, *
ï
;

33 if(
addr
 >
p
->
sz
)

35 *
µ
 = 
p
->
mem
 + 
addr
;

36 
ï
 = 
p
->
mem
 +Ö->
sz
;

37 
s
 = *
µ
; s < 
ï
; s++)

38 if(*
s
 == 0)

39  
s
 - *
µ
;

41 
	}
}

45 
	$¨göt
(
n
, *
ù
)

47  
	`„tchöt
(
˝
, cp->
tf
->
e•
 + 4 + 4*
n
, 
ù
);

48 
	}
}

54 
	$¨g±r
(
n
, **
µ
, 
size
)

56 
i
;

58 if(
	`¨göt
(
n
, &
i
) < 0)

60 if((
uöt
)
i
 >
˝
->
sz
 || (uöt)i+
size
 >= cp->sz)

62 *
µ
 = 
˝
->
mem
 + 
i
;

64 
	}
}

71 
	$¨g°r
(
n
, **
µ
)

73 
addr
;

74 if(
	`¨göt
(
n
, &
addr
) < 0)

76  
	`„tch°r
(
˝
, 
addr
, 
µ
);

77 
	}
}

79 
sys_chdú
();

80 
sys_˛o£
();

81 
sys_dup
();

82 
sys_exec
();

83 
sys_exô
();

84 
sys_f‹k
();

85 
sys_f°©
();

86 
sys_gëpid
();

87 
sys_kûl
();

88 
sys_lök
();

89 
sys_mkdú
();

90 
sys_mknod
();

91 
sys_›í
();

92 
sys_pùe
();

93 
sys_ªad
();

94 
sys_sbrk
();

95 
sys_¶ìp
();

96 
sys_u∆ök
();

97 
sys_waô
();

98 
sys_wrôe
();

100 (*
sysˇŒs
[])() = {

101 [
SYS_chdú
] 
sys_chdú
,

102 [
SYS_˛o£
] 
sys_˛o£
,

103 [
SYS_dup
] 
sys_dup
,

104 [
SYS_exec
] 
sys_exec
,

105 [
SYS_exô
] 
sys_exô
,

106 [
SYS_f‹k
] 
sys_f‹k
,

107 [
SYS_f°©
] 
sys_f°©
,

108 [
SYS_gëpid
] 
sys_gëpid
,

109 [
SYS_kûl
] 
sys_kûl
,

110 [
SYS_lök
] 
sys_lök
,

111 [
SYS_mkdú
] 
sys_mkdú
,

112 [
SYS_mknod
] 
sys_mknod
,

113 [
SYS_›í
] 
sys_›í
,

114 [
SYS_pùe
] 
sys_pùe
,

115 [
SYS_ªad
] 
sys_ªad
,

116 [
SYS_sbrk
] 
sys_sbrk
,

117 [
SYS_¶ìp
] 
sys_¶ìp
,

118 [
SYS_u∆ök
] 
sys_u∆ök
,

119 [
SYS_waô
] 
sys_waô
,

120 [
SYS_wrôe
] 
sys_wrôe
,

121 
	}
};

124 
	$sysˇŒ
()

126 
num
;

128 
num
 = 
˝
->
tf
->
óx
;

129 if(
num
 >0 &&Çum < 
	`NELEM
(
sysˇŒs
) && syscalls[num])

130 
˝
->
tf
->
óx
 = 
sysˇŒs
[
num
]();

132 
	`˝rötf
("%d %s: unknown sys call %d\n",

133 
˝
->
pid
, cp->
«me
, 
num
);

134 
˝
->
tf
->
óx
 = -1;

136 
	}
}

	@syscall.h

2 
	#SYS_f‹k
 1

	)

3 
	#SYS_exô
 2

	)

4 
	#SYS_waô
 3

	)

5 
	#SYS_pùe
 4

	)

6 
	#SYS_wrôe
 5

	)

7 
	#SYS_ªad
 6

	)

8 
	#SYS_˛o£
 7

	)

9 
	#SYS_kûl
 8

	)

10 
	#SYS_exec
 9

	)

11 
	#SYS_›í
 10

	)

12 
	#SYS_mknod
 11

	)

13 
	#SYS_u∆ök
 12

	)

14 
	#SYS_f°©
 13

	)

15 
	#SYS_lök
 14

	)

16 
	#SYS_mkdú
 15

	)

17 
	#SYS_chdú
 16

	)

18 
	#SYS_dup
 17

	)

19 
	#SYS_gëpid
 18

	)

20 
	#SYS_sbrk
 19

	)

21 
	#SYS_¶ìp
 20

	)

	@sysfile.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"°©.h
"

5 
	~"mmu.h
"

6 
	~"¥oc.h
"

7 
	~"fs.h
"

8 
	~"fsv¨.h
"

9 
	~"fûe.h
"

10 
	~"f˙é.h
"

15 
	$¨gfd
(
n
, *
pfd
, 
fûe
 **
pf
)

17 
fd
;

18 
fûe
 *
f
;

20 if(
	`¨göt
(
n
, &
fd
) < 0)

22 if(
fd
 < 0 || fd >
NOFILE
 || (
f
=
˝
->
ofûe
[fd]) == 0)

24 if(
pfd
)

25 *
pfd
 = 
fd
;

26 if(
pf
)

27 *
pf
 = 
f
;

29 
	}
}

34 
	$fdÆloc
(
fûe
 *
f
)

36 
fd
;

38 
fd
 = 0; fd < 
NOFILE
; fd++){

39 if(
˝
->
ofûe
[
fd
] == 0){

40 
˝
->
ofûe
[
fd
] = 
f
;

41  
fd
;

45 
	}
}

48 
	$sys_ªad
()

50 
fûe
 *
f
;

51 
n
;

52 *
p
;

54 if(
	`¨gfd
(0, 0, &
f
Ë< 0 || 
	`¨göt
(2, &
n
Ë< 0 || 
	`¨g±r
(1, &
p
,Ç) < 0)

56  
	`fûîód
(
f
, 
p
, 
n
);

57 
	}
}

60 
	$sys_wrôe
()

62 
fûe
 *
f
;

63 
n
;

64 *
p
;

66 if(
	`¨gfd
(0, 0, &
f
Ë< 0 || 
	`¨göt
(2, &
n
Ë< 0 || 
	`¨g±r
(1, &
p
,Ç) < 0)

68  
	`fûewrôe
(
f
, 
p
, 
n
);

69 
	}
}

72 
	$sys_dup
()

74 
fûe
 *
f
;

75 
fd
;

77 if(
	`¨gfd
(0, 0, &
f
) < 0)

79 if((
fd
=
	`fdÆloc
(
f
)) < 0)

81 
	`fûedup
(
f
);

82  
fd
;

83 
	}
}

86 
	$sys_˛o£
()

88 
fd
;

89 
fûe
 *
f
;

91 if(
	`¨gfd
(0, &
fd
, &
f
) < 0)

93 
˝
->
ofûe
[
fd
] = 0;

94 
	`fûe˛o£
(
f
);

96 
	}
}

99 
	$sys_f°©
()

101 
fûe
 *
f
;

102 
°©
 *
°
;

104 if(
	`¨gfd
(0, 0, &
f
Ë< 0 || 
	`¨g±r
(1, (*)&
°
, (*st)) < 0)

106  
	`fûe°©
(
f
, 
°
);

107 
	}
}

111 
	$sys_lök
()

113 
«me
[
DIRSIZ
], *
√w
, *
ﬁd
;

114 
öode
 *
dp
, *
ù
;

116 if(
	`¨g°r
(0, &
ﬁd
Ë< 0 ||árg°r(1, &
√w
) < 0)

118 if((
ù
 = 
	`«mei
(
ﬁd
)) == 0)

120 
	`ûock
(
ù
);

121 if(
ù
->
ty≥
 =
T_DIR
){

122 
	`iu∆ockput
(
ù
);

125 
ù
->
∆ök
++;

126 
	`iupd©e
(
ù
);

127 
	`iu∆ock
(
ù
);

129 if((
dp
 = 
	`«meù¨ít
(
√w
, 
«me
)) == 0)

130 
bad
;

131 
	`ûock
(
dp
);

132 if(
dp
->
dev
 !
ù
->dev || 
	`dúlök
(dp, 
«me
, ip->
öum
) < 0)

133 
bad
;

134 
	`iu∆ockput
(
dp
);

135 
	`ùut
(
ù
);

138 
bad
:

139 if(
dp
)

140 
	`iu∆ockput
(
dp
);

141 
	`ûock
(
ù
);

142 
ù
->
∆ök
--;

143 
	`iupd©e
(
ù
);

144 
	`iu∆ockput
(
ù
);

146 
	}
}

150 
	$isdúem±y
(
öode
 *
dp
)

152 
off
;

153 
dúít
 
de
;

155 
off
=2*(
de
); off<
dp
->
size
; off+=(de)){

156 if(
	`ªadi
(
dp
, (*)&
de
, 
off
, (de)) != (de))

157 
	`∑nic
("isdirempty:Ñeadi");

158 if(
de
.
öum
 != 0)

162 
	}
}

165 
	$sys_u∆ök
()

167 
öode
 *
ù
, *
dp
;

168 
dúít
 
de
;

169 
«me
[
DIRSIZ
], *
∑th
;

170 
uöt
 
off
;

172 if(
	`¨g°r
(0, &
∑th
) < 0)

174 if((
dp
 = 
	`«meù¨ít
(
∑th
, 
«me
)) == 0)

176 
	`ûock
(
dp
);

179 if(
	`«mecmp
(
«me
, ".") == 0 ||Çamecmp(name, "..") == 0){

180 
	`iu∆ockput
(
dp
);

184 if((
ù
 = 
	`dúlookup
(
dp
, 
«me
, &
off
)) == 0){

185 
	`iu∆ockput
(
dp
);

188 
	`ûock
(
ù
);

190 if(
ù
->
∆ök
 < 1)

191 
	`∑nic
("unlink:Çlink < 1");

192 if(
ù
->
ty≥
 =
T_DIR
 && !
	`isdúem±y
(ip)){

193 
	`iu∆ockput
(
ù
);

194 
	`iu∆ockput
(
dp
);

198 
	`mem£t
(&
de
, 0, (de));

199 if(
	`wrôei
(
dp
, (*)&
de
, 
off
, (de)) != (de))

200 
	`∑nic
("unlink: writei");

201 
	`iu∆ockput
(
dp
);

203 
ù
->
∆ök
--;

204 
	`iupd©e
(
ù
);

205 
	`iu∆ockput
(
ù
);

207 
	}
}

209 
öode
*

210 
	$¸óã
(*
∑th
, 
ˇ√xi°
, 
ty≥
, 
maj‹
, 
mö‹
)

212 
uöt
 
off
;

213 
öode
 *
ù
, *
dp
;

214 
«me
[
DIRSIZ
];

216 if((
dp
 = 
	`«meù¨ít
(
∑th
, 
«me
)) == 0)

218 
	`ûock
(
dp
);

220 if(
ˇ√xi°
 && (
ù
 = 
	`dúlookup
(
dp
, 
«me
, &
off
)) != 0){

221 
	`iu∆ockput
(
dp
);

222 
	`ûock
(
ù
);

223 if(
ù
->
ty≥
 !ty≥ || ip->
maj‹
 !maj‹ || ip->
mö‹
 != minor){

224 
	`iu∆ockput
(
ù
);

227  
ù
;

230 if((
ù
 = 
	`üŒoc
(
dp
->
dev
, 
ty≥
)) == 0){

231 
	`iu∆ockput
(
dp
);

234 
	`ûock
(
ù
);

235 
ù
->
maj‹
 = major;

236 
ù
->
mö‹
 = minor;

237 
ù
->
∆ök
 = 1;

238 
	`iupd©e
(
ù
);

240 if(
	`dúlök
(
dp
, 
«me
, 
ù
->
öum
) < 0){

241 
ù
->
∆ök
 = 0;

242 
	`iu∆ockput
(
ù
);

243 
	`iu∆ockput
(
dp
);

247 if(
ty≥
 =
T_DIR
){

248 
dp
->
∆ök
++;

249 
	`iupd©e
(
dp
);

251 if(
	`dúlök
(
ù
, ".", ip->
öum
Ë< 0 || dúlök(ù, "..", 
dp
->inum) < 0)

252 
	`∑nic
("create dots");

254 
	`iu∆ockput
(
dp
);

255  
ù
;

256 
	}
}

259 
	$sys_›í
()

261 *
∑th
;

262 
fd
, 
omode
;

263 
fûe
 *
f
;

264 
öode
 *
ù
;

266 if(
	`¨g°r
(0, &
∑th
Ë< 0 || 
	`¨göt
(1, &
omode
) < 0)

269 if(
omode
 & 
O_CREATE
){

270 if((
ù
 = 
	`¸óã
(
∑th
, 1, 
T_FILE
, 0, 0)) == 0)

273 if((
ù
 = 
	`«mei
(
∑th
)) == 0)

275 
	`ûock
(
ù
);

276 if(
ù
->
ty≥
 =
T_DIR
 && (
omode
 & (
O_RDWR
|
O_WRONLY
))){

277 
	`iu∆ockput
(
ù
);

282 if((
f
 = 
	`fûóŒoc
()Ë=0 || (
fd
 = 
	`fdÆloc
(f)) < 0){

283 if(
f
)

284 
	`fûe˛o£
(
f
);

285 
	`iu∆ockput
(
ù
);

288 
	`iu∆ock
(
ù
);

290 
f
->
ty≥
 = 
FD_INODE
;

291 
f
->
ù
 = ip;

292 
f
->
off
 = 0;

293 
f
->
ªadabÀ
 = !(
omode
 & 
O_WRONLY
);

294 
f
->
wrôabÀ
 = (
omode
 & 
O_WRONLY
Ë|| (omodê& 
O_RDWR
);

296  
fd
;

297 
	}
}

300 
	$sys_mknod
()

302 
öode
 *
ù
;

303 *
∑th
;

304 
Àn
;

305 
maj‹
, 
mö‹
;

307 if((
Àn
=
	`¨g°r
(0, &
∑th
)) < 0 ||

308 
	`¨göt
(1, &
maj‹
) < 0 ||

309 
	`¨göt
(2, &
mö‹
) < 0 ||

310 (
ù
 = 
	`¸óã
(
∑th
, 0, 
T_DEV
, 
maj‹
, 
mö‹
)) == 0)

312 
	`iu∆ockput
(
ù
);

314 
	}
}

317 
	$sys_mkdú
()

319 *
∑th
;

320 
öode
 *
ù
;

322 if(
	`¨g°r
(0, &
∑th
Ë< 0 || (
ù
 = 
	`¸óã
’©h, 0, 
T_DIR
, 0, 0)) == 0)

324 
	`iu∆ockput
(
ù
);

326 
	}
}

329 
	$sys_chdú
()

331 *
∑th
;

332 
öode
 *
ù
;

334 if(
	`¨g°r
(0, &
∑th
Ë< 0 || (
ù
 = 
	`«mei
(path)) == 0)

336 
	`ûock
(
ù
);

337 if(
ù
->
ty≥
 !
T_DIR
){

338 
	`iu∆ockput
(
ù
);

341 
	`iu∆ock
(
ù
);

342 
	`ùut
(
˝
->
cwd
);

343 
˝
->
cwd
 = 
ù
;

345 
	}
}

348 
	$sys_exec
()

350 *
∑th
, *
¨gv
[20];

351 
i
;

352 
uöt
 
u¨gv
, 
u¨g
;

354 if(
	`¨g°r
(0, &
∑th
Ë< 0 || 
	`¨göt
(1, (*)&
u¨gv
) < 0)

356 
	`mem£t
(
¨gv
, 0, (argv));

357 
i
=0;; i++){

358 if(
i
 >
	`NELEM
(
¨gv
))

360 if(
	`„tchöt
(
˝
, 
u¨gv
+4*
i
, (*)&
u¨g
) < 0)

362 if(
u¨g
 == 0){

363 
¨gv
[
i
] = 0;

366 if(
	`„tch°r
(
˝
, 
u¨g
, &
¨gv
[
i
]) < 0)

369  
	`exec
(
∑th
, 
¨gv
);

370 
	}
}

373 
	$sys_pùe
()

375 *
fd
;

376 
fûe
 *
rf
, *
wf
;

377 
fd0
, 
fd1
;

379 if(
	`¨g±r
(0, (*)&
fd
, 2*(fd[0])) < 0)

381 if(
	`pùóŒoc
(&
rf
, &
wf
) < 0)

383 
fd0
 = -1;

384 if((
fd0
 = 
	`fdÆloc
(
rf
)Ë< 0 || (
fd1
 = fdÆloc(
wf
)) < 0){

385 if(
fd0
 >= 0)

386 
˝
->
ofûe
[
fd0
] = 0;

387 
	`fûe˛o£
(
rf
);

388 
	`fûe˛o£
(
wf
);

391 
fd
[0] = 
fd0
;

392 
fd
[1] = 
fd1
;

394 
	}
}

	@sysproc.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"¥oc.h
"

6 
	~"•ölock.h
"

7 
	~"sched.h
"

10 
	$sys_f‹k
()

12 
pid
;

13 
¥oc
 *
≈
;

15 if((
≈
 = 
	`c›y¥oc
(
˝
)) == 0){

16 
	`˝rötf
("sysfork failed here\n");

19 
	`acquúe
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

20 
pid
 = 
≈
->pid;

21 
≈
->
°©e
 = 
RUNNABLE
;

22 
	`íqueue_¥oc
(
˝us
[
	`˝u
()].
rq
, 
≈
);

23 
	`ªÀa£
(&(
˝us
[
	`˝u
()].
rq
->
rq_lock
));

24  
pid
;

25 
	}
}

28 
	$sys_exô
()

30 
	`exô
();

32 
	}
}

35 
	$sys_waô
()

37  
	`waô
();

38 
	}
}

41 
	$sys_kûl
()

43 
pid
;

45 if(
	`¨göt
(0, &
pid
) < 0)

47  
	`kûl
(
pid
);

48 
	}
}

51 
	$sys_gëpid
()

53  
˝
->
pid
;

54 
	}
}

57 
	$sys_sbrk
()

59 
addr
;

60 
n
;

62 if(
	`¨göt
(0, &
n
) < 0)

64 if((
addr
 = 
	`grow¥oc
(
n
)) < 0)

66  
addr
;

67 
	}
}

70 
	$sys_¶ìp
()

72 
n
, 
ticks0
;

74 if(
	`¨göt
(0, &
n
) < 0)

76 
	`acquúe
(&
tick¶ock
);

77 
ticks0
 = 
ticks
;

78 
ticks
 - 
ticks0
 < 
n
){

79 if(
˝
->
kûÀd
){

80 
	`ªÀa£
(&
tick¶ock
);

83 
	`¶ìp
(&
ticks
, &
tick¶ock
);

85 
	`ªÀa£
(&
tick¶ock
);

87 
	}
}

	@timer.c

5 
	~"ty≥s.h
"

6 
	~"defs.h
"

7 
	~"å≠s.h
"

8 
	~"x86.h
"

10 
	#IO_TIMER1
 0x040

11 

	)

16 
	#TIMER_FREQ
 1193182

	)

17 
	#TIMER_DIV
(
x
Ë((
TIMER_FREQ
+(x)/2)/(x))

	)

19 
	#TIMER_MODE
 (
IO_TIMER1
 + 3)

20 
	#TIMER_SEL0
 0x00

21 
	#TIMER_RATEGEN
 0x04

22 
	#TIMER_16BIT
 0x30

23 

	)

25 
	$timî_öô
()

28 
	`outb
(
TIMER_MODE
, 
TIMER_SEL0
 | 
TIMER_RATEGEN
 | 
TIMER_16BIT
);

29 
	`outb
(
IO_TIMER1
, 
	`TIMER_DIV
(100) % 256);

30 
	`outb
(
IO_TIMER1
, 
	`TIMER_DIV
(100) / 256);

31 
	`pic_íabÀ
(
IRQ_TIMER
);

32 
	}
}

	@trap.c

1 
	~"ty≥s.h
"

2 
	~"defs.h
"

3 
	~"∑øm.h
"

4 
	~"mmu.h
"

5 
	~"¥oc.h
"

6 
	~"x86.h
"

7 
	~"å≠s.h
"

8 
	~"•ölock.h
"

9 
	~"sysˇŒ.h
"

10 
	~"rq.h
"

11 
	~"pm≠.h
"

12 
	~"memœyout.h
"

17 
g©edesc
 
	gidt
[256];

18 
uöt
 
ve˘‹s
[];

19 
•ölock
 
	gtick¶ock
;

20 
	gticks
;

23 
	$tvöô
()

25 
i
;

27 
i
 = 0; i < 256; i++)

28 
	`SETGATE
(
idt
[
i
], 0, 
SEG_KCODE
<<3, 
ve˘‹s
[i], 0);

29 
	`SETGATE
(
idt
[
T_SYSCALL
], 1, 
SEG_KCODE
<<3, 
ve˘‹s
[T_SYSCALL], 
DPL_USER
);

31 
	`öôlock
(&
tick¶ock
, "time");

32 
	}
}

35 
	$idtöô
()

37 
	`lidt
(
idt
, (idt));

38 
	}
}

41 c⁄° *
	$å≠«me
(
å≠no
)

43 c⁄° * c⁄° 
ex˙ames
[] = {

66 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

67  
ex˙ames
[
å≠no
];

68 i‡(
å≠no
 =
T_SYSCALL
)

70 i‡(
å≠no
 >
IRQ_OFFSET
 &&Årapno < IRQ_OFFSET + 16)

73 
	}
}

77 
	$¥öt_å≠‰ame
(
å≠‰ame
 *
tf
)

79 
	`˝rötf
("TRAP fømê© %p\n", 
tf
);

81 
	`˝rötf
("Édò 0x%x\n", 
tf
->
edi
);

82 
	`˝rötf
("Ésò 0x%x\n", 
tf
->
esi
);

83 
	`˝rötf
("Éb∞ 0x%x\n", 
tf
->
ebp
);

84 
	`˝rötf
(" oe• 0x%x\n", 
tf
->
€•
);

85 
	`˝rötf
("Ébx 0x%x\n", 
tf
->
ebx
);

86 
	`˝rötf
("Édx 0x%x\n", 
tf
->
edx
);

87 
	`˝rötf
("Écx 0x%x\n", 
tf
->
ecx
);

88 
	`˝rötf
("Éax 0x%x\n", 
tf
->
óx
);

90 
	`˝rötf
("É† 0x----%x\n", 
tf
->
es
);

91 
	`˝rötf
(" d† 0x----%x\n", 
tf
->
ds
);

92 
	`˝rötf
("Åø∞0x%x %s\n", 
tf
->
å≠no
, 
	`å≠«me
(tf->trapno));

93 
	`˝rötf
("Éº 0x%x\n", 
tf
->
îr
);

94 
	`˝rötf
("Éù 0x%x\n", 
tf
->
eù
);

95 
	`˝rötf
(" c† 0x----%x\n", 
tf
->
cs
);

96 
	`˝rötf
(" fœg 0x%x\n", 
tf
->
eÊags
);

97 
	`˝rötf
("É• 0x%x\n", 
tf
->
e•
);

98 
	`˝rötf
(" s† 0x----%x\n", 
tf
->
ss
);

99 
	}
}

102 
	$å≠
(
å≠‰ame
 *
tf
)

105 i‡(
˝
!=
NULL
)

106 
	`dbmsg
("å≠ fømê‰om %x %x, c∞«mê%s\n",
tf
->
eù
,Åf->
å≠no
,
˝
->
«me
);

107 if(
tf
->
å≠no
 =
T_SYSCALL
){

108 if(
˝
->
kûÀd
)

109 
	`exô
();

110 
˝
->
tf
 =Åf;

111 
	`sysˇŒ
();

112 if(
˝
->
kûÀd
)

113 
	`exô
();

117 
tf
->
å≠no
){

118 
	`˝rötf
("öãºu± %x,Åø∞‰amê: %x\n",
tf
->
å≠no
, (
uöt
)tf);

119 
IRQ_OFFSET
 + 
IRQ_TIMER
:

120 if(
	`˝u
() == 0){

121 
	`acquúe
(&
tick¶ock
);

122 
ticks
++;

123 
	`wakeup
(&
ticks
);

124 
	`ªÀa£
(&
tick¶ock
);

126 
	`œpic_eoi
();

128 
IRQ_OFFSET
 + 
IRQ_IDE
:

129 
	`ide_öå
();

130 
	`œpic_eoi
();

132 
IRQ_OFFSET
 + 
IRQ_KBD
:

133 
	`kbd_öå
();

134 
	`œpic_eoi
();

136 
IRQ_OFFSET
 + 
IRQ_SPURIOUS
:

137 
	`˝rötf
("cpu%d: spurious interruptát %x:%x\n",

138 
	`˝u
(), 
tf
->
cs
,Åf->
eù
);

139 
	`œpic_eoi
();

143 if(
˝
 =0 || (
tf
->
cs
&3) == 0){

145 
	`˝rötf
("unexpectedÅrap %d from cpu %dÉip %xÉsp %x cr2 %x,Öid %d %s \n",

146 
tf
->
å≠no
, 
	`˝u
(),Åf->
eù
,Åf->
e•
, 
	`r¸2
(),
˝
->
pid
, cp->
«me
);

147 
	`∑nic
("trap");

150 
	`˝rötf
("pid %d %s:Årap %dÉrr %d on cpu %dÉip %x cr2 %x -- killÖroc\n",

151 
˝
->
pid
, cp->
«me
, 
tf
->
å≠no
,Åf->
îr
, 
	`˝u
(),Åf->
eù
, 
	`r¸2
());

152 
˝
->
kûÀd
 = 1;

158 if(
˝
 && cp->
kûÀd
 && (
tf
->
cs
&3Ë=
DPL_USER
)

159 
	`exô
();

163 if(
˝
 && cp->
°©e
 =
RUNNING
 && 
tf
->
å≠no
 =
IRQ_OFFSET
+
IRQ_TIMER
){

164 #ifde‡
LOAD_BALANCE_ON


165 if(
˝
 =
idÀ¥oc
[
	`˝u
()]){

166 
rq
*Ñq = 
˝us
[
	`˝u
()].rq;

167 
rq
->
sched_˛ass
->
	`lﬂd_bÆ™˚
(rq);

170 
	`¥oc_tick
(
˝us
[
	`˝u
()].
rq
, 
˝
);

172 
	}
}

	@trapasm.S

1 .
	gãxt


3 .
£t
 
	gSEG_KDATA_SEL
, 0x10 #£À˘‹ 
	gSEG_KDATA


5 #ve˘‹s.
S
 
£nds
 
Æl
 
å≠s
 
hîe
.

6 .
globl
 
Æ…øps


7 
	gÆ…øps
:

8 #Buûd 
å≠
 
‰ame
.

9 
pushl
 %
ds


10 
pushl
 %
es


11 
pushÆ


13 #Së 
up
 
d©a
 
£gmíts
.

14 
movl
 
$SEG_KDATA_SEL
, %
óx


15 
	gmovw
 %
	gax
,%
ds


16 
	gmovw
 %
	gax
,%
	ges


18 #CÆ»
å≠
(
tf
), 
whîe
Åf=%
e•


19 
	gpushl
 %
e•


20 
ˇŒ
 
å≠


21 
addl
 
	g$4
, %
	ge•


23 #Rëu∫ 
ÁŒs
 
through
 
to
 
å≠ªt
...

24 .
globl
 
å≠ªt


25 
	gå≠ªt
:

26 
p›Æ


27 
p›l
 %
es


28 
p›l
 %
ds


29 
addl
 
$0x8
, %
	ge•
 #å≠nÿ
™d
 
îrcode


30 
	gúë


32 #A 
f‹ked
 
¥o˚ss
 
swôches
 
to
 
u£r
 
mode
 
by
 
ˇŒög


33 #f‹kªt1(
tf
), 
whîe
Å‡
is
 
the
 
å≠
 
‰ame
 
to
 
u£
.

34 .
globl
 
f‹kªt1


35 
	gf‹kªt1
:

36 
movl
 4(%
e•
), %esp

37 
jmp
 
	gå≠ªt


	@traps.h

4 
	#T_DIVIDE
 0

5 
	#T_DEBUG
 1

6 
	#T_NMI
 2

7 
	#T_BRKPT
 3

8 
	#T_OFLOW
 4

9 
	#T_BOUND
 5

10 
	#T_ILLOP
 6

11 
	#T_DEVICE
 7

12 
	#T_DBLFLT
 8

14 
	#T_TSS
 10

15 
	#T_SEGNP
 11

16 
	#T_STACK
 12

17 
	#T_GPFLT
 13

18 
	#T_PGFLT
 14

20 
	#T_FPERR
 16

21 
	#T_ALIGN
 17

22 
	#T_MCHK
 18

23 
	#T_SIMDERR
 19

24 

	)

27 
	#T_SYSCALL
 48

28 
	#T_DEFAULT
 500

29 

	)

30 
	#IRQ_OFFSET
 32

31 

	)

32 
	#IRQ_TIMER
 0

	)

33 
	#IRQ_KBD
 1

	)

34 
	#IRQ_IDE
 14

	)

35 
	#IRQ_ERROR
 19

	)

36 
	#IRQ_SPURIOUS
 31

	)

	@types.h

1 #i‚de‡
_TYPES_H_


2 
	#_TYPES_H_


	)

3 
	tuöt
;

4 
	tuöt32_t
;

5 
	tush‹t
;

6 
	tuch¨
;

7 
uöt
 
	tpde_t
;

8 
uöt
 
	t±e_t
;

9 
uöt
 
	tvaddr_t
;

10 
uöt
 
	t∑ddr_t
;

14 
	#ROUNDDOWN
(
a
,
n
) \

16 
uöt
 
__a
 = (uöt)(
a
); \

17 (
	`ty≥of
(
a
))(
__a
 - __®% (
n
)); \

18 })

	)

21 
	#ROUNDUP
(
a
, 
n
) \

23 
uöt
 
__n
 = (uötË(
n
); \

24 (
	`ty≥of
(
a
)Ë(
	`ROUNDDOWN
((
uöt
Ë◊Ë+ 
__n
 - 1, __n)); \

25 })

	)

	@ulib.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"f˙é.h
"

4 
	~"u£r.h
"

7 
	$°r˝y
(*
s
, *
t
)

9 *
os
;

11 
os
 = 
s
;

12 (*
s
++ = *
t
++) != 0)

14  
os
;

15 
	}
}

18 
	$°rcmp
(c⁄° *
p
, c⁄° *
q
)

20 *
p
 && *∞=*
q
)

21 
p
++, 
q
++;

22  (
uch¨
)*
p
 - (uch¨)*
q
;

23 
	}
}

25 
uöt


26 
	$°æí
(*
s
)

28 
n
;

30 
n
 = 0; 
s
[n];Ç++)

32  
n
;

33 
	}
}

36 
	$mem£t
(*
d°
, 
c
, 
uöt
 
n
)

38 *
d
;

40 
d
 = 
d°
;

41 
n
-- > 0)

42 *
d
++ = 
c
;

43  
d°
;

44 
	}
}

47 
	$°rchr
(c⁄° *
s
, 
c
)

49 ; *
s
; s++)

50 if(*
s
 =
c
)

51  (*Ë
s
;

53 
	}
}

56 
	$gës
(*
buf
, 
max
)

58 
i
, 
cc
;

59 
c
;

61 
i
=0; i+1 < 
max
; ){

62 
cc
 = 
	`ªad
(0, &
c
, 1);

63 if(
cc
 < 1)

65 
buf
[
i
++] = 
c
;

66 if(
c
 == '\n' || c == '\r')

69 
buf
[
i
] = '\0';

70  
buf
;

71 
	}
}

74 
	$°©
(*
n
, 
°©
 *
°
)

76 
fd
;

77 
r
;

79 
fd
 = 
	`›í
(
n
, 
O_RDONLY
);

80 if(
fd
 < 0)

82 
r
 = 
	`f°©
(
fd
, 
°
);

83 
	`˛o£
(
fd
);

84  
r
;

85 
	}
}

88 
	$©oi
(c⁄° *
s
)

90 
n
;

92 
n
 = 0;

93 '0' <*
s
 && *s <= '9')

94 
n
 =Ç*10 + *
s
++ - '0';

95  
n
;

96 
	}
}

99 
	$memmove
(*
vd°
, *
v§c
, 
n
)

101 *
d°
, *
§c
;

103 
d°
 = 
vd°
;

104 
§c
 = 
v§c
;

105 
n
-- > 0)

106 *
d°
++ = *
§c
++;

107  
vd°
;

108 
	}
}

	@umalloc.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

4 
	~"∑øm.h
"

9 
	tAlign
;

11 
	uhódî
 {

13 
hódî
 *
	m±r
;

14 
uöt
 
	msize
;

15 } 
	ms
;

16 
Align
 
	mx
;

19 
hódî
 
	tHódî
;

21 
Hódî
 
	gba£
;

22 
Hódî
 *
	g‰ìp
;

25 
	$‰ì
(*
≠
)

27 
Hódî
 *
bp
, *
p
;

29 
bp
 = (
Hódî
*Ë
≠
 - 1;

30 
p
 = 
‰ìp
; !(
bp
 >Ö && b∞<Ö->
s
.
±r
);Ö =Ö->s.ptr)

31 if(
p
 >p->
s
.
±r
 && (
bp
 >Ö || bp <Ö->s.ptr))

33 if(
bp
 + bp->
s
.
size
 =
p
->s.
±r
){

34 
bp
->
s
.
size
 +
p
->s.
±r
->s.size;

35 
bp
->
s
.
±r
 = 
p
->s.ptr->s.ptr;

37 
bp
->
s
.
±r
 = 
p
->s.ptr;

38 if(
p
 +Ö->
s
.
size
 =
bp
){

39 
p
->
s
.
size
 +
bp
->s.size;

40 
p
->
s
.
±r
 = 
bp
->s.ptr;

42 
p
->
s
.
±r
 = 
bp
;

43 
‰ìp
 = 
p
;

44 
	}
}

46 
Hódî
*

47 
	$m‹ec‹e
(
uöt
 
nu
)

49 *
p
;

50 
Hódî
 *
hp
;

52 if(
nu
 < 
PAGE
)

53 
nu
 = 
PAGE
;

54 
p
 = 
	`sbrk
(
nu
 * (
Hódî
));

55 if(
p
 == (*) -1)

57 
hp
 = (
Hódî
*)
p
;

58 
hp
->
s
.
size
 = 
nu
;

59 
	`‰ì
((*)(
hp
 + 1));

60  
‰ìp
;

61 
	}
}

64 
	$mÆloc
(
uöt
 
nbyãs
)

66 
Hódî
 *
p
, *
¥evp
;

67 
uöt
 
nunôs
;

69 
nunôs
 = (
nbyãs
 + (
Hódî
) - 1)/(Header) + 1;

70 if((
¥evp
 = 
‰ìp
) == 0){

71 
ba£
.
s
.
±r
 = 
‰ìp
 = 
¥evp
 = &base;

72 
ba£
.
s
.
size
 = 0;

74 
p
 = 
¥evp
->
s
.
±r
; ;Örevp =Ö,Ö =Ö->s.ptr){

75 if(
p
->
s
.
size
 >
nunôs
){

76 if(
p
->
s
.
size
 =
nunôs
)

77 
¥evp
->
s
.
±r
 = 
p
->s.ptr;

79 
p
->
s
.
size
 -
nunôs
;

80 
p
 +p->
s
.
size
;

81 
p
->
s
.
size
 = 
nunôs
;

83 
‰ìp
 = 
¥evp
;

84  (*Ë(
p
 + 1);

86 if(
p
 =
‰ìp
)

87 if((
p
 = 
	`m‹ec‹e
(
nunôs
)) == 0)

90 
	}
}

	@user.h

1 
	g°©
;

4 
f‹k
();

5 
	$exô
(Ë
	`__©åibuã__
((
n‹ëu∫
));

6 
	`waô
();

7 
	`pùe
(*);

8 
	`wrôe
(, *, );

9 
	`ªad
(, *, );

10 
	`˛o£
();

11 
	`kûl
();

12 
	`exec
(*, **);

13 
	`›í
(*, );

14 
	`mknod
(*, , );

15 
	`u∆ök
(*);

16 
	`f°©
(
fd
, 
°©
*);

17 
	`lök
(*, *);

18 
	`mkdú
(*);

19 
	`chdú
(*);

20 
	`dup
();

21 
	`gëpid
();

22 * 
	`sbrk
();

23 
	`¶ìp
();

26 
	`°©
(*, 
°©
*);

27 * 
	`°r˝y
(*, *);

28 *
	`memmove
(*, *, );

29 * 
	`°rchr
(c⁄° *, 
c
);

30 
	`°rcmp
(const *, const *);

31 
	`¥ötf
(, *, ...);

32 * 
	`gës
(*, 
max
);

33 
uöt
 
	`°æí
(*);

34 * 
	`mem£t
(*, , 
uöt
);

35 * 
	`mÆloc
(
uöt
);

36 
	`‰ì
(*);

37 
	`©oi
(const *);

	@usertests.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

4 
	~"fs.h
"

5 
	~"f˙é.h
"

7 
	gbuf
[2048];

8 
	g«me
[3];

9 *
	gecho_¨gs
[] = { "echo", "ALL", "TESTS", "PASSED", 0 };

10 *
	gˇt_¨gs
[] = { "cat", "README", 0 };

11 
	g°dout
 = 1;

16 
	$›íã°
()

18 
fd
;

20 
	`¥ötf
(
°dout
, "openÅest\n");

21 
fd
 = 
	`›í
("echo", 0);

22 if(
fd
 < 0){

23 
	`¥ötf
(
°dout
, "openÉcho failed!\n");

24 
	`exô
();

26 
	`˛o£
(
fd
);

27 
fd
 = 
	`›í
("doesnotexist", 0);

28 if(
fd
 >= 0){

29 
	`¥ötf
(
°dout
, "open doesnotexist succeeded!\n");

30 
	`exô
();

32 
	`¥ötf
(
°dout
, "openÅest ok\n");

33 
	}
}

36 
	$wrôëe°
()

38 
fd
;

39 
i
;

41 
	`¥ötf
(
°dout
, "small fileÅest\n");

42 
fd
 = 
	`›í
("smÆl", 
O_CREATE
|
O_RDWR
);

43 if(
fd
 >= 0){

44 
	`¥ötf
(
°dout
, "creat small succeeded; ok\n");

46 
	`¥ötf
(
°dout
, "error: creat small failed!\n");

47 
	`exô
();

49 
i
 = 0; i < 100; i++) {

50 if(
	`wrôe
(
fd
, "aaaaaaaaaa", 10) != 10) {

51 
	`¥ötf
(
°dout
, "îr‹: wrôêØ %dÇew fûêÁûed\n", 
i
);

52 
	`exô
();

54 if(
	`wrôe
(
fd
, "bbbbbbbbbb", 10) != 10) {

55 
	`¥ötf
(
°dout
, "îr‹: wrôêbb %dÇew fûêÁûed\n", 
i
);

56 
	`exô
();

59 
	`¥ötf
(
°dout
, "writes ok\n");

60 
	`˛o£
(
fd
);

61 
fd
 = 
	`›í
("smÆl", 
O_RDONLY
);

62 if(
fd
 >= 0){

63 
	`¥ötf
(
°dout
, "open small succeeded ok\n");

65 
	`¥ötf
(
°dout
, "error: open small failed!\n");

66 
	`exô
();

68 
i
 = 
	`ªad
(
fd
, 
buf
, 2000);

69 if(
i
 == 2000) {

70 
	`¥ötf
(
°dout
, "read succeeded ok\n");

72 
	`¥ötf
(
°dout
, "read failed\n");

73 
	`exô
();

75 
	`˛o£
(
fd
);

77 if(
	`u∆ök
("small") < 0) {

78 
	`¥ötf
(
°dout
, "unlink small failed\n");

79 
	`exô
();

81 
	`¥ötf
(
°dout
, "small fileÅest ok\n");

82 
	}
}

85 
	$wrôëe°1
()

87 
i
, 
fd
, 
n
;

89 
	`¥ötf
(
°dout
, "big filesÅest\n");

91 
fd
 = 
	`›í
("big", 
O_CREATE
|
O_RDWR
);

92 if(
fd
 < 0){

93 
	`¥ötf
(
°dout
, "error: creat big failed!\n");

94 
	`exô
();

97 
i
 = 0; i < 
MAXFILE
; i++) {

98 ((*Ë
buf
)[0] = 
i
;

99 if(
	`wrôe
(
fd
, 
buf
, 512) != 512) {

100 
	`¥ötf
(
°dout
, "îr‹: wrôêbig fûêÁûed\n", 
i
);

101 
	`exô
();

105 
	`˛o£
(
fd
);

107 
fd
 = 
	`›í
("big", 
O_RDONLY
);

108 if(
fd
 < 0){

109 
	`¥ötf
(
°dout
, "error: open big failed!\n");

110 
	`exô
();

113 
n
 = 0;

115 
i
 = 
	`ªad
(
fd
, 
buf
, 512);

116 if(
i
 == 0) {

117 if(
n
 =
MAXFILE
 - 1) {

118 
	`¥ötf
(
°dout
, "ªad o∆y %d block†‰om big", 
n
);

119 
	`exô
();

122 } if(
i
 != 512) {

123 
	`¥ötf
(
°dout
, "ªad faûed %d\n", 
i
);

124 
	`exô
();

126 if(((*)
buf
)[0] !
n
) {

127 
	`¥ötf
(
°dout
, "read content of block %d is %d\n",

128 
n
, ((*)
buf
)[0]);

129 
	`exô
();

131 
n
++;

133 
	`˛o£
(
fd
);

134 if(
	`u∆ök
("big") < 0) {

135 
	`¥ötf
(
°dout
, "unlink big failed\n");

136 
	`exô
();

138 
	`¥ötf
(
°dout
, "big files ok\n");

139 
	}
}

142 
	$¸óãã°
()

144 
i
, 
fd
;

146 
	`¥ötf
(
°dout
, "many creates, followed by unlinkÅest\n");

148 
«me
[0] = 'a';

149 
«me
[2] = '\0';

150 
i
 = 0; i < 52; i++) {

151 
«me
[1] = '0' + 
i
;

152 
fd
 = 
	`›í
(
«me
, 
O_CREATE
|
O_RDWR
);

153 
	`˛o£
(
fd
);

155 
«me
[0] = 'a';

156 
«me
[2] = '\0';

157 
i
 = 0; i < 52; i++) {

158 
«me
[1] = '0' + 
i
;

159 
	`u∆ök
(
«me
);

161 
	`¥ötf
(
°dout
, "many creates, followed by unlink; ok\n");

162 
	}
}

164 
	$dúã°
()

166 
	`¥ötf
(
°dout
, "mkdirÅest\n");

168 if(
	`mkdú
("dir0") < 0) {

169 
	`¥ötf
(
°dout
, "mkdir failed\n");

170 
	`exô
();

173 if(
	`chdú
("dir0") < 0) {

174 
	`¥ötf
(
°dout
, "chdir dir0 failed\n");

175 
	`exô
();

178 if(
	`chdú
("..") < 0) {

179 
	`¥ötf
(
°dout
, "chdir .. failed\n");

180 
	`exô
();

183 if(
	`u∆ök
("dir0") < 0) {

184 
	`¥ötf
(
°dout
, "unlink dir0 failed\n");

185 
	`exô
();

187 
	`¥ötf
(
°dout
, "mkdirÅest\n");

188 
	}
}

191 
	$exe˘e°
()

193 
	`¥ötf
(
°dout
, "execÅest\n");

194 if(
	`exec
("echo", 
echo_¨gs
) < 0) {

195 
	`¥ötf
(
°dout
, "execÉcho failed\n");

196 
	`exô
();

198 
	}
}

203 
	$pùe1
()

205 
fds
[2], 
pid
;

206 
£q
, 
i
, 
n
, 
cc
, 
tŸÆ
;

208 if(
	`pùe
(
fds
) != 0){

209 
	`¥ötf
(1, "pipe() failed\n");

210 
	`exô
();

212 
pid
 = 
	`f‹k
();

213 
£q
 = 0;

214 if(
pid
 == 0){

215 
	`˛o£
(
fds
[0]);

216 
n
 = 0;Ç < 5;Ç++){

217 
i
 = 0; i < 1033; i++)

218 
buf
[
i
] = 
£q
++;

219 if(
	`wrôe
(
fds
[1], 
buf
, 1033) != 1033){

220 
	`¥ötf
(1, "pipe1 oops 1\n");

221 
	`exô
();

224 
	`exô
();

225 } if(
pid
 > 0){

226 
	`˛o£
(
fds
[1]);

227 
tŸÆ
 = 0;

228 
cc
 = 1;

229 (
n
 = 
	`ªad
(
fds
[0], 
buf
, 
cc
)) > 0){

230 
i
 = 0; i < 
n
; i++){

231 if((
buf
[
i
] & 0xffË!(
£q
++ & 0xff)){

232 
	`¥ötf
(1, "pipe1 oops 2\n");

236 
tŸÆ
 +
n
;

237 
cc
 = cc * 2;

238 if(
cc
 > (
buf
))

239 
cc
 = (
buf
);

241 if(
tŸÆ
 != 5 * 1033)

242 
	`¥ötf
(1, "pùe1 o›†3ÅŸÆ %d\n", 
tŸÆ
);

243 
	`˛o£
(
fds
[0]);

244 
	`waô
();

246 
	`¥ötf
(1, "fork() failed\n");

247 
	`exô
();

249 
	`¥ötf
(1, "pipe1 ok\n");

250 
	}
}

254 
	$¥ìm±
()

256 
pid1
, 
pid2
, 
pid3
;

257 
pfds
[2];

259 
	`¥ötf
(1, "preempt: ");

260 
pid1
 = 
	`f‹k
();

261 if(
pid1
 == 0)

265 
pid2
 = 
	`f‹k
();

266 if(
pid2
 == 0)

270 
	`pùe
(
pfds
);

271 
pid3
 = 
	`f‹k
();

272 if(
pid3
 == 0){

273 
	`˛o£
(
pfds
[0]);

274 if(
	`wrôe
(
pfds
[1], "x", 1) != 1)

275 
	`¥ötf
(1, "preempt writeÉrror");

276 
	`˛o£
(
pfds
[1]);

281 
	`˛o£
(
pfds
[1]);

282 if(
	`ªad
(
pfds
[0], 
buf
, (buf)) != 1){

283 
	`¥ötf
(1, "preemptÑeadÉrror");

286 
	`˛o£
(
pfds
[0]);

287 
	`¥ötf
(1, "kill... ");

288 
	`kûl
(
pid1
);

289 
	`kûl
(
pid2
);

290 
	`kûl
(
pid3
);

291 
	`¥ötf
(1, "wait... ");

292 
	`waô
();

293 
	`waô
();

294 
	`waô
();

295 
	`¥ötf
(1, "preempt ok\n");

296 
	}
}

300 
	$exôwaô
()

302 
i
, 
pid
;

304 
i
 = 0; i < 100; i++){

305 
pid
 = 
	`f‹k
();

306 if(
pid
 < 0){

307 
	`¥ötf
(1, "fork failed\n");

310 if(
pid
){

311 if(
	`waô
(Ë!
pid
){

312 
	`¥ötf
(1, "wait wrongÖid\n");

316 
	`exô
();

319 
	`¥ötf
(1, "exitwait ok\n");

320 
	}
}

323 
	$mem
()

325 *
m1
, *
m2
;

326 
pid
;

328 if((
pid
 = 
	`f‹k
()) == 0){

329 
m1
 = 0;

330 (
m2
 = 
	`mÆloc
(10001)) != 0) {

331 *(**Ë
m2
 = 
m1
;

332 
m1
 = 
m2
;

334 
m1
) {

335 
m2
 = *(**)
m1
;

336 
	`‰ì
(
m1
);

337 
m1
 = 
m2
;

339 
m1
 = 
	`mÆloc
(1024*20);

340 if(
m1
 == 0) {

341 
	`¥ötf
(1, "couldn'tállocate mem?!!\n");

342 
	`exô
();

344 
	`‰ì
(
m1
);

345 
	`¥ötf
(1, "mem ok\n");

346 
	`exô
();

348 
	`waô
();

350 
	}
}

357 
	$sh¨edfd
()

359 
fd
, 
pid
, 
i
, 
n
, 
nc
, 
≈
;

360 
buf
[10];

362 
	`u∆ök
("sharedfd");

363 
fd
 = 
	`›í
("sh¨edfd", 
O_CREATE
|
O_RDWR
);

364 if(
fd
 < 0){

365 
	`¥ötf
(1, "fstests: cannot open sharedfd for writing");

368 
pid
 = 
	`f‹k
();

369 
	`mem£t
(
buf
, 
pid
==0?'c':'p', (buf));

370 
i
 = 0; i < 1000; i++){

371 if(
	`wrôe
(
fd
, 
buf
, (buf)) != (buf)){

372 
	`¥ötf
(1, "fstests: write sharedfd failed\n");

376 if(
pid
 == 0)

377 
	`exô
();

379 
	`waô
();

380 
	`˛o£
(
fd
);

381 
fd
 = 
	`›í
("sharedfd", 0);

382 if(
fd
 < 0){

383 
	`¥ötf
(1, "fstests: cannot open sharedfd forÑeading\n");

386 
nc
 = 
≈
 = 0;

387 (
n
 = 
	`ªad
(
fd
, 
buf
, (buf))) > 0){

388 
i
 = 0; i < (
buf
); i++){

389 if(
buf
[
i
] == 'c')

390 
nc
++;

391 if(
buf
[
i
] == 'p')

392 
≈
++;

395 
	`˛o£
(
fd
);

396 
	`u∆ök
("sharedfd");

397 if(
nc
 =10000 && 
≈
 == 10000)

398 
	`¥ötf
(1, "sharedfd ok\n");

400 
	`¥ötf
(1, "sh¨edfd o›†%d %d\n", 
nc
, 
≈
);

401 
	}
}

406 
	$twofûes
()

408 
fd
, 
pid
, 
i
, 
j
, 
n
, 
tŸÆ
;

409 *
‚ame
;

411 
	`¥ötf
(1, "twofilesÅest\n");

413 
	`u∆ök
("f1");

414 
	`u∆ök
("f2");

416 
pid
 = 
	`f‹k
();

417 if(
pid
 < 0){

418 
	`¥ötf
(1, "fork failed\n");

422 
‚ame
 = 
pid
 ? "f1" : "f2";

423 
fd
 = 
	`›í
(
‚ame
, 
O_CREATE
 | 
O_RDWR
);

424 if(
fd
 < 0){

425 
	`¥ötf
(1, "create failed\n");

426 
	`exô
();

429 
	`mem£t
(
buf
, 
pid
?'p':'c', 512);

430 
i
 = 0; i < 12; i++){

431 if((
n
 = 
	`wrôe
(
fd
, 
buf
, 500)) != 500){

432 
	`¥ötf
(1, "wrôêÁûed %d\n", 
n
);

433 
	`exô
();

436 
	`˛o£
(
fd
);

437 if(
pid
)

438 
	`waô
();

440 
	`exô
();

442 
i
 = 0; i < 2; i++){

443 
fd
 = 
	`›í
(
i
?"f1":"f2", 0);

444 
tŸÆ
 = 0;

445 (
n
 = 
	`ªad
(
fd
, 
buf
, (buf))) > 0){

446 
j
 = 0; j < 
n
; j++){

447 if(
buf
[
j
] !(
i
?'p':'c')){

448 
	`¥ötf
(1, "wrong char\n");

449 
	`exô
();

452 
tŸÆ
 +
n
;

454 
	`˛o£
(
fd
);

455 if(
tŸÆ
 != 12*500){

456 
	`¥ötf
(1, "wr⁄gÜígth %d\n", 
tŸÆ
);

457 
	`exô
();

461 
	`u∆ök
("f1");

462 
	`u∆ök
("f2");

464 
	`¥ötf
(1, "twofiles ok\n");

465 
	}
}

469 
	$¸óãdñëe
()

471 íum { 
N
 = 20 };

472 
pid
, 
i
, 
fd
;

473 
«me
[32];

475 
	`¥ötf
(1, "createdeleteÅest\n");

476 
pid
 = 
	`f‹k
();

477 if(
pid
 < 0){

478 
	`¥ötf
(1, "fork failed\n");

479 
	`exô
();

482 
«me
[0] = 
pid
 ? 'p' : 'c';

483 
«me
[2] = '\0';

484 
i
 = 0; i < 
N
; i++){

485 
«me
[1] = '0' + 
i
;

486 
fd
 = 
	`›í
(
«me
, 
O_CREATE
 | 
O_RDWR
);

487 if(
fd
 < 0){

488 
	`¥ötf
(1, "create failed\n");

489 
	`exô
();

491 
	`˛o£
(
fd
);

492 if(
i
 > 0 && (i % 2 ) == 0){

493 
«me
[1] = '0' + (
i
 / 2);

494 if(
	`u∆ök
(
«me
) < 0){

495 
	`¥ötf
(1, "unlink failed\n");

496 
	`exô
();

501 if(
pid
==0)

502 
	`exô
();

504 
	`waô
();

506 
i
 = 0; i < 
N
; i++){

507 
«me
[0] = 'p';

508 
«me
[1] = '0' + 
i
;

509 
fd
 = 
	`›í
(
«me
, 0);

510 if((
i
 =0 || i >
N
/2Ë&& 
fd
 < 0){

511 
	`¥ötf
(1, "o›†¸óãdñëê%†didn'àexi°\n", 
«me
);

512 
	`exô
();

513 } if((
i
 >1 && i < 
N
/2Ë&& 
fd
 >= 0){

514 
	`¥ötf
(1, "o›†¸óãdñëê%†didÉxi°\n", 
«me
);

515 
	`exô
();

517 if(
fd
 >= 0)

518 
	`˛o£
(
fd
);

520 
«me
[0] = 'c';

521 
«me
[1] = '0' + 
i
;

522 
fd
 = 
	`›í
(
«me
, 0);

523 if((
i
 =0 || i >
N
/2Ë&& 
fd
 < 0){

524 
	`¥ötf
(1, "o›†¸óãdñëê%†didn'àexi°\n", 
«me
);

525 
	`exô
();

526 } if((
i
 >1 && i < 
N
/2Ë&& 
fd
 >= 0){

527 
	`¥ötf
(1, "o›†¸óãdñëê%†didÉxi°\n", 
«me
);

528 
	`exô
();

530 if(
fd
 >= 0)

531 
	`˛o£
(
fd
);

534 
i
 = 0; i < 
N
; i++){

535 
«me
[0] = 'p';

536 
«me
[1] = '0' + 
i
;

537 
	`u∆ök
(
«me
);

538 
«me
[0] = 'c';

539 
	`u∆ök
(
«me
);

542 
	`¥ötf
(1, "createdelete ok\n");

543 
	}
}

547 
	$u∆ökªad
()

549 
fd
, 
fd1
;

551 
	`¥ötf
(1, "unlinkreadÅest\n");

552 
fd
 = 
	`›í
("u∆ökªad", 
O_CREATE
 | 
O_RDWR
);

553 if(
fd
 < 0){

554 
	`¥ötf
(1, "create unlinkread failed\n");

555 
	`exô
();

557 
	`wrôe
(
fd
, "hello", 5);

558 
	`˛o£
(
fd
);

560 
fd
 = 
	`›í
("u∆ökªad", 
O_RDWR
);

561 if(
fd
 < 0){

562 
	`¥ötf
(1, "open unlinkread failed\n");

563 
	`exô
();

565 if(
	`u∆ök
("unlinkread") != 0){

566 
	`¥ötf
(1, "unlink unlinkread failed\n");

567 
	`exô
();

570 
fd1
 = 
	`›í
("u∆ökªad", 
O_CREATE
 | 
O_RDWR
);

571 
	`wrôe
(
fd1
, "yyy", 3);

572 
	`˛o£
(
fd1
);

574 if(
	`ªad
(
fd
, 
buf
, (buf)) != 5){

575 
	`¥ötf
(1, "unlinkreadÑead failed");

576 
	`exô
();

578 if(
buf
[0] != 'h'){

579 
	`¥ötf
(1, "unlinkread wrong data\n");

580 
	`exô
();

582 if(
	`wrôe
(
fd
, 
buf
, 10) != 10){

583 
	`¥ötf
(1, "unlinkread write failed\n");

584 
	`exô
();

586 
	`˛o£
(
fd
);

587 
	`u∆ök
("unlinkread");

588 
	`¥ötf
(1, "unlinkread ok\n");

589 
	}
}

592 
	$lökã°
()

594 
fd
;

596 
	`¥ötf
(1, "linktest\n");

598 
	`u∆ök
("lf1");

599 
	`u∆ök
("lf2");

601 
fd
 = 
	`›í
("lf1", 
O_CREATE
|
O_RDWR
);

602 if(
fd
 < 0){

603 
	`¥ötf
(1, "createÜf1 failed\n");

604 
	`exô
();

606 if(
	`wrôe
(
fd
, "hello", 5) != 5){

607 
	`¥ötf
(1, "writeÜf1 failed\n");

608 
	`exô
();

610 
	`˛o£
(
fd
);

612 if(
	`lök
("lf1", "lf2") < 0){

613 
	`¥ötf
(1, "linkÜf1Üf2 failed\n");

614 
	`exô
();

616 
	`u∆ök
("lf1");

618 if(
	`›í
("lf1", 0) >= 0){

619 
	`¥ötf
(1, "unlinkedÜf1 but it is stillÅhere!\n");

620 
	`exô
();

623 
fd
 = 
	`›í
("lf2", 0);

624 if(
fd
 < 0){

625 
	`¥ötf
(1, "openÜf2 failed\n");

626 
	`exô
();

628 if(
	`ªad
(
fd
, 
buf
, (buf)) != 5){

629 
	`¥ötf
(1, "readÜf2 failed\n");

630 
	`exô
();

632 
	`˛o£
(
fd
);

634 if(
	`lök
("lf2", "lf2") >= 0){

635 
	`¥ötf
(1, "linkÜf2Üf2 succeeded! oops\n");

636 
	`exô
();

639 
	`u∆ök
("lf2");

640 if(
	`lök
("lf2", "lf1") >= 0){

641 
	`¥ötf
(1, "linkÇon-existant succeeded! oops\n");

642 
	`exô
();

645 if(
	`lök
(".", "lf1") >= 0){

646 
	`¥ötf
(1, "link .Üf1 succeeded! oops\n");

647 
	`exô
();

650 
	`¥ötf
(1, "linktest ok\n");

651 
	}
}

655 
	$c⁄¸óã
()

657 
fûe
[3];

658 
i
, 
pid
, 
n
, 
fd
;

659 
Á
[40];

661 
ush‹t
 
öum
;

662 
«me
[14];

663 } 
de
;

665 
	`¥ötf
(1, "concreateÅest\n");

666 
fûe
[0] = 'C';

667 
fûe
[2] = '\0';

668 
i
 = 0; i < 40; i++){

669 
fûe
[1] = '0' + 
i
;

670 
	`u∆ök
(
fûe
);

671 
pid
 = 
	`f‹k
();

672 if(
pid
 && (
i
 % 3) == 1){

673 
	`lök
("C0", 
fûe
);

674 } if(
pid
 =0 && (
i
 % 5) == 1){

675 
	`lök
("C0", 
fûe
);

677 
fd
 = 
	`›í
(
fûe
, 
O_CREATE
 | 
O_RDWR
);

678 if(
fd
 < 0){

679 
	`¥ötf
(1, "c⁄¸óã cª©ê%†Áûed\n", 
fûe
);

680 
	`exô
();

682 
	`˛o£
(
fd
);

684 if(
pid
 == 0)

685 
	`exô
();

687 
	`waô
();

690 
	`mem£t
(
Á
, 0, (fa));

691 
fd
 = 
	`›í
(".", 0);

692 
n
 = 0;

693 
	`ªad
(
fd
, &
de
, (de)) > 0){

694 if(
de
.
öum
 == 0)

696 if(
de
.
«me
[0] == 'C' && de.name[2] == '\0'){

697 
i
 = 
de
.
«me
[1] - '0';

698 if(
i
 < 0 || i >(
Á
)){

699 
	`¥ötf
(1, "c⁄¸óã weúd fûê%s\n", 
de
.
«me
);

700 
	`exô
();

702 if(
Á
[
i
]){

703 
	`¥ötf
(1, "c⁄¸óã du∂iˇã fûê%s\n", 
de
.
«me
);

704 
	`exô
();

706 
Á
[
i
] = 1;

707 
n
++;

710 
	`˛o£
(
fd
);

712 if(
n
 != 40){

713 
	`¥ötf
(1, "concreateÇotÉnough files in directoryÜisting\n");

714 
	`exô
();

717 
i
 = 0; i < 40; i++){

718 
fûe
[1] = '0' + 
i
;

719 
pid
 = 
	`f‹k
();

720 if(
pid
 < 0){

721 
	`¥ötf
(1, "fork failed\n");

722 
	`exô
();

724 if(((
i
 % 3Ë=0 && 
pid
 == 0) ||

725 ((
i
 % 3Ë=1 && 
pid
 != 0)){

726 
fd
 = 
	`›í
(
fûe
, 0);

727 
	`˛o£
(
fd
);

729 
	`u∆ök
(
fûe
);

731 if(
pid
 == 0)

732 
	`exô
();

734 
	`waô
();

737 
	`¥ötf
(1, "concreate ok\n");

738 
	}
}

742 
	$bigdú
()

744 
i
, 
fd
;

745 
«me
[10];

747 
	`¥ötf
(1, "bigdirÅest\n");

748 
	`u∆ök
("bd");

750 
fd
 = 
	`›í
("bd", 
O_CREATE
);

751 if(
fd
 < 0){

752 
	`¥ötf
(1, "bigdir create failed\n");

753 
	`exô
();

755 
	`˛o£
(
fd
);

757 
i
 = 0; i < 500; i++){

758 
«me
[0] = 'x';

759 
«me
[1] = '0' + (
i
 / 64);

760 
«me
[2] = '0' + (
i
 % 64);

761 
«me
[3] = '\0';

762 if(
	`lök
("bd", 
«me
) != 0){

763 
	`¥ötf
(1, "bigdirÜink failed\n");

764 
	`exô
();

768 
	`u∆ök
("bd");

769 
i
 = 0; i < 500; i++){

770 
«me
[0] = 'x';

771 
«me
[1] = '0' + (
i
 / 64);

772 
«me
[2] = '0' + (
i
 % 64);

773 
«me
[3] = '\0';

774 if(
	`u∆ök
(
«me
) != 0){

775 
	`¥ötf
(1, "bigdir unlink failed");

776 
	`exô
();

780 
	`¥ötf
(1, "bigdir ok\n");

781 
	}
}

784 
	$subdú
()

786 
fd
, 
cc
;

788 
	`¥ötf
(1, "subdirÅest\n");

790 
	`u∆ök
("ff");

791 if(
	`mkdú
("dd") != 0){

792 
	`¥ötf
(1, "subdir mkdir dd failed\n");

793 
	`exô
();

796 
fd
 = 
	`›í
("dd/ff", 
O_CREATE
 | 
O_RDWR
);

797 if(
fd
 < 0){

798 
	`¥ötf
(1, "create dd/ff failed\n");

799 
	`exô
();

801 
	`wrôe
(
fd
, "ff", 2);

802 
	`˛o£
(
fd
);

804 if(
	`u∆ök
("dd") >= 0){

805 
	`¥ötf
(1, "unlink dd (non-empty dir) succeeded!\n");

806 
	`exô
();

809 if(
	`mkdú
("/dd/dd") != 0){

810 
	`¥ötf
(1, "subdir mkdir dd/dd failed\n");

811 
	`exô
();

814 
fd
 = 
	`›í
("dd/dd/ff", 
O_CREATE
 | 
O_RDWR
);

815 if(
fd
 < 0){

816 
	`¥ötf
(1, "create dd/dd/ff failed\n");

817 
	`exô
();

819 
	`wrôe
(
fd
, "FF", 2);

820 
	`˛o£
(
fd
);

822 
fd
 = 
	`›í
("dd/dd/../ff", 0);

823 if(
fd
 < 0){

824 
	`¥ötf
(1, "open dd/dd/../ff failed\n");

825 
	`exô
();

827 
cc
 = 
	`ªad
(
fd
, 
buf
, (buf));

828 if(
cc
 !2 || 
buf
[0] != 'f'){

829 
	`¥ötf
(1, "dd/dd/../ff wrong content\n");

830 
	`exô
();

832 
	`˛o£
(
fd
);

834 if(
	`lök
("dd/dd/ff", "dd/dd/ffff") != 0){

835 
	`¥ötf
(1, "link dd/dd/ff dd/dd/ffff failed\n");

836 
	`exô
();

839 if(
	`u∆ök
("dd/dd/ff") != 0){

840 
	`¥ötf
(1, "unlink dd/dd/ff failed\n");

841 
	`exô
();

843 if(
	`›í
("dd/dd/ff", 
O_RDONLY
) >= 0){

844 
	`¥ötf
(1, "open (unlinked) dd/dd/ff succeeded\n");

845 
	`exô
();

848 if(
	`chdú
("dd") != 0){

849 
	`¥ötf
(1, "chdir dd failed\n");

850 
	`exô
();

852 if(
	`chdú
("dd/../../dd") != 0){

853 
	`¥ötf
(1, "chdir dd/../../dd failed\n");

854 
	`exô
();

856 if(
	`chdú
("dd/../../../dd") != 0){

857 
	`¥ötf
(1, "chdir dd/../../dd failed\n");

858 
	`exô
();

860 if(
	`chdú
("./..") != 0){

861 
	`¥ötf
(1, "chdir ./.. failed\n");

862 
	`exô
();

865 
fd
 = 
	`›í
("dd/dd/ffff", 0);

866 if(
fd
 < 0){

867 
	`¥ötf
(1, "open dd/dd/ffff failed\n");

868 
	`exô
();

870 if(
	`ªad
(
fd
, 
buf
, (buf)) != 2){

871 
	`¥ötf
(1, "read dd/dd/ffff wrongÜen\n");

872 
	`exô
();

874 
	`˛o£
(
fd
);

876 if(
	`›í
("dd/dd/ff", 
O_RDONLY
) >= 0){

877 
	`¥ötf
(1, "open (unlinked) dd/dd/ff succeeded!\n");

878 
	`exô
();

881 if(
	`›í
("dd/ff/ff", 
O_CREATE
|
O_RDWR
) >= 0){

882 
	`¥ötf
(1, "create dd/ff/ff succeeded!\n");

883 
	`exô
();

885 if(
	`›í
("dd/xx/ff", 
O_CREATE
|
O_RDWR
) >= 0){

886 
	`¥ötf
(1, "create dd/xx/ff succeeded!\n");

887 
	`exô
();

889 if(
	`›í
("dd", 
O_CREATE
) >= 0){

890 
	`¥ötf
(1, "create dd succeeded!\n");

891 
	`exô
();

893 if(
	`›í
("dd", 
O_RDWR
) >= 0){

894 
	`¥ötf
(1, "open ddÑdwr succeeded!\n");

895 
	`exô
();

897 if(
	`›í
("dd", 
O_WRONLY
) >= 0){

898 
	`¥ötf
(1, "open dd wronly succeeded!\n");

899 
	`exô
();

901 if(
	`lök
("dd/ff/ff", "dd/dd/xx") == 0){

902 
	`¥ötf
(1, "link dd/ff/ff dd/dd/xx succeeded!\n");

903 
	`exô
();

905 if(
	`lök
("dd/xx/ff", "dd/dd/xx") == 0){

906 
	`¥ötf
(1, "link dd/xx/ff dd/dd/xx succeeded!\n");

907 
	`exô
();

909 if(
	`lök
("dd/ff", "dd/dd/ffff") == 0){

910 
	`¥ötf
(1, "link dd/ff dd/dd/ffff succeeded!\n");

911 
	`exô
();

913 if(
	`mkdú
("dd/ff/ff") == 0){

914 
	`¥ötf
(1, "mkdir dd/ff/ff succeeded!\n");

915 
	`exô
();

917 if(
	`mkdú
("dd/xx/ff") == 0){

918 
	`¥ötf
(1, "mkdir dd/xx/ff succeeded!\n");

919 
	`exô
();

921 if(
	`mkdú
("dd/dd/ffff") == 0){

922 
	`¥ötf
(1, "mkdir dd/dd/ffff succeeded!\n");

923 
	`exô
();

925 if(
	`u∆ök
("dd/xx/ff") == 0){

926 
	`¥ötf
(1, "unlink dd/xx/ff succeeded!\n");

927 
	`exô
();

929 if(
	`u∆ök
("dd/ff/ff") == 0){

930 
	`¥ötf
(1, "unlink dd/ff/ff succeeded!\n");

931 
	`exô
();

933 if(
	`chdú
("dd/ff") == 0){

934 
	`¥ötf
(1, "chdir dd/ff succeeded!\n");

935 
	`exô
();

937 if(
	`chdú
("dd/xx") == 0){

938 
	`¥ötf
(1, "chdir dd/xx succeeded!\n");

939 
	`exô
();

942 if(
	`u∆ök
("dd/dd/ffff") != 0){

943 
	`¥ötf
(1, "unlink dd/dd/ff failed\n");

944 
	`exô
();

946 if(
	`u∆ök
("dd/ff") != 0){

947 
	`¥ötf
(1, "unlink dd/ff failed\n");

948 
	`exô
();

950 if(
	`u∆ök
("dd") == 0){

951 
	`¥ötf
(1, "unlinkÇon-empty dd succeeded!\n");

952 
	`exô
();

954 if(
	`u∆ök
("dd/dd") < 0){

955 
	`¥ötf
(1, "unlink dd/dd failed\n");

956 
	`exô
();

958 if(
	`u∆ök
("dd") < 0){

959 
	`¥ötf
(1, "unlink dd failed\n");

960 
	`exô
();

963 
	`¥ötf
(1, "subdir ok\n");

964 
	}
}

967 
	$bigfûe
()

969 
fd
, 
i
, 
tŸÆ
, 
cc
;

971 
	`¥ötf
(1, "bigfileÅest\n");

973 
	`u∆ök
("bigfile");

974 
fd
 = 
	`›í
("bigfûe", 
O_CREATE
 | 
O_RDWR
);

975 if(
fd
 < 0){

976 
	`¥ötf
(1, "cannot create bigfile");

977 
	`exô
();

979 
i
 = 0; i < 20; i++){

980 
	`mem£t
(
buf
, 
i
, 600);

981 if(
	`wrôe
(
fd
, 
buf
, 600) != 600){

982 
	`¥ötf
(1, "write bigfile failed\n");

983 
	`exô
();

986 
	`˛o£
(
fd
);

988 
fd
 = 
	`›í
("bigfile", 0);

989 if(
fd
 < 0){

990 
	`¥ötf
(1, "cannot open bigfile\n");

991 
	`exô
();

993 
tŸÆ
 = 0;

994 
i
 = 0; ; i++){

995 
cc
 = 
	`ªad
(
fd
, 
buf
, 300);

996 if(
cc
 < 0){

997 
	`¥ötf
(1, "read bigfile failed\n");

998 
	`exô
();

1000 if(
cc
 == 0)

1002 if(
cc
 != 300){

1003 
	`¥ötf
(1, "shortÑead bigfile\n");

1004 
	`exô
();

1006 if(
buf
[0] !
i
/2 || buf[299] != i/2){

1007 
	`¥ötf
(1, "read bigfile wrong data\n");

1008 
	`exô
();

1010 
tŸÆ
 +
cc
;

1012 
	`˛o£
(
fd
);

1013 if(
tŸÆ
 != 20*600){

1014 
	`¥ötf
(1, "read bigfile wrongÅotal\n");

1015 
	`exô
();

1017 
	`u∆ök
("bigfile");

1019 
	`¥ötf
(1, "bigfileÅest ok\n");

1020 
	}
}

1023 
	$fouπìn
()

1025 
fd
;

1028 
	`¥ötf
(1, "fourteenÅest\n");

1030 if(
	`mkdú
("12345678901234") != 0){

1031 
	`¥ötf
(1, "mkdir 12345678901234 failed\n");

1032 
	`exô
();

1034 if(
	`mkdú
("12345678901234/123456789012345") != 0){

1035 
	`¥ötf
(1, "mkdir 12345678901234/123456789012345 failed\n");

1036 
	`exô
();

1038 
fd
 = 
	`›í
("123456789012345/123456789012345/123456789012345", 
O_CREATE
);

1039 if(
fd
 < 0){

1040 
	`¥ötf
(1, "create 123456789012345/123456789012345/123456789012345 failed\n");

1041 
	`exô
();

1043 
	`˛o£
(
fd
);

1044 
fd
 = 
	`›í
("12345678901234/12345678901234/12345678901234", 0);

1045 if(
fd
 < 0){

1046 
	`¥ötf
(1, "open 12345678901234/12345678901234/12345678901234 failed\n");

1047 
	`exô
();

1049 
	`˛o£
(
fd
);

1051 if(
	`mkdú
("12345678901234/12345678901234") == 0){

1052 
	`¥ötf
(1, "mkdir 12345678901234/12345678901234 succeeded!\n");

1053 
	`exô
();

1055 if(
	`mkdú
("123456789012345/12345678901234") == 0){

1056 
	`¥ötf
(1, "mkdir 12345678901234/123456789012345 succeeded!\n");

1057 
	`exô
();

1060 
	`¥ötf
(1, "fourteen ok\n");

1061 
	}
}

1064 
	$rmdŸ
()

1066 
	`¥ötf
(1, "rmdotÅest\n");

1067 if(
	`mkdú
("dots") != 0){

1068 
	`¥ötf
(1, "mkdir dots failed\n");

1069 
	`exô
();

1071 if(
	`chdú
("dots") != 0){

1072 
	`¥ötf
(1, "chdir dots failed\n");

1073 
	`exô
();

1075 if(
	`u∆ök
(".") == 0){

1076 
	`¥ötf
(1, "rm . worked!\n");

1077 
	`exô
();

1079 if(
	`u∆ök
("..") == 0){

1080 
	`¥ötf
(1, "rm .. worked!\n");

1081 
	`exô
();

1083 if(
	`chdú
("/") != 0){

1084 
	`¥ötf
(1, "chdir / failed\n");

1085 
	`exô
();

1087 if(
	`u∆ök
("dots/.") == 0){

1088 
	`¥ötf
(1, "unlink dots/. worked!\n");

1089 
	`exô
();

1091 if(
	`u∆ök
("dots/..") == 0){

1092 
	`¥ötf
(1, "unlink dots/.. worked!\n");

1093 
	`exô
();

1095 if(
	`u∆ök
("dots") != 0){

1096 
	`¥ötf
(1, "unlink dots failed!\n");

1097 
	`exô
();

1099 
	`¥ötf
(1, "rmdot ok\n");

1100 
	}
}

1103 
	$dúfûe
()

1105 
fd
;

1107 
	`¥ötf
(1, "dir vs file\n");

1109 
fd
 = 
	`›í
("dúfûe", 
O_CREATE
);

1110 if(
fd
 < 0){

1111 
	`¥ötf
(1, "create dirfile failed\n");

1112 
	`exô
();

1114 
	`˛o£
(
fd
);

1115 if(
	`chdú
("dirfile") == 0){

1116 
	`¥ötf
(1, "chdir dirfile succeeded!\n");

1117 
	`exô
();

1119 
fd
 = 
	`›í
("dirfile/xx", 0);

1120 if(
fd
 >= 0){

1121 
	`¥ötf
(1, "create dirfile/xx succeeded!\n");

1122 
	`exô
();

1124 
fd
 = 
	`›í
("dúfûe/xx", 
O_CREATE
);

1125 if(
fd
 >= 0){

1126 
	`¥ötf
(1, "create dirfile/xx succeeded!\n");

1127 
	`exô
();

1129 if(
	`mkdú
("dirfile/xx") == 0){

1130 
	`¥ötf
(1, "mkdir dirfile/xx succeeded!\n");

1131 
	`exô
();

1133 if(
	`u∆ök
("dirfile/xx") == 0){

1134 
	`¥ötf
(1, "unlink dirfile/xx succeeded!\n");

1135 
	`exô
();

1137 if(
	`lök
("README", "dirfile/xx") == 0){

1138 
	`¥ötf
(1, "linkÅo dirfile/xx succeeded!\n");

1139 
	`exô
();

1141 if(
	`u∆ök
("dirfile") != 0){

1142 
	`¥ötf
(1, "unlink dirfile failed!\n");

1143 
	`exô
();

1146 
fd
 = 
	`›í
(".", 
O_RDWR
);

1147 if(
fd
 >= 0){

1148 
	`¥ötf
(1, "open . for writing succeeded!\n");

1149 
	`exô
();

1151 
fd
 = 
	`›í
(".", 0);

1152 if(
	`wrôe
(
fd
, "x", 1) > 0){

1153 
	`¥ötf
(1, "write . succeeded!\n");

1154 
	`exô
();

1156 
	`˛o£
(
fd
);

1158 
	`¥ötf
(1, "dir vs file OK\n");

1159 
	}
}

1163 
	$úef
()

1165 
i
, 
fd
;

1167 
	`¥ötf
(1, "empty fileÇame\n");

1170 
i
 = 0; i < 50 + 1; i++){

1171 if(
	`mkdú
("irefd") != 0){

1172 
	`¥ötf
(1, "mkdir irefd failed\n");

1173 
	`exô
();

1175 if(
	`chdú
("irefd") != 0){

1176 
	`¥ötf
(1, "chdir irefd failed\n");

1177 
	`exô
();

1180 
	`mkdú
("");

1181 
	`lök
("README", "");

1182 
fd
 = 
	`›í
("", 
O_CREATE
);

1183 if(
fd
 >= 0)

1184 
	`˛o£
(
fd
);

1185 
fd
 = 
	`›í
("xx", 
O_CREATE
);

1186 if(
fd
 >= 0)

1187 
	`˛o£
(
fd
);

1188 
	`u∆ök
("xx");

1191 
	`chdú
("/");

1192 
	`¥ötf
(1, "empty fileÇame OK\n");

1193 
	}
}

1199 
	$f‹kã°
()

1201 
n
, 
pid
;

1203 
	`¥ötf
(1, "forkÅest\n");

1205 
n
=0;Ç<1000;Ç++){

1206 
pid
 = 
	`f‹k
();

1207 if(
pid
 < 0)

1209 if(
pid
 == 0)

1210 
	`exô
();

1213 if(
n
 == 1000){

1214 
	`¥ötf
(1, "fork claimedÅo work 1000Åimes!\n");

1215 
	`exô
();

1218 ; 
n
 > 0;Ç--){

1219 if(
	`waô
() < 0){

1220 
	`¥ötf
(1, "wait stoppedÉarly\n");

1221 
	`exô
();

1225 if(
	`waô
() != -1){

1226 
	`¥ötf
(1, "wait gotÅoo many\n");

1227 
	`exô
();

1230 
	`¥ötf
(1, "forkÅest OK\n");

1231 
	}
}

1234 
	$maö
(
¨gc
, *
¨gv
[])

1236 
	`¥ötf
(1, "usertests starting\n");

1238 if(
	`›í
("usertests.ran", 0) >= 0){

1239 
	`¥ötf
(1, "alreadyÑan userÅests --Ñebuild fs.img\n");

1240 
	`exô
();

1242 
	`˛o£
(
	`›í
("u£πe°s.øn", 
O_CREATE
));

1244 
	`›íã°
();

1245 
	`wrôëe°
();

1247 
	`twofûes
();

1248 
	`sh¨edfd
();

1249 
	`c⁄¸óã
();

1251 
	`lökã°
();

1252 
	`u∆ökªad
();

1254 
	`rmdŸ
();

1255 
	`fouπìn
();

1256 
	`subdú
();

1257 
	`dúfûe
();

1259 
	`exe˘e°
();

1261 
	`exô
();

1262 
	}
}

	@usys.S

1 
	~"sysˇŒ.h
"

2 
	~"å≠s.h
"

4 
	#STUB
(
«me
) \

5 .
globl
 
«me
; \

6 
«me
: \

7 
movl
 
$SYS_
 ## 
«me
, %
óx
; \

8 
$T_SYSCALL
; \

9 
ªt


	)

11 
	$STUB
(
f‹k
)

12 
	$STUB
(
exô
)

13 
	$STUB
(
waô
)

14 
	$STUB
(
pùe
)

15 
	$STUB
(
ªad
)

16 
	$STUB
(
wrôe
)

17 
	$STUB
(
˛o£
)

18 
	$STUB
(
kûl
)

19 
	$STUB
(
exec
)

20 
	$STUB
(
›í
)

21 
	$STUB
(
mknod
)

22 
	$STUB
(
u∆ök
)

23 
	$STUB
(
f°©
)

24 
	$STUB
(
lök
)

25 
	$STUB
(
mkdú
)

26 
	$STUB
(
chdú
)

27 
	$STUB
(
dup
)

28 
	$STUB
(
gëpid
)

29 
	$STUB
(
sbrk
)

30 
	`STUB
(
¶ìp
)

	@wc.c

1 
	~"ty≥s.h
"

2 
	~"°©.h
"

3 
	~"u£r.h
"

5 
	gbuf
[512];

8 
	$wc
(
fd
, *
«me
)

10 
i
, 
n
;

11 
l
, 
w
, 
c
, 
öw‹d
;

13 
l
 = 
w
 = 
c
 = 0;

14 
öw‹d
 = 0;

15 (
n
 = 
	`ªad
(
fd
, 
buf
, (buf))) > 0){

16 
i
=0; i<
n
; i++){

17 
c
++;

18 if(
buf
[
i
] == '\n')

19 
l
++;

20 if(
	`°rchr
(" \r\t\n\v", 
buf
[
i
]))

21 
öw‹d
 = 0;

22 if(!
öw‹d
){

23 
w
++;

24 
öw‹d
 = 1;

28 if(
n
 < 0){

29 
	`¥ötf
(1, "wc:ÑeadÉrror\n");

30 
	`exô
();

32 
	`¥ötf
(1, "%d %d %d %s\n", 
l
, 
w
, 
c
, 
«me
);

33 
	}
}

36 
	$maö
(
¨gc
, *
¨gv
[])

38 
fd
, 
i
;

40 if(
¨gc
 <= 1){

41 
	`wc
(0, "");

42 
	`exô
();

45 
i
 = 1; i < 
¨gc
; i++){

46 if((
fd
 = 
	`›í
(
¨gv
[
i
], 0)) < 0){

47 
	`¥ötf
(1, "ˇt: c™nŸ o≥¿%s\n", 
¨gv
[
i
]);

48 
	`exô
();

50 
	`wc
(
fd
, 
¨gv
[
i
]);

51 
	`˛o£
(
fd
);

53 
	`exô
();

54 
	}
}

	@x86.h

3 
ölöe
 
uch¨


4 
	$öb
(
ush‹t
 
p‹t
)

6 
uch¨
 
d©a
;

8 
asm
 vﬁ©ûe("ö %1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

9  
d©a
;

10 
	}
}

12 
ölöe
 

13 
	$ö¶
(
p‹t
, *
addr
, 
˙t
)

15 
asm
 volatile("cld\n\trepne\n\tinsl" :

16 "=D" (
addr
), "=c" (
˙t
) :

17 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

19 
	}
}

21 
ölöe
 

22 
	$outb
(
ush‹t
 
p‹t
, 
uch¨
 
d©a
)

24 
asm
 vﬁ©ûe("ouà%0,%1" : : "a" (
d©a
), "d" (
p‹t
));

25 
	}
}

27 
ölöe
 

28 
	$outw
(
ush‹t
 
p‹t
, ush‹à
d©a
)

30 
asm
 vﬁ©ûe("ouà%0,%1" : : "a" (
d©a
), "d" (
p‹t
));

31 
	}
}

33 
ölöe
 

34 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
)

36 
asm
 volatile("cld\n\trepne\n\toutsl" :

37 "=S" (
addr
), "=c" (
˙t
) :

38 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

40 
	}
}

42 
ölöe
 
uöt


43 
	$ªad_ebp
()

45 
uöt
 
ebp
;

47 
asm
 vﬁ©ûe("mov»%%ebp, %0" : "˜" (
ebp
));

48  
ebp
;

49 
	}
}

51 
ölöe
 
uöt


52 
	$r¸0
()

54 
uöt
 
vÆ
;

55 
asm
 vﬁ©ûe("mov»%%¸0, %0" : "Ù" (
vÆ
));

56  
vÆ
;

57 
	}
}

59 
ölöe
 

60 
	$l¸0
(
uöt
 
vÆ
)

62 
asm
 vﬁ©ûe("mov»%0, %%¸0" : : "r" (
vÆ
));

63 
	}
}

65 
ölöe
 
uöt


66 
	$r¸2
()

68 
uöt
 
vÆ
;

69 
asm
 vﬁ©ûe("mov»%%¸2, %0" : "Ù" (
vÆ
));

70  
vÆ
;

71 
	}
}

73 
ölöe
 
uöt


74 
	$r¸3
()

76 
uöt
 
vÆ
;

77 
asm
 vﬁ©ûe("mov»%%¸3, %0" : "Ù" (
vÆ
));

78  
vÆ
;

79 
	}
}

81 
ölöe
 

82 
	$l¸3
(
uöt
 
vÆ
)

84 
asm
 vﬁ©ûe("mov»%0, %%¸3" : : "r" (
vÆ
));

85 
	}
}

87 
	g£gdesc
;

89 
ölöe
 

90 
	$lgdt
(
£gdesc
 *
p
, 
size
)

92 vﬁ©ûê
ush‹t
 
pd
[3];

94 
pd
[0] = 
size
-1;

95 
pd
[1] = (
uöt
)
p
;

96 
pd
[2] = (
uöt
)
p
 >> 16;

98 
asm
 vﬁ©ûe("lgdà(%0)" : : "r" (
pd
));

99 
	}
}

101 
	gg©edesc
;

103 
ölöe
 

104 
	$lidt
(
g©edesc
 *
p
, 
size
)

106 vﬁ©ûê
ush‹t
 
pd
[3];

108 
pd
[0] = 
size
-1;

109 
pd
[1] = (
uöt
)
p
;

110 
pd
[2] = (
uöt
)
p
 >> 16;

112 
asm
 vﬁ©ûe("lidà(%0)" : : "r" (
pd
));

113 
	}
}

115 
ölöe
 

116 
	$…r
(
ush‹t
 
£l
)

118 
asm
 vﬁ©ûe("…∏%0" : : "r" (
£l
));

119 
	}
}

121 
ölöe
 
uöt


122 
	$ªad_eÊags
()

124 
uöt
 
eÊags
;

125 
asm
 vﬁ©ûe("pushÊ;Ö›»%0" : "Ù" (
eÊags
));

126  
eÊags
;

127 
	}
}

129 
ölöe
 

130 
	$wrôe_eÊags
(
uöt
 
eÊags
)

132 
asm
 vﬁ©ûe("push»%0;Ö›Ê" : : "r" (
eÊags
));

133 
	}
}

135 
ölöe
 
uöt


136 
	$xchg
(vﬁ©ûê
uöt
 *
addr
, uöà
√wvÆ
)

138 
uöt
 
ªsu…
;

141 
asm
 volatile("lock; xchgl %0, %1" :

142 "+m" (*
addr
), "˜" (
ªsu…
) :

143 "1" (
√wvÆ
) :

145  
ªsu…
;

146 
	}
}

148 
ölöe
 

149 
	$˛i
()

151 
asm
 volatile("cli");

152 
	}
}

154 
ölöe
 

155 
	$°i
()

157 
asm
 volatile("sti");

158 
	}
}

162 
	så≠‰ame
 {

164 
uöt
 
	medi
;

165 
uöt
 
	mesi
;

166 
uöt
 
	mebp
;

167 
uöt
 
	m€•
;

168 
uöt
 
	mebx
;

169 
uöt
 
	medx
;

170 
uöt
 
	mecx
;

171 
uöt
 
	móx
;

174 
ush‹t
 
	mes
;

175 
ush‹t
 
	m∑ddög1
;

176 
ush‹t
 
	mds
;

177 
ush‹t
 
	m∑ddög2
;

178 
uöt
 
	må≠no
;

181 
uöt
 
	mîr
;

182 
uöt
 
	meù
;

183 
ush‹t
 
	mcs
;

184 
ush‹t
 
	m∑ddög3
;

185 
uöt
 
	meÊags
;

188 
uöt
 
	me•
;

189 
ush‹t
 
	mss
;

190 
ush‹t
 
	m∑ddög4
;

	@zombie.c

4 
	~"ty≥s.h
"

5 
	~"°©.h
"

6 
	~"u£r.h
"

9 
	$maö
()

11 if(
	`f‹k
() > 0)

12 
	`¶ìp
(5);

13 
	`exô
();

14 
	}
}

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

295 
__THROW
 
__wur
;

300 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

415 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

416 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

417 #ifde‡
__REDIRECT


421 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

422 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

423 
__isoc99_fsˇnf
Ë
__wur
;

424 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_sˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

427 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

428 
__isoc99_ssˇnf
Ë
__THROW
;

430 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

432 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

435 
	#fsˇnf
 
__isoc99_fsˇnf


	)

436 
	#sˇnf
 
__isoc99_sˇnf


	)

437 
	#ssˇnf
 
__isoc99_ssˇnf


	)

441 
__END_NAMESPACE_STD


443 #ifdef 
__USE_ISOC99


444 
__BEGIN_NAMESPACE_C99


449 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

450 
_G_va_li°
 
__¨g
)

451 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

457 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

461 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

463 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

465 #i‡!
deföed
 
__USE_GNU
 \

466 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

467 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

468 #ifde‡
__REDIRECT


472 
	`__REDIRECT
 (
vfsˇnf
,

473 (
FILE
 *
__ª°ri˘
 
__s
,

474 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

475 
__isoc99_vfsˇnf
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

477 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

478 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

480 
	`__REDIRECT
 (
vssˇnf
,

481 (
__c⁄°
 *
__ª°ri˘
 
__s
,

482 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

483 
__isoc99_vssˇnf
)

484 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

486 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

487 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

488 
_G_va_li°
 
__¨g
Ë
__wur
;

489 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

493 
_G_va_li°
 
__¨g
Ë
__THROW
;

494 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

495 
	#vsˇnf
 
__isoc99_vsˇnf


	)

496 
	#vssˇnf
 
__isoc99_vssˇnf


	)

500 
__END_NAMESPACE_C99


504 
__BEGIN_NAMESPACE_STD


509 
	`fgëc
 (
FILE
 *
__°ªam
);

510 
	`gëc
 (
FILE
 *
__°ªam
);

516 
	`gëch¨
 ();

517 
__END_NAMESPACE_STD


521 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

523 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


528 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

529 
	`gëch¨_u∆ocked
 ();

532 #ifde‡
__USE_MISC


539 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

543 
__BEGIN_NAMESPACE_STD


551 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

558 
	`putch¨
 (
__c
);

559 
__END_NAMESPACE_STD


563 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

565 #ifde‡
__USE_MISC


572 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

575 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


580 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

581 
	`putch¨_u∆ocked
 (
__c
);

585 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

586 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

588 
	`gëw
 (
FILE
 *
__°ªam
);

591 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

595 
__BEGIN_NAMESPACE_STD


600 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

601 
__wur
;

608 *
	$gës
 (*
__s
Ë
__wur
;

609 
__END_NAMESPACE_STD


611 #ifde‡
__USE_GNU


618 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

619 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

623 #ifdef 
__USE_GNU


634 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

635 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

636 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

637 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

638 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

639 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

648 
size_t
 *
__ª°ri˘
 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 
__BEGIN_NAMESPACE_STD


658 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

664 
	`puts
 (
__c⁄°
 *
__s
);

671 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

678 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

685 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

686 
__END_NAMESPACE_STD


688 #ifde‡
__USE_GNU


695 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
);

699 #ifde‡
__USE_MISC


706 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

713 
__BEGIN_NAMESPACE_STD


718 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

723 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

728 
	`ªwöd
 (
FILE
 *
__°ªam
);

729 
__END_NAMESPACE_STD


736 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


737 #i‚de‡
__USE_FILE_OFFSET64


742 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

747 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

749 #ifde‡
__REDIRECT


750 
	`__REDIRECT
 (
f£eko
,

751 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

752 
f£eko64
);

753 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

755 
	#f£eko
 
f£eko64


	)

756 
	#·ñlo
 
·ñlo64


	)

761 
__BEGIN_NAMESPACE_STD


762 #i‚de‡
__USE_FILE_OFFSET64


767 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

772 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

774 #ifde‡
__REDIRECT


775 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

776 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

777 
	`__REDIRECT
 (
f£ços
,

778 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

780 
	#fgëpos
 
fgëpos64


	)

781 
	#f£ços
 
f£ços64


	)

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_LARGEFILE64


787 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

788 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

789 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

790 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

793 
__BEGIN_NAMESPACE_STD


795 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

797 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

799 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

800 
__END_NAMESPACE_STD


802 #ifde‡
__USE_MISC


804 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

805 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

806 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
__BEGIN_NAMESPACE_STD


815 
	`≥º‹
 (
__c⁄°
 *
__s
);

816 
__END_NAMESPACE_STD


822 
	~<bôs/sys_îæi°.h
>

825 #ifdef 
__USE_POSIX


827 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 #ifde‡
__USE_MISC


832 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

837 
deföed
 
__USE_MISC
)

842 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

848 
	`p˛o£
 (
FILE
 *
__°ªam
);

852 #ifdef 
__USE_POSIX


854 *
	$˘îmid
 (*
__s
Ë
__THROW
;

858 #ifde‡
__USE_XOPEN


860 *
	`cu£rid
 (*
__s
);

864 #ifdef 
__USE_GNU


865 
ob°ack
;

868 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

869 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

870 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

871 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

872 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

873 
_G_va_li°
 
__¨gs
)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

878 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


882 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

886 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

889 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

892 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


896 
	#__√ed_gë›t


	)

897 
	~<gë›t.h
>

902 #ifde‡
__USE_EXTERN_INLINES


903 
	~<bôs/°dio.h
>

905 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


906 
	~<bôs/°dio2.h
>

908 #ifde‡
__LDBL_COMPAT


909 
	~<bôs/°dio-ldbl.h
>

912 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

676 #ifde‡
__USE_GNU


677 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

680 
__BEGIN_NAMESPACE_STD


683 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

684 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

685 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

689 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

690 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 #ifde‡
__USE_GNU


692 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

693 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

694 
	`__n⁄nuŒ
 ((1, 4));

699 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

700 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__END_NAMESPACE_STD


703 #ifde‡
__USE_ISOC99


704 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

705 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__BEGIN_NAMESPACE_STD


713 
div_t
 
	$div
 (
__numî
, 
__díom
)

714 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

715 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

716 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_ISOC99


720 
__BEGIN_NAMESPACE_C99


721 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

722 
__díom
)

723 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

724 
__END_NAMESPACE_C99


728 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


735 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

736 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

741 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

742 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

747 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

748 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

751 #ifde‡
__USE_MISC


753 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

754 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

755 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

756 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

757 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

758 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

759 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

760 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

765 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

766 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

767 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

769 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

770 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

772 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

773 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

774 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

775 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

777 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

778 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

779 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

784 
__BEGIN_NAMESPACE_STD


787 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

790 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

794 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

798 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

799 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

801 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

802 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

803 
__THROW
;

804 
__END_NAMESPACE_STD


807 #ifde‡
__USE_SVID


812 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

816 #ifde‡
__USE_XOPEN_EXTENDED


823 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

824 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

825 **
__ª°ri˘
 
__vÆuï
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

830 #ifde‡
__USE_XOPEN


832 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 #ifde‡
__USE_XOPEN2K


840 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

843 #ifde‡
__USE_XOPEN


848 
	$gø¡±
 (
__fd
Ë
__THROW
;

852 
	$u∆ock±
 (
__fd
Ë
__THROW
;

857 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_GNU


864 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

865 
__THROW
 
	`__n⁄nuŒ
 ((2));

868 
	`gë±
 ();

871 #ifde‡
__USE_BSD


875 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/°dlib.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/°dlib-ldbl.h
>

889 #unde‡
__√ed_mÆloc_™d_ˇŒoc


891 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

386 #ifde‡
__USE_GNU


389 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

399 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

411 
	`¶ìp
 (
__£c⁄ds
);

413 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


418 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

419 
__THROW
;

426 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

435 
	`∑u£
 ();

439 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

442 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


444 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

449 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

454 #ifde‡
__USE_ATFILE


457 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

458 
__gid_t
 
__group
, 
__Êag
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

463 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

465 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


467 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

477 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

479 #ifdef 
__USE_GNU


483 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

486 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


490 *
	$gëwd
 (*
__buf
)

491 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

496 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

499 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

501 #ifde‡
__USE_GNU


504 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

508 **
__ívú⁄
;

509 #ifde‡
__USE_GNU


510 **
ívú⁄
;

516 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

517 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


522 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

523 
__THROW
;

528 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

529 
__THROW
 
	`__n⁄nuŒ
 ((1));

533 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

534 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

539 
__THROW
 
	`__n⁄nuŒ
 ((1));

543 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

544 
__THROW
 
	`__n⁄nuŒ
 ((1));

549 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

550 
__THROW
 
	`__n⁄nuŒ
 ((1));

553 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


555 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

560 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

566 
	~<bôs/c⁄‚ame.h
>

569 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

576 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

578 #ifdef 
__USE_POSIX2


580 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

585 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

588 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

592 #i‚de‡
__FAVOR_BSD


593 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

595 #ifde‡
__REDIRECT_NTH


596 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

598 
	#gëpgΩ
 
__gëpgid


	)

603 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

604 #ifde‡
__USE_XOPEN_EXTENDED


605 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

612 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

614 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


625 #i‚de‡
__FAVOR_BSD


629 
	$£çgΩ
 (Ë
__THROW
;

634 #ifde‡
__REDIRECT_NTH


635 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

637 
	#£çgΩ
 
£çgid


	)

646 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

648 #ifde‡
__USE_XOPEN_EXTENDED


650 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

654 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

657 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

660 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

663 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

668 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

670 #ifdef 
__USE_GNU


672 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

679 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

681 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


684 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

687 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


689 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

696 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

698 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


701 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

704 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


706 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

709 #ifde‡
__USE_GNU


712 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

713 
__THROW
;

717 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

718 
__THROW
;

722 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

723 
__THROW
;

727 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

728 
__THROW
;

735 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

737 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


742 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

748 *
	$ây«me
 (
__fd
Ë
__THROW
;

752 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

753 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

757 
	$ißây
 (
__fd
Ë
__THROW
;

759 #i‡
deföed
 
__USE_BSD
 \

760 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

763 
	$ây¶Ÿ
 (Ë
__THROW
;

768 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

769 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

771 #ifde‡
__USE_ATFILE


774 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

775 
__c⁄°
 *
__to
, 
__Êags
)

776 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

779 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


781 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

782 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

787 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

788 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

789 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


794 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

795 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

798 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

799 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

804 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_ATFILE


808 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

809 
__THROW
 
	`__n⁄nuŒ
 ((2));

813 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

820 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

827 *
	`gëlogö
 ();

828 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


835 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

838 #ifdef 
__USE_BSD


840 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifdef 
__USE_POSIX2


848 
	#__√ed_gë›t


	)

849 
	~<gë›t.h
>

853 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


857 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

864 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

869 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

875 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

877 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

884 
	$vh™gup
 (Ë
__THROW
;

887 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

895 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

896 
size_t
 
__off£t
, 
__sˇÀ
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

907 *
	$gëu£rshñl
 (Ë
__THROW
;

908 
	$ídu£rshñl
 (Ë
__THROW
;

909 
	$£tu£rshñl
 (Ë
__THROW
;

915 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

919 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

922 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

926 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

930 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


935 
	`fsync
 (
__fd
);

939 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


942 
	`gëho°id
 ();

945 
	$sync
 (Ë
__THROW
;

950 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

955 
	$gëdèbÀsize
 (Ë
__THROW
;

959 #i‚de‡
__USE_FILE_OFFSET64


960 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

963 #ifde‡
__REDIRECT_NTH


964 
	`__REDIRECT_NTH
 (
åunˇã
,

965 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

966 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

968 
	#åunˇã
 
åunˇã64


	)

971 #ifde‡
__USE_LARGEFILE64


972 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

978 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


981 #i‚de‡
__USE_FILE_OFFSET64


982 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

984 #ifde‡
__REDIRECT_NTH


985 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

986 
·runˇã64
Ë
__wur
;

988 
	#·runˇã
 
·runˇã64


	)

991 #ifde‡
__USE_LARGEFILE64


992 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

998 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1008 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1012 #ifde‡
__USE_MISC


1023 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1028 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1040 
	#F_ULOCK
 0

	)

1041 
	#F_LOCK
 1

	)

1042 
	#F_TLOCK
 2

	)

1043 
	#F_TEST
 3

	)

1045 #i‚de‡
__USE_FILE_OFFSET64


1046 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1048 #ifde‡
__REDIRECT


1049 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1050 
lockf64
Ë
__wur
;

1052 
	#lockf
 
lockf64


	)

1055 #ifde‡
__USE_LARGEFILE64


1056 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1061 #ifde‡
__USE_GNU


1066 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1067 (
__exãnsi⁄__
 \

1068 ({ 
__ªsu…
; \

1069 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1070 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1071 
__ªsu…
; 
	}
}))

	)

1074 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1077 
fd©async
 (
__fûdes
);

1083 #ifdef 
__USE_XOPEN


1085 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1090 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1097 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1098 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1104 #ifde‡
__USE_XOPEN


1106 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1111 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1112 
	~<bôs/uni°d.h
>

1115 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

513 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

515 
	m_CS_GNU_LIBC_VERSION
,

516 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

517 
	m_CS_GNU_LIBPTHREAD_VERSION
,

518 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

520 
	m_CS_LFS_CFLAGS
 = 1000,

521 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

522 
	m_CS_LFS_LDFLAGS
,

523 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

524 
	m_CS_LFS_LIBS
,

525 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

526 
	m_CS_LFS_LINTFLAGS
,

527 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

528 
	m_CS_LFS64_CFLAGS
,

529 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

530 
	m_CS_LFS64_LDFLAGS
,

531 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

532 
	m_CS_LFS64_LIBS
,

533 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

534 
	m_CS_LFS64_LINTFLAGS
,

535 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

537 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

538 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

539 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

540 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

541 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

542 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

543 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

544 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

545 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

546 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

547 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

548 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

549 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

550 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

551 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

552 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

553 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

554 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

555 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

556 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

557 
	m_CS_XBS5_LP64_OFF64_LIBS
,

558 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

559 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

560 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

561 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

562 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

563 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

564 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

565 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

566 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

567 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

568 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

570 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

571 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

572 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

573 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

574 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

575 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

576 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

577 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

578 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

579 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

580 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

581 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

582 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

583 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

584 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

585 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

586 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

587 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

588 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

589 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

590 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

591 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

592 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

593 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

594 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

595 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

596 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

597 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

598 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

599 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

600 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


601 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	#__STDC_IEC_559__
 1

	)

297 
	#__STDC_IEC_559_COMPLEX__
 1

	)

300 
	#__STDC_ISO_10646__
 200009L

	)

308 #unde‡
__GNU_LIBRARY__


309 
	#__GNU_LIBRARY__
 6

	)

313 
	#__GLIBC__
 2

	)

314 
	#__GLIBC_MINOR__
 9

	)

316 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

317 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

320 #i‡
deföed
 
__GNUC__
 \

321 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

322 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

323 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

324 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

328 #i‚de‡
__ASSEMBLER__


329 #i‚de‡
_SYS_CDEFS_H


330 
	~<sys/cdefs.h
>

335 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


336 
	#__USE_LARGEFILE
 1

	)

337 
	#__USE_LARGEFILE64
 1

	)

343 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

344 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

345 && 
deföed
 
	g__exã∫_ölöe


346 
	#__USE_EXTERN_INLINES
 1

	)

354 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
 (
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


844 #unde‡
__√ed_mb°©e_t


845 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

660 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

661 i‡(
execuã
) \

662 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

663 } 0)

	)

664 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

667 #ifde‡
__USE_GNU


671 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

673 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

674 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

675 *
__ˇn˚l_¨g
 = (
¨g
); \

676 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

677 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

678 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

680 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

681 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

685 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

686 dÿ{

	)

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

688 
__˛ónup_f˘_©åibuã
;

693 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

696 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

697 i‡(
execuã
) \

698 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

699 
	}
} 0)

	)

700 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

701 
__˛ónup_f˘_©åibuã
;

705 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

706 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

707 #i‚de‡
SHARED


708 
	`__©åibuã__
 ((
__wók__
))

714 
__jmp_buf_èg
;

715 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

721 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

722 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

723 
__THROW
 
	`__n⁄nuŒ
 ((1));

726 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1));

730 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

731 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

737 #ifde‡
__USE_XOPEN2K


739 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

740 
__c⁄°
 
time•ec
 *
__ª°ri˘


741 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

745 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_UNIX98


751 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

752 
__ª°ri˘
 
__muãx
,

753 *
__ª°ri˘
 
__¥io˚ûög
)

754 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

758 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 
__¥io˚ûög
,

760 *
__ª°ri˘
 
__ﬁd_˚ûög
)

761 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

765 #ifde‡
__USE_GNU


767 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

768 
__THROW
 
	`__n⁄nuŒ
 ((1));

776 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1));

780 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

784 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

785 
__ª°ri˘
 
__©å
,

786 *
__ª°ri˘
 
__psh¨ed
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

790 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

791 
__psh¨ed
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_UNIX98


796 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


797 
__©å
, *
__ª°ri˘
 
__köd
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

803 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

808 
__ª°ri˘
 
__©å
,

809 *
__ª°ri˘
 
__¥Ÿocﬁ
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

814 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

815 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1));

819 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

820 
__ª°ri˘
 
__©å
,

821 *
__ª°ri˘
 
__¥io˚ûög
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

825 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

826 
__¥io˚ûög
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_GNU


832 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

833 *
__robu°√ss
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

837 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

838 
__robu°√ss
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1));

843 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


848 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

849 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


850 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

853 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

857 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

864 #ifde‡
__USE_XOPEN2K


866 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

867 
__c⁄°
 
time•ec
 *
__ª°ri˘


868 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

873 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

877 
__THROW
 
	`__n⁄nuŒ
 ((1));

879 #ifde‡
__USE_XOPEN2K


881 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

882 
__c⁄°
 
time•ec
 *
__ª°ri˘


883 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

887 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

888 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

895 
__THROW
 
	`__n⁄nuŒ
 ((1));

898 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1));

902 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

903 
__ª°ri˘
 
__©å
,

904 *
__ª°ri˘
 
__psh¨ed
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

908 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

909 
__psh¨ed
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1));

913 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

914 
__ª°ri˘
 
__©å
,

915 *
__ª°ri˘
 
__¥ef
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

919 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

920 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

929 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


930 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

950 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

951 
	`__n⁄nuŒ
 ((1, 2));

960 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

961 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

962 
__c⁄°
 
time•ec
 *
__ª°ri˘


963 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

968 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

969 
__THROW
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1));

976 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

977 
__ª°ri˘
 
__©å
,

978 *
__ª°ri˘
 
__psh¨ed
)

979 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

982 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

983 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

985 #ifde‡
__USE_XOPEN2K


987 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

988 
__ª°ri˘
 
__©å
,

989 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

990 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

993 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

994 
__˛ockid_t
 
__˛ock_id
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1));

999 #ifde‡
__USE_XOPEN2K


1004 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1005 
__THROW
 
	`__n⁄nuŒ
 ((1));

1008 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1017 
__THROW
 
	`__n⁄nuŒ
 ((1));

1020 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1029 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1030 
__©å
, 
__cou¡
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1));

1034 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1038 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1044 
__THROW
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1048 
__THROW
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1052 
__ª°ri˘
 
__©å
,

1053 *
__ª°ri˘
 
__psh¨ed
)

1054 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1057 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1058 
__psh¨ed
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1072 (*
__de°r_fun˘i⁄
) (*))

1073 
__THROW
 
	`__n⁄nuŒ
 ((1));

1076 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1079 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1082 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1083 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1086 #ifde‡
__USE_XOPEN2K


1088 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1089 
__˛ockid_t
 *
__˛ock_id
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((2));

1105 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1106 (*
__∑ª¡
) (),

1107 (*
__chûd
Ë()Ë
__THROW
;

1110 #ifde‡
__USE_EXTERN_INLINES


1112 
__exã∫_ölöe
 

1113 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1115  
__thªad1
 =
__thªad2
;

1116 
	}
}

1119 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@
1
.
1
/usr/include
153
2410
asm.h
assert.h
atomic.h
bio.c
bootasm.S
bootmain.c
bootother.S
buddy.c
buddy.h
buf.h
cat.c
console.c
defs.h
dev.h
echo.c
elf.h
errorno.h
exec.c
fcntl.h
file.c
file.h
forktest.c
fs.c
fs.h
fsvar.h
grep.c
ide.c
idle.c
idlecode.S
init.c
initcode.S
ioapic.c
kalloc.c
kbd.c
kbd.h
kill.c
lapic.c
ln.c
ls.c
main.c
matmul16.c
memlayout.h
mkdir.c
mkfs.c
mmu.h
mp.c
mp.h
param.h
picirq.c
pipe.c
pmap.c
pmap.h
printf.c
proc.c
proc.h
queue.h
rm.c
rq.c
rq.h
sched.c
sched.h
sched_MLFQ.c
sched_MLFQ.h
sched_RR.c
sched_RR.h
sched_fifo.c
sched_fifo.h
sh.c
spinlock.c
spinlock.h
stat.h
string.c
swtch.S
syscall.c
syscall.h
sysfile.c
sysproc.c
timer.c
trap.c
trapasm.S
traps.h
types.h
ulib.c
umalloc.c
user.h
usertests.c
usys.S
wc.c
x86.h
zombie.c
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/setjmp.h
/usr/include/signal.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/sys/ucontext.h
